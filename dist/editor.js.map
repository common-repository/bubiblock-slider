{"version":3,"file":"editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/slider/edit.js","webpack:///./src/blocks/slider/index.js","webpack:///./src/blocks/slider/style.editor.scss?046f","webpack:///./src/editor.js","webpack:///external [\"wp\",\"blob\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"date\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/editor.js\");\n","import { Component} from \"@wordpress/element\";\nimport { __ } from \"@wordpress/i18n\";\nimport { withSelect } from \"@wordpress/data\";\nimport { isBlobURL } from \"@wordpress/blob\";\nimport { PanelBody, BaseControl, ColorPicker, FontSizePicker, RangeControl, TextControl, SelectControl, Button, ButtonGroup, Tooltip, TextareaControl, ToggleControl, TabPanel, MenuItem, Notice, RadioControl, ColorIndicator, Panel, Spinner} from \"@wordpress/components\";\nimport { __experimentalGetSettings } from '@wordpress/date';\nimport {__experimentalPanelColorGradientSettings as PanelColorGradientSettings, __experimentalColorGradientControl as ColorGradientControl,RichText, InspectorControls, MediaPlaceholder, PanelColorSettings, InnerBlocks, ColorPaletteControl} from '@wordpress/block-editor';\n\n// Font Family\nconst bubiOptionsFont=[\n    {label: __('Anton','bubiblock-slider'), value: 'Anton'+',sans-serif'},\n    {label: __('IBM Plex Sans','bubiblock-slider'), value: 'IBM Plex Sans'+',sans-serif'},\n    {label: __('Inconsolata','bubiblock-slider'), value: 'Inconsolata'+',monospace'},\n    {label: __('Montserrat','bubiblock-slider'), value: 'Montserrat'+',sans-serif'},\n    {label: __('Orbitron','bubiblock-slider'), value: 'Orbitron'+',sans-serif'},\n    {label: __('Oxygen','bubiblock-slider'), value: 'Oxygen'+',sans-serif'},\n ]\n\nconst bubiOptionsWeight=[\n    {label: __('100','bubiblock-slider'), value: '100'},\n    {label: __('200','bubiblock-slider'), value: '200'},\n    {label: __('300','bubiblock-slider'), value: '300'},\n    {label: __('400','bubiblock-slider'), value: '400'},\n    {label: __('500','bubiblock-slider'), value: '500'},\n    {label: __('600','bubiblock-slider'), value: '600'},\n    {label: __('700','bubiblock-slider'), value: '700'},\n    {label: __('800','bubiblock-slider'), value: '800'},\n    {label: __('900','bubiblock-slider'), value: '900'},\n]\n\n// Effect Slider\nconst bubiOptionsEffectAnimate=[\n    {label: __('No Effect','bubiblock-slider'), value: 'df-no-effect'},\n    {label: __('Bounce','bubiblock-slider'), value: 'animate__bounce'},\n    {label: __('Swing','bubiblock-slider'), value: 'animate__swing'},\n    {label: __('Tada','bubiblock-slider'), value: 'animate__tada'},\n    {label: __('Fade In','bubiblock-slider'), value: 'animate__fadeIn'},\n    {label: __('Fade In Down','bubiblock-slider'), value: 'animate__fadeInDown'},\n    {label: __('Fade In Left','bubiblock-slider'), value: 'animate__fadeInLeft'},\n    {label: __('Fade In Right','bubiblock-slider'), value: 'animate__fadeInRight'},\n    {label: __('Fade In Up','bubiblock-slider'), value: 'animate__fadeInUp'},\n    {label: __('Fade Out','bubiblock-slider'), value: 'animate__fadeOut'},\n    {label: __('Flip In X','bubiblock-slider'), value: 'animate__flipInX'},\n    {label: __('Rotate In','bubiblock-slider'), value: 'animate__rotateIn'},\n    {label: __('Zoom In','bubiblock-slider'), value: 'animate__zoomIn'},\n    {label: __('Zoom In Down','bubiblock-slider'), value: 'animate__zoomInDown'},\n    {label: __('Zoom In Left','bubiblock-slider'), value: 'animate__zoomInLeft'},\n    {label: __('Zoom In Right','bubiblock-slider'), value: 'animate__zoomInRight'},\n    {label: __('Zoom In Up','bubiblock-slider'), value: 'animate__zoomInUp'},\n    {label: __('Slide In Down','bubiblock-slider'), value: 'animate__slideInDown'},\n    {label: __('Slide In Left','bubiblock-slider'), value: 'animate__slideInLeft'},\n    {label: __('Slide In Right','bubiblock-slider'), value: 'animate__slideInRight'},\n    {label: __('Slide In Up','bubiblock-slider'), value: 'animate__slideInUp'},\n]\n\nconst bubiOptionEffectSpeed= [\n    {label: __('Fast','bubiblock-slider'), value: 'animate__fast'},\n    {label: __('Slow','bubiblock-slider'), value: 'animate__slow'},\n    {label: __('Slower','bubiblock-slider'), value: 'animate__slower'},\n]\n\nconst bubiOptionEffectDalay =[\n    {label: __('None','bubiblock-slider'), value: 'animate__delay-0s'},\n    {label: __('One second','bubiblock-slider'), value: 'animate__delay-1s'},\n    {label: __('Four seconds','bubiblock-slider'), value: 'animate__delay-4s'},\n]\n\nconst bubiOptionEffectRepeat =[\n    {label: __('Repeat 1','bubiblock-slider'), value: 'animate__repeat-1'},\n    {label: __('Repeat 2','bubiblock-slider'), value: 'animate__repeat-2'},\n]\n\n// Custom color palette\nconst bubiColors = [\n    { name: __('purple','bubiblock-slider'), color: '#8321D2' },\n    { name: __('turquoise','bubiblock-slider'), color: '#6FE1DA' },\n    { name: __('yellow','bubiblock-slider'), color: '#fbe901' },\n    { name: __('pink','bubiblock-slider'), color: '#f0b9ff' },\n    { name: __('black','bubiblock-slider'), color: '#000' },\n    { name: __('white','bubiblock-slider'), color: '#fff' },\n];\n\n// Custom color gradient\nconst bubiGradients=[\n    {\n        name: __('Aqua Spray','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #00d2ff 0%, #3a47d5 100%)',\n        slug: 'aqua-spray',\n    },\n    {\n        name: __('Shady Lane','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #3F2B96 0%, #A8C0FF 100%)',\n        slug: 'shady-lane',\n    },\n    {\n        name: __('Disco Club','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #FC466B 0%, #3F5EFB 100%)',\n        slug: 'disco-club',\n    },\n    {\n        name: __('Kale Salad','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #00C9FF 0%, #92FE9D 100%)',\n        slug: 'kale-salad',\n    },\n    {\n        name: __('Bloody Mimosa','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #d53369 0%, #daae51 100%)',\n        slug: 'bloody-mimosa',\n    },\n    {\n        name: __('Mello Yellow','bubiblock-slider'),\n        gradient:\n            'linear-gradient(90deg, #f8ff00 0%, #3ad59f 100%)',\n        slug: 'mello-yellow',\n    },\n];\n\nclass SliderEdit extends Component {\n\n    state = {\n        selectedLink: null\n    }\n\n    // General Settings\n    onChangeBubiblcok_fontfamily = (bubiblcok_fontfamily) => {\n        this.props.setAttributes({bubiblcok_fontfamily})\n    }\n\n    onChangeBubiblcok_fontfamily_weight = (bubiblcok_fontfamily_weight) => {\n        this.props.setAttributes({bubiblcok_fontfamily_weight})\n    }\n\n    onChangeBubiblcok_fontfamily_descritpion = (bubiblcok_fontfamily_descritpion) => {\n        this.props.setAttributes({bubiblcok_fontfamily_descritpion})\n    }\n\n    onChangeBubiblcok_fontfamily_weight_description = (bubiblcok_fontfamily_weight_description) => {\n        this.props.setAttributes({bubiblcok_fontfamily_weight_description})\n    }\n\n    onChangeBubiblcok_fontfamily_button = (bubiblcok_fontfamily_button) => {\n        this.props.setAttributes({bubiblcok_fontfamily_button})\n    }\n\n    onChangeBubiblcok_fontfamily_weight_button = (bubiblcok_fontfamily_weight_button) => {\n        this.props.setAttributes({bubiblcok_fontfamily_weight_button})\n    }\n\n    onChangeHeight_slider = (height_slider) => {\n        this.props.setAttributes({height_slider})\n    }\n\n    onChangeDf_height_slider_auto = (df_height_slider_auto) => {\n        this.props.setAttributes({df_height_slider_auto})\n    }\n\n    onChangeHeight_slider_table = (height_slider_table) => {\n        this.props.setAttributes({height_slider_table})\n    }\n\n    onChangeHeight_slider_mobile = (height_slider_mobile) => {\n        this.props.setAttributes({height_slider_mobile})\n    }\n\n    onChangeBubiblock_full_slider = (bubiblock_full_slider) => {\n        this.props.setAttributes({bubiblock_full_slider})\n    }\n\n    onChangeBubiblock_padding_slider = (bubiblock_padding_slider) => {\n        this.props.setAttributes({bubiblock_padding_slider})\n    }\n\n    onChangeBubiblock_padding_b_slider = (bubiblock_padding_b_slider) => {\n        this.props.setAttributes({bubiblock_padding_b_slider})\n    }\n\n    onChangeBubiblock_padding_slider_table = (bubiblock_padding_block_slider_table) => {\n        this.props.setAttributes({bubiblock_padding_block_slider_table})\n    }\n\n    onChangeBubiblock_padding_b_slider_table = (bubiblock_padding_b_block_slider_table) => {\n        this.props.setAttributes({bubiblock_padding_b_block_slider_table})\n    }\n\n    onChangeBubiblock_padding_block_slider_mobile = (bubiblock_padding_block_slider_mobile) => {\n        this.props.setAttributes({bubiblock_padding_block_slider_mobile})\n    }\n\n    onChangeBubiblock_padding_b_block_slider_mobile = (bubiblock_padding_b_block_slider_mobile) => {\n        this.props.setAttributes({bubiblock_padding_b_block_slider_mobile})\n    }\n\n    onChangeBubiblock_radius_slider = (bubiblock_radius_slider) => {\n        this.props.setAttributes({bubiblock_radius_slider})\n    }\n\n    onChangeBubiblock_carousle_touch = ( bubiblock_carousle_touch) => {\n        this.props.setAttributes({ bubiblock_carousle_touch})\n    }\n\n    onChangeBubiblock_padding_block_slider = ( bubiblock_padding_block_slider) => {\n        this.props.setAttributes({ bubiblock_padding_block_slider})\n    }\n\n    onChangeBubiblock_padding_b_block_slider = ( bubiblock_padding_b_block_slider) => {\n        this.props.setAttributes({ bubiblock_padding_b_block_slider})\n    }\n\n    onChangeBubiopacityblock_slider = ( bubiopacityblock_slider) => {\n        this.props.setAttributes({ bubiopacityblock_slider})\n    }\n\n    onChangeDf_arrow_slider_type = (df_arrow_slider_type) => {\n        this.props.setAttributes({df_arrow_slider_type})\n    }\n\n    onChangeDf_size_arrow = (df_size_arrow) => {\n        this.props.setAttributes({df_size_arrow})\n    }\n\n    onChangeDf_size_arrow_table = (df_size_arrow_table) => {\n        this.props.setAttributes({df_size_arrow_table})\n    }\n\n    onChangeDf_size_arrow_mobile = (df_size_arrow_mobile) => {\n        this.props.setAttributes({df_size_arrow_mobile})\n    }\n\n    onChangeBubi_marginarrow = (bubi_marginarrow) => {\n        this.props.setAttributes({bubi_marginarrow})\n    }\n\n    onChangeBubiopacityarrow = (bubiopacityarrow) => {\n        this.props.setAttributes({bubiopacityarrow})\n    }\n\n    onChangeBubiopacityhoverarrow = (bubiopacityhoverarrow) => {\n        this.props.setAttributes({bubiopacityhoverarrow})\n    }\n\n    onChangeDf_dot_slider_type = (df_dot_slider_type) => {\n        this.props.setAttributes({df_dot_slider_type})\n    }\n\n    onChangeDf_width_dot = (df_width_dot) => {\n        this.props.setAttributes({df_width_dot})\n    }\n\n    onChangeDf_height_dot = (df_height_dot) => {\n        this.props.setAttributes({df_height_dot})\n    }\n\n    onChangeBubiblock_height_dot_active = (bubiblock_height_dot_active) => {\n        this.props.setAttributes({bubiblock_height_dot_active})\n    }\n\n    onChangeDf_bottom_dot = (df_bottom_dot) => {\n        this.props.setAttributes({df_bottom_dot})\n    }\n\n    componentDidMount() {\n        const { attributes, setAttributes } = this.props;\n        const { url, id } = attributes;\n        if(url && isBlobURL(url) && !id) {\n            setAttributes({\n                url: '',\n                alt: ''\n            })\n        }\n    }\n    // Slider 1\n    onSelectImage = ({id, url, alt}) => {\n        this.props.setAttributes({\n            id, url, alt\n        })\n    }\n    onSelectURL = (url) => {\n        this.props.setAttributes({\n            url,\n            id: null,\n            alt: ''\n        })\n    }\n    onUploadError = (message) => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice( message );\n    }\n    removeImage = () => {\n        this.props.setAttributes({\n            id: null,\n            url: '',\n            alt: ''\n        })\n    }\n    updateAlt = (alt) => {\n        this.props.setAttributes({\n            alt\n        })\n    }\n\n    onChangeDf_cover_img1 = (df_cover_img1) => {\n        this.props.setAttributes({df_cover_img1})\n    }\n\n    onChangeDf_focalPoint_img_1 = (df_focalPoint_img_1) => {\n        this.props.setAttributes({df_focalPoint_img_1})\n    }\n\n    onChangeDf_focalPoint_y_img_1 = (df_focalPoint_y_img_1) => {\n        this.props.setAttributes({df_focalPoint_y_img_1})\n    }\n\n    onChangeDf_mask_slider_1 = (df_mask_slider_1) => {\n        this.props.setAttributes({df_mask_slider_1})\n    }\n\n    onChangeDf_opacity_mask_1 = (df_opacity_mask_1) => {\n        this.props.setAttributes({df_opacity_mask_1})\n    }\n\n    onChangeEffectcaption1 = (effectcaption1) => {\n        this.props.setAttributes({effectcaption1})\n    }\n\n    onChangeDf_speed_effectcaption1 = ( df_speed_effectcaption1) => {\n        this.props.setAttributes({ df_speed_effectcaption1})\n    }\n\n    onChangeDf_delay_effectcaption1 = ( df_delay_effectcaption1) => {\n        this.props.setAttributes({ df_delay_effectcaption1})\n    }\n\n    onChangeDf_repeat_effectcaption1 = ( df_repeat_effectcaption1) => {\n        this.props.setAttributes({ df_repeat_effectcaption1})\n    }\n\n    onChangeEffectinfo1 = (effectinfo1) => {\n        this.props.setAttributes({effectinfo1})\n    }\n\n    onChangeDf_speed_effectinfo1 = ( df_speed_effectinfo1) => {\n        this.props.setAttributes({ df_speed_effectinfo1})\n    }\n\n    onChangeDf_delay_effectinfo1 = ( df_delay_effectinfo1) => {\n        this.props.setAttributes({ df_delay_effectinfo1})\n    }\n\n    onChangeDf_repeat_effectinfo1 = ( df_repeat_effectinfo1) => {\n        this.props.setAttributes({ df_repeat_effectinfo1})\n    }\n\n    onChangeEffectbutton1 = (effectbutton1) => {\n        this.props.setAttributes({effectbutton1})\n    }\n\n    onChangeDf_speed_effectbutton1 = ( df_speed_effectbutton1) => {\n        this.props.setAttributes({ df_speed_effectbutton1})\n    }\n\n    onChangeDf_delay_effectbutton1 = ( df_delay_effectbutton1) => {\n        this.props.setAttributes({ df_delay_effectbutton1})\n    }\n\n    onChangeDf_repeat_effectbutton1 = ( df_repeat_effectbutton1) => {\n        this.props.setAttributes({ df_repeat_effectbutton1})\n    }\n\n    onChangeMargin_bottom_caption1 = (margin_bottom_caption1) => {\n        this.props.setAttributes({margin_bottom_caption1})\n    }\n\n    onChangeMargin_bottom_table_caption1 = (margin_bottom_table_caption1) => {\n        this.props.setAttributes({margin_bottom_table_caption1})\n    }\n\n    onChangeMargin_bottom_mobile_caption1 = (margin_bottom_mobile_caption1) => {\n        this.props.setAttributes({margin_bottom_mobile_caption1})\n    }\n\n    onChangeMargin_bottom_info1 = (margin_bottom_info1) => {\n        this.props.setAttributes({margin_bottom_info1})\n    }\n\n    onChangeMargin_bottom_table_info1 = (margin_bottom_table_info1) => {\n        this.props.setAttributes({margin_bottom_table_info1})\n    }\n\n    onChangeMargin_bottom_mobile_info1 = (margin_bottom_mobile_info1) => {\n        this.props.setAttributes({margin_bottom_mobile_info1})\n    }\n\n    onChangeMargin_bottom_button1 = (margin_bottom_button1) => {\n        this.props.setAttributes({margin_bottom_button1})\n    }\n\n    onChangeMargin_bottom_table_button1 = (margin_bottom_table_button1) => {\n        this.props.setAttributes({margin_bottom_table_button1})\n    }\n\n    onChangeMargin_bottom_mobile_button1 = (margin_bottom_mobile_button1) => {\n        this.props.setAttributes({margin_bottom_mobile_button1})\n    }\n\n    onChangeTitle1 = (title1) => {\n        this.props.setAttributes({title1})\n    }\n\n    onChangeInfo1 = (info1) => {\n        this.props.setAttributes({info1})\n    }\n\n    onChangeButton1 = (button1) => {\n        this.props.setAttributes({button1})\n    }\n\n    onChangeFontsizetitle1 = (fontsizetitle1) => {\n        this.props.setAttributes({fontsizetitle1})\n    }\n\n    onChangeFontsizetitle1table = (fontsizetitle1table) => {\n        this.props.setAttributes({fontsizetitle1table})\n    }\n\n    onChangeFontsizetitle1mobile = (fontsizetitle1mobile) => {\n        this.props.setAttributes({fontsizetitle1mobile})\n    }\n\n    onChangeFontsizeinfo1 = (fontsizeinfo1) => {\n        this.props.setAttributes({fontsizeinfo1})\n    }\n\n    onChangeFontsizeinfo1table = (fontsizeinfo1table) => {\n        this.props.setAttributes({fontsizeinfo1table})\n    }\n\n    onChangeFontsizeinfo1mobile = (fontsizeinfo1mobile) => {\n        this.props.setAttributes({fontsizeinfo1mobile})\n    }\n\n    onChangeFontsizebutton1 = (fontsizebutton1) => {\n        this.props.setAttributes({fontsizebutton1})\n    }\n\n    onChangeFontsizebutton1table = (fontsizebutton1table) => {\n        this.props.setAttributes({fontsizebutton1table})\n    }\n\n    onChangeFontsizebutton1mobile = (fontsizebutton1mobile) => {\n        this.props.setAttributes({fontsizebutton1mobile})\n    }\n\n    onChangeDf_enable_divide_1 = ( df_enable_divide_1) => {\n        this.props.setAttributes({ df_enable_divide_1})\n    }\n\n    onChangeDf_height_divide_1 = ( df_height_divide_1) => {\n        this.props.setAttributes({ df_height_divide_1})\n    }\n\n    onChangeDf_height_table_divide_1 = ( df_height_table_divide_1) => {\n        this.props.setAttributes({ df_height_table_divide_1})\n    }\n\n    onChangeDf_height_mobile_divide_1 = ( df_height_mobile_divide_1) => {\n        this.props.setAttributes({ df_height_mobile_divide_1})\n    }\n\n    onChangeBubiblock_dalay_divide_1 = ( bubiblock_dalay_divide_1) => {\n        this.props.setAttributes({ bubiblock_dalay_divide_1})\n    }\n\n    onChangeDf_enable_divide_bottom_1 = ( df_enable_divide_bottom_1) => {\n        this.props.setAttributes({ df_enable_divide_bottom_1})\n    }\n\n    onChangeDf_height_divide_bottom_1 = ( df_height_divide_bottom_1) => {\n        this.props.setAttributes({ df_height_divide_bottom_1})\n    }\n\n    onChangeDf_height_table_divide_bottom_1 = ( df_height_table_divide_bottom_1) => {\n        this.props.setAttributes({ df_height_table_divide_bottom_1})\n    }\n\n    onChangeDf_height_mobile_divide_bottom_1 = ( df_height_mobile_divide_bottom_1) => {\n        this.props.setAttributes({ df_height_mobile_divide_bottom_1})\n    }\n\n    onChangeBubiblock_dalay_divide_1_bottom = (  bubiblock_dalay_divide_1_bottom) => {\n        this.props.setAttributes({  bubiblock_dalay_divide_1_bottom})\n    }\n\n    // Slider 2\n    onSelectURL2 = (imageUrl_2) => {\n        this.props.setAttributes({\n            imageUrl_2,\n            id2: null,\n            alt2: ''\n        })\n    }\n    onUploadError2 = (message) => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice( message );\n    }\n    removeImage2 = () => {\n        this.props.setAttributes({\n            id2: null,\n            imageUrl_2: '',\n            alt2: ''\n        })\n    }\n    updateAlt2 = (alt2) => {\n        this.props.setAttributes({\n            alt2\n        })\n    }\n    onChangeDf_cover_img2 = (df_cover_img2) => {\n        this.props.setAttributes({df_cover_img2})\n    }\n\n    onChangeDf_focalPoint_img_2 = (df_focalPoint_img_2) => {\n        this.props.setAttributes({df_focalPoint_img_2})\n    }\n\n    onChangeDf_focalPoint_y_img_2 = (df_focalPoint_y_img_2) => {\n        this.props.setAttributes({df_focalPoint_y_img_2})\n    }\n\n    onChangeDf_mask_slider_2 = (df_mask_slider_2) => {\n        this.props.setAttributes({df_mask_slider_2})\n    }\n\n    onChangeDf_opacity_mask_2 = (df_opacity_mask_2) => {\n        this.props.setAttributes({df_opacity_mask_2})\n    }\n\n    onChangeEffectcaption2 = (effectcaption2) => {\n        this.props.setAttributes({effectcaption2})\n    }\n\n    onChangeDf_speed_effectcaption2 = ( df_speed_effectcaption2) => {\n        this.props.setAttributes({ df_speed_effectcaption2})\n    }\n\n    onChangeDf_delay_effectcaption2 = ( df_delay_effectcaption2) => {\n        this.props.setAttributes({ df_delay_effectcaption2})\n    }\n\n    onChangeDf_repeat_effectcaption2 = ( df_repeat_effectcaption2) => {\n        this.props.setAttributes({ df_repeat_effectcaption2})\n    }\n\n    onChangeEffectinfo2 = (effectinfo2) => {\n        this.props.setAttributes({effectinfo2})\n    }\n\n    onChangeDf_speed_effectinfo2 = ( df_speed_effectinfo2) => {\n        this.props.setAttributes({ df_speed_effectinfo2})\n    }\n\n    onChangeDf_delay_effectinfo2 = ( df_delay_effectinfo2) => {\n        this.props.setAttributes({ df_delay_effectinfo2})\n    }\n\n    onChangeDf_repeat_effectinfo2 = ( df_repeat_effectinfo2) => {\n        this.props.setAttributes({ df_repeat_effectinfo2})\n    }\n\n    onChangeEffectbutton2 = (effectbutton2) => {\n        this.props.setAttributes({effectbutton2})\n    }\n\n    onChangeDf_speed_effectbutton2= ( df_speed_effectbutton2) => {\n        this.props.setAttributes({ df_speed_effectbutton2})\n    }\n\n    onChangeDf_delay_effectbutton2 = ( df_delay_effectbutton2) => {\n        this.props.setAttributes({ df_delay_effectbutton2})\n    }\n\n    onChangeDf_repeat_effectbutton2 = ( df_repeat_effectbutton2) => {\n        this.props.setAttributes({ df_repeat_effectbutton2})\n    }\n\n    onChangeMargin_bottom_caption2 = (margin_bottom_caption2) => {\n        this.props.setAttributes({margin_bottom_caption2})\n    }\n\n    onChangeMargin_bottom_table_caption2 = (margin_bottom_table_caption2) => {\n        this.props.setAttributes({margin_bottom_table_caption2})\n    }\n\n    onChangeMargin_bottom_mobile_caption2 = (margin_bottom_mobile_caption2) => {\n        this.props.setAttributes({margin_bottom_mobile_caption2})\n    }\n\n    onChangeMargin_bottom_info2 = (margin_bottom_info2) => {\n        this.props.setAttributes({margin_bottom_info2})\n    }\n\n    onChangeMargin_bottom_table_info2 = (margin_bottom_table_info2) => {\n        this.props.setAttributes({margin_bottom_table_info2})\n    }\n\n    onChangeMargin_bottom_mobile_info2 = (margin_bottom_mobile_info2) => {\n        this.props.setAttributes({margin_bottom_mobile_info2})\n    }\n\n    onChangeMargin_bottom_button2 = (margin_bottom_button2) => {\n        this.props.setAttributes({margin_bottom_button2})\n    }\n\n    onChangeMargin_bottom_table_button2 = (margin_bottom_table_button2) => {\n        this.props.setAttributes({margin_bottom_table_button2})\n    }\n\n    onChangeMargin_bottom_mobile_button2 = (margin_bottom_mobile_button2) => {\n        this.props.setAttributes({margin_bottom_mobile_button2})\n    }\n\n    onChangeTitle2 = (title2) => {\n        this.props.setAttributes({title2})\n    }\n\n    onChangeInfo2 = (info2) => {\n        this.props.setAttributes({info2})\n    }\n\n    onChangeButton2 = (button2) => {\n        this.props.setAttributes({button2})\n    }\n\n    onChangeFontsizetitle2 = (fontsizetitle2) => {\n        this.props.setAttributes({fontsizetitle2})\n    }\n\n    onChangeFontsizetitle2table = (fontsizetitle2table) => {\n        this.props.setAttributes({fontsizetitle2table})\n    }\n\n    onChangeFontsizetitle2mobile = (fontsizetitle2mobile) => {\n        this.props.setAttributes({fontsizetitle2mobile})\n    }\n\n    onChangeFontsizeinfo2 = (fontsizeinfo2) => {\n        this.props.setAttributes({fontsizeinfo2})\n    }\n\n    onChangeFontsizeinfo2table = (fontsizeinfo2table) => {\n        this.props.setAttributes({fontsizeinfo2table})\n    }\n\n    onChangeFontsizeinfo2mobile = (fontsizeinfo2mobile) => {\n        this.props.setAttributes({fontsizeinfo2mobile})\n    }\n\n    onChangeFontsizebutton2 = (fontsizebutton2) => {\n        this.props.setAttributes({fontsizebutton2})\n    }\n\n    onChangeFontsizebutton2table = (fontsizebutton2table) => {\n        this.props.setAttributes({fontsizebutton2table})\n    }\n\n    onChangeFontsizebutton2mobile = (fontsizebutton2mobile) => {\n        this.props.setAttributes({fontsizebutton2mobile})\n    }\n\n    onChangeDf_enable_divide_2 = ( df_enable_divide_2) => {\n        this.props.setAttributes({ df_enable_divide_2})\n    }\n\n    onChangeDf_height_divide_2 = ( df_height_divide_2) => {\n        this.props.setAttributes({ df_height_divide_2})\n    }\n\n    onChangeDf_height_table_divide_2 = ( df_height_table_divide_2) => {\n        this.props.setAttributes({ df_height_table_divide_2})\n    }\n\n    onChangeDf_height_mobile_divide_2 = ( df_height_mobile_divide_2) => {\n        this.props.setAttributes({ df_height_mobile_divide_2})\n    }\n\n    onChangeBubiblock_dalay_divide_2 = ( bubiblock_dalay_divide_2) => {\n        this.props.setAttributes({ bubiblock_dalay_divide_2})\n    }\n\n    onChangeDf_enable_divide_bottom_2 = ( df_enable_divide_bottom_2) => {\n        this.props.setAttributes({ df_enable_divide_bottom_2})\n    }\n\n    onChangeDf_height_divide_bottom_2 = ( df_height_divide_bottom_2) => {\n        this.props.setAttributes({ df_height_divide_bottom_2})\n    }\n\n    onChangeDf_height_table_divide_bottom_2 = ( df_height_table_divide_bottom_2) => {\n        this.props.setAttributes({ df_height_table_divide_bottom_2})\n    }\n\n    onChangeDf_height_mobile_divide_bottom_2 = ( df_height_mobile_divide_bottom_2) => {\n        this.props.setAttributes({ df_height_mobile_divide_bottom_2})\n    }\n\n    onChangeBubiblock_dalay_divide_2_bottom = (  bubiblock_dalay_divide_2_bottom) => {\n        this.props.setAttributes({  bubiblock_dalay_divide_2_bottom})\n    }\n\n    // Slider 3\n    onSelectURL3 = (imageUrl_3) => {\n        this.props.setAttributes({\n            imageUrl_3,\n            id3: null,\n            alt3: ''\n        })\n    }\n    onUploadError3 = (message) => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice( message );\n    }\n    removeImage3 = () => {\n        this.props.setAttributes({\n            id3: null,\n            imageUrl_3: '',\n            alt3: ''\n        })\n    }\n    updateAlt3 = (alt3) => {\n        this.props.setAttributes({\n            alt3\n        })\n    }\n\n    onChangeDf_cover_img3 = (df_cover_img3) => {\n        this.props.setAttributes({df_cover_img3})\n    }\n\n    onChangeDf_focalPoint_img_3 = (df_focalPoint_img_3) => {\n        this.props.setAttributes({df_focalPoint_img_3})\n    }\n\n    onChangeDf_focalPoint_y_img_3 = (df_focalPoint_y_img_3) => {\n        this.props.setAttributes({df_focalPoint_y_img_3})\n    }\n\n    onChangeDf_mask_slider_3 = (df_mask_slider_3) => {\n        this.props.setAttributes({df_mask_slider_3})\n    }\n\n    onChangeDf_opacity_mask_3 = (df_opacity_mask_3) => {\n        this.props.setAttributes({df_opacity_mask_3})\n    }\n\n    onChangeEffectcaption3 = (effectcaption3) => {\n        this.props.setAttributes({effectcaption3})\n    }\n\n    onChangeDf_speed_effectcaption3 = ( df_speed_effectcaption3) => {\n        this.props.setAttributes({ df_speed_effectcaption3})\n    }\n\n    onChangeDf_delay_effectcaption3 = ( df_delay_effectcaption3) => {\n        this.props.setAttributes({ df_delay_effectcaption3})\n    }\n\n    onChangeDf_repeat_effectcaption3 = ( df_repeat_effectcaption3) => {\n        this.props.setAttributes({ df_repeat_effectcaption3})\n    }\n\n    onChangeEffectinfo3 = (effectinfo3) => {\n        this.props.setAttributes({effectinfo3})\n    }\n\n    onChangeDf_speed_effectinfo3 = ( df_speed_effectinfo3) => {\n        this.props.setAttributes({ df_speed_effectinfo3})\n    }\n\n    onChangeDf_delay_effectinfo3 = ( df_delay_effectinfo3) => {\n        this.props.setAttributes({ df_delay_effectinfo3})\n    }\n\n    onChangeDf_repeat_effectinfo3 = ( df_repeat_effectinfo3) => {\n        this.props.setAttributes({ df_repeat_effectinfo3})\n    }\n\n    onChangeEffectbutton3 = (effectbutton3) => {\n        this.props.setAttributes({effectbutton3})\n    }\n\n    onChangeDf_speed_effectbutton3 = ( df_speed_effectbutton3) => {\n        this.props.setAttributes({ df_speed_effectbutton3})\n    }\n\n    onChangeDf_delay_effectbutton3 = ( df_delay_effectbutton3) => {\n        this.props.setAttributes({ df_delay_effectbutton3})\n    }\n\n    onChangeDf_repeat_effectbutton3 = ( df_repeat_effectbutton3) => {\n        this.props.setAttributes({ df_repeat_effectbutton3})\n    }\n\n    onChangeMargin_bottom_caption3 = (margin_bottom_caption3) => {\n        this.props.setAttributes({margin_bottom_caption3})\n    }\n\n    onChangeMargin_bottom_table_caption3 = (margin_bottom_table_caption3) => {\n        this.props.setAttributes({margin_bottom_table_caption3})\n    }\n\n    onChangeMargin_bottom_mobile_caption3 = (margin_bottom_mobile_caption3) => {\n        this.props.setAttributes({margin_bottom_mobile_caption3})\n    }\n\n    onChangeMargin_bottom_info3 = (margin_bottom_info3) => {\n        this.props.setAttributes({margin_bottom_info3})\n    }\n\n    onChangeMargin_bottom_table_info3 = (margin_bottom_table_info3) => {\n        this.props.setAttributes({margin_bottom_table_info3})\n    }\n\n    onChangeMargin_bottom_mobile_info3 = (margin_bottom_mobile_info3) => {\n        this.props.setAttributes({margin_bottom_mobile_info3})\n    }\n\n    onChangeMargin_bottom_button3 = (margin_bottom_button3) => {\n        this.props.setAttributes({margin_bottom_button3})\n    }\n\n    onChangeMargin_bottom_table_button3 = (margin_bottom_table_button3) => {\n        this.props.setAttributes({margin_bottom_table_button3})\n    }\n\n    onChangeMargin_bottom_mobile_button3 = (margin_bottom_mobile_button3) => {\n        this.props.setAttributes({margin_bottom_mobile_button3})\n    }\n\n    onChangeTitle3 = (title3) => {\n        this.props.setAttributes({title3})\n    }\n\n    onChangeInfo3 = (info3) => {\n        this.props.setAttributes({info3})\n    }\n\n    onChangeButton3 = (button3) => {\n        this.props.setAttributes({button3})\n    }\n\n    onChangeFontsizetitle3 = (fontsizetitle3) => {\n        this.props.setAttributes({fontsizetitle3})\n    }\n\n    onChangeFontsizetitle3table = (fontsizetitle3table) => {\n        this.props.setAttributes({fontsizetitle3table})\n    }\n\n    onChangeFontsizetitle3mobile = (fontsizetitle3mobile) => {\n        this.props.setAttributes({fontsizetitle3mobile})\n    }\n\n    onChangeFontsizeinfo3 = (fontsizeinfo3) => {\n        this.props.setAttributes({fontsizeinfo3})\n    }\n\n    onChangeFontsizeinfo3table = (fontsizeinfo3table) => {\n        this.props.setAttributes({fontsizeinfo3table})\n    }\n\n    onChangeFontsizeinfo3mobile = (fontsizeinfo3mobile) => {\n        this.props.setAttributes({fontsizeinfo3mobile})\n    }\n\n    onChangeFontsizebutton3 = (fontsizebutton3) => {\n        this.props.setAttributes({fontsizebutton3})\n    }\n\n    onChangeFontsizebutton3table = (fontsizebutton3table) => {\n        this.props.setAttributes({fontsizebutton3table})\n    }\n\n    onChangeFontsizebutton3mobile = (fontsizebutton3mobile) => {\n        this.props.setAttributes({fontsizebutton3mobile})\n    }\n\n    onChangeDf_enable_divide_3 = ( df_enable_divide_3) => {\n        this.props.setAttributes({ df_enable_divide_3})\n    }\n\n    onChangeDf_height_divide_3 = ( df_height_divide_3) => {\n        this.props.setAttributes({ df_height_divide_3})\n    }\n\n    onChangeDf_height_table_divide_3 = ( df_height_table_divide_3) => {\n        this.props.setAttributes({ df_height_table_divide_3})\n    }\n\n    onChangeDf_height_mobile_divide_3 = ( df_height_mobile_divide_3) => {\n        this.props.setAttributes({ df_height_mobile_divide_3})\n    }\n\n    onChangeBubiblock_dalay_divide_3 = ( bubiblock_dalay_divide_3) => {\n        this.props.setAttributes({ bubiblock_dalay_divide_3})\n    }\n\n    onChangeDf_enable_divide_bottom_3 = ( df_enable_divide_bottom_3) => {\n        this.props.setAttributes({ df_enable_divide_bottom_3})\n    }\n\n    onChangeDf_height_divide_bottom_3 = ( df_height_divide_bottom_3) => {\n        this.props.setAttributes({ df_height_divide_bottom_3})\n    }\n\n    onChangeDf_height_table_divide_bottom_3 = ( df_height_table_divide_bottom_3) => {\n        this.props.setAttributes({ df_height_table_divide_bottom_3})\n    }\n\n    onChangeDf_height_mobile_divide_bottom_3 = ( df_height_mobile_divide_bottom_3) => {\n        this.props.setAttributes({ df_height_mobile_divide_bottom_3})\n    }\n\n    onChangeBubiblock_dalay_divide_3_bottom = (  bubiblock_dalay_divide_3_bottom) => {\n        this.props.setAttributes({  bubiblock_dalay_divide_3_bottom})\n    }\n\n    // Slider 4\n    onSelectURL4 = (imageUrl_4) => {\n        this.props.setAttributes({\n            imageUrl_4,\n            id4: null,\n            alt4: ''\n        })\n    }\n    onUploadError4 = (message) => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice( message );\n    }\n    removeImage4 = () => {\n        this.props.setAttributes({\n            id4: null,\n            imageUrl_4: '',\n            alt4: ''\n        })\n    }\n    updateAlt4 = (alt4) => {\n        this.props.setAttributes({\n            alt4\n        })\n    }\n\n    onChangeTitle4 = (title4) => {\n        this.props.setAttributes({title4})\n    }\n\n    onChangeInfo4 = (info4) => {\n        this.props.setAttributes({info4})\n    }\n\n    onChangeButton4 = (button4) => {\n        this.props.setAttributes({button4})\n    }\n\n    // Slider 5\n    onSelectURL5 = (imageUrl_5) => {\n        this.props.setAttributes({\n            imageUrl_5,\n            id5: null,\n            alt5: ''\n        })\n    }\n    onUploadError5 = (message) => {\n        const { noticeOperations } = this.props;\n        noticeOperations.createErrorNotice( message );\n    }\n    removeImage5 = () => {\n        this.props.setAttributes({\n            id5: null,\n            imageUrl_5: '',\n            alt5: ''\n        })\n    }\n    updateAlt5 = (alt5) => {\n        this.props.setAttributes({\n            alt5\n        })\n    }\n\n    onChangeTitle5 = (title5) => {\n        this.props.setAttributes({title5})\n    }\n\n    onChangeInfo5 = (info5) => {\n        this.props.setAttributes({info5})\n    }\n\n    onChangeButton5 = (button5) => {\n        this.props.setAttributes({button5})\n    }\n\n    render() {\n\n        const { className, attributes, setAttributes, noticeUI, noticeUI2,noticeUI3,noticeUI4,noticeUI5} = this.props;\n        const {\n            bubiblock_padding_caption,\n            bubiblock_padding_table_caption,\n            bubiblock_padding_mobile_caption,\n            bubiblock_padding_table_slider,\n            bubiblock_padding_b_table_slider,\n            bubiblock_padding_mobile_slider,\n            bubiblock_padding_b_mobile_slider,\n            bubiblock_display_button_table_caption,\n            bubiblock_display_button_mobile_caption,\n            bubiblcok_fontfamily,\n            bubiblock_typography_custom,\n            bubiblcok_fontfamily_weight,\n            bubiblock_line_height_title,\n            bubiblcok_fontfamily_descritpion,\n            bubiblcok_fontfamily_weight_description,\n            bubiblock_line_height_info,\n            bubiblcok_fontfamily_button,\n            bubiblcok_fontfamily_weight_button,\n            df_resp,\n            height_slider,\n            df_height_slider_auto,\n            height_slider_table,\n            height_slider_mobile,\n            bubiblock_full_slider,\n            bubiblock_padding_slider,\n            bubiblock_padding_b_slider,\n            bubiblock_radius_slider,\n            bubiblock_background_color_slider,\n            bubiblock_background_gradient_slider,\n            df_interval_slider,\n            bubiblock_speed_slider,\n            bubiblock_speed_flip_slider,\n            bubiblock_id_slider,\n            df_pause_slider,\n            df_effect_slider,\n            bubiblock_show_slider_desktop,\n            bubiblock_show_slider_table,\n            bubiblock_show_slider_mobile,\n            bubiblock_carousle_touch,\n            bubi_block_content_slider,\n            bubiblock_padding_block_slider,\n            bubiblock_padding_b_block_slider,\n            bubiblock_padding_block_slider_table,\n            bubiblock_padding_b_block_slider_table,\n            bubiblock_padding_block_slider_mobile,\n            bubiblock_padding_b_block_slider_mobile,\n            bubiblock_background_color_block_slider,\n            bubiopacityblock_slider,\n            df_arrow_slider,\n            df_arrow_slider_table,\n            df_arrow_slider_mobile,\n            bubi_arrow_position,\n            df_color_arrow,\n            bubiopacityarrow,\n            bubiopacityhoverarrow,\n            df_padding_arrow,\n            df_arrow_slider_type,\n            df_radius_arrow,\n            df_size_arrow,\n            df_size_arrow_table,\n            df_size_arrow_mobile,\n            bubi_marginarrow,\n            df_dot_slider,\n            df_dot_slider_table,\n            df_dot_slider_mobile,\n            df_dot_slider_type,\n            df_width_dot,\n            df_height_dot,\n            bubiblock_height_dot_active,\n            df_color_progress_dot,\n            df_bottom_dot,\n            df_color_dot,\n            //Slider 1\n            df_slider_chose_1,\n            df_mask_slider_1,\n            background_color_solid_mask_1,\n            df_opacity_mask_1,\n            effectcaption1,\n            df_speed_effectcaption1,\n            df_delay_effectcaption1,\n            df_repeat_effectcaption1,\n            margin_bottom_caption1,\n            margin_bottom_table_caption1,\n            margin_bottom_mobile_caption1,\n            margin_bottom_info1,\n            margin_bottom_table_info1,\n            margin_bottom_mobile_info1,\n            effectinfo1,\n            df_speed_effectinfo1,\n            df_delay_effectinfo1,\n            df_repeat_effectinfo1,\n            title1,\n            fontsizetitle1,\n            fontsizetitle1table,\n            fontsizetitle1mobile,\n            info1,\n            fontsizeinfo1,\n            fontsizeinfo1table,\n            fontsizeinfo1mobile,\n            margin_bottom_button1,\n            margin_bottom_table_button1,\n            margin_bottom_mobile_button1,\n            effectbutton1,\n            df_speed_effectbutton1,\n            df_delay_effectbutton1,\n            df_repeat_effectbutton1,\n            alignment_title1,\n            alignment_info1,\n            button1,\n            fontsizebutton1,\n            fontsizebutton1table,\n            fontsizebutton1mobile,\n            alignment_button1,\n            padding_link_button1,\n            padding_right_link_button1,\n            border_radius_top_left_link_button1,\n            border_radius_top_right_link_button1,\n            border_radius_bottom_left_link_button1,\n            border_radius_bottom_right_link_button1,\n            border_size_link_button1,\n            df_background_color_link_button1,\n            df_background_color_hover_link_button1,\n            df_color_link_button1,\n            df_color_hover_link_button1,\n            df_border_color_link_button1,\n            df_background_color_transparent_link_button1,\n            alt,\n            id,\n            url,\n            df_cover_img1,\n            df_focalPoint_img_1,\n            df_focalPoint_y_img_1,\n            df_background_color_slider_1,\n            df_enable_divide_1,\n            divide_1,\n            df_color_divide_1,\n            df_height_divide_1,\n            df_height_table_divide_1,\n            df_height_mobile_divide_1,\n            bubiblock_dalay_divide_1,\n            df_enable_divide_bottom_1,\n            divide_bottom_1,\n            df_color_divide_bottom_1,\n            df_height_divide_bottom_1,\n            df_height_table_divide_bottom_1,\n            df_height_mobile_divide_bottom_1,\n            bubiblock_dalay_divide_1_bottom,\n            bubiblock_link_slider_1,\n            bubiblock_link_tab_slider_1,\n            // Slider 2\n            df_slider_chose_2,\n            df_mask_slider_2,\n            background_color_solid_mask_2,\n            background_color_gradient_mask_2,\n            df_opacity_mask_2,\n            effectcaption2,\n            df_speed_effectcaption2,\n            df_delay_effectcaption2,\n            df_repeat_effectcaption2,\n            margin_bottom_caption2,\n            margin_bottom_table_caption2,\n            margin_bottom_mobile_caption2,\n            margin_bottom_info2,\n            margin_bottom_table_info2,\n            margin_bottom_mobile_info2,\n            effectinfo2,\n            df_speed_effectinfo2,\n            df_delay_effectinfo2,\n            df_repeat_effectinfo2,\n            title2,\n            fontsizetitle2,\n            fontsizetitle2table,\n            fontsizetitle2mobile,\n            info2,\n            fontsizeinfo2,\n            fontsizeinfo2table,\n            fontsizeinfo2mobile,\n            margin_bottom_button2,\n            margin_bottom_table_button2,\n            margin_bottom_mobile_button2,\n            effectbutton2,\n            df_speed_effectbutton2,\n            df_delay_effectbutton2,\n            df_repeat_effectbutton2,\n            alignment_title2,\n            alignment_info2,\n            button2,\n            fontsizebutton2,\n            fontsizebutton2table,\n            fontsizebutton2mobile,\n            alignment_button2,\n            padding_link_button2,\n            padding_right_link_button2,\n            border_radius_top_left_link_button2,\n            border_radius_top_right_link_button2,\n            border_radius_bottom_left_link_button2,\n            border_radius_bottom_right_link_button2,\n            border_size_link_button2,\n            df_background_color_link_button2,\n            df_background_color_hover_link_button2,\n            df_color_link_button2,\n            df_color_hover_link_button2,\n            df_border_color_link_button2,\n            df_background_color_transparent_link_button2,\n            alt2,\n            id2,\n            imageUrl_2,\n            df_cover_img2,\n            df_focalPoint_img_2,\n            df_focalPoint_y_img_2,\n            df_background_color_slider_2,\n            df_enable_divide_2,\n            divide_2,\n            df_color_divide_2,\n            df_height_divide_2,\n            df_height_table_divide_2,\n            df_height_mobile_divide_2,\n            bubiblock_dalay_divide_2,\n            df_enable_divide_bottom_2,\n            divide_bottom_2,\n            df_color_divide_bottom_2,\n            df_height_divide_bottom_2,\n            df_height_table_divide_bottom_2,\n            df_height_mobile_divide_bottom_2,\n            bubiblock_dalay_divide_2_bottom,\n            bubiblock_link_slider_2,\n            bubiblock_link_tab_slider_2,\n            // Slider 3\n            bubiblock_add_slider_3,\n            df_slider_chose_3,\n            df_mask_slider_3,\n            background_color_solid_mask_3,\n            background_color_gradient_mask_3,\n            df_opacity_mask_3,\n            effectcaption3,\n            df_speed_effectcaption3,\n            df_delay_effectcaption3,\n            df_repeat_effectcaption3,\n            margin_bottom_caption3,\n            margin_bottom_table_caption3,\n            margin_bottom_mobile_caption3,\n            margin_bottom_info3,\n            margin_bottom_table_info3,\n            margin_bottom_mobile_info3,\n            effectinfo3,\n            df_speed_effectinfo3,\n            df_delay_effectinfo3,\n            df_repeat_effectinfo3,\n            title3,\n            fontsizetitle3,\n            fontsizetitle3table,\n            fontsizetitle3mobile,\n            info3,\n            fontsizeinfo3,\n            fontsizeinfo3table,\n            fontsizeinfo3mobile,\n            margin_bottom_button3,\n            margin_bottom_table_button3,\n            margin_bottom_mobile_button3,\n            effectbutton3,\n            df_speed_effectbutton3,\n            df_delay_effectbutton3,\n            df_repeat_effectbutton3,\n            alignment_title3,\n            alignment_info3,\n            button3,\n            fontsizebutton3,\n            fontsizebutton3table,\n            fontsizebutton3mobile,\n            alignment_button3,\n            padding_link_button3,\n            padding_right_link_button3,\n            border_radius_top_left_link_button3,\n            border_radius_top_right_link_button3,\n            border_radius_bottom_left_link_button3,\n            border_radius_bottom_right_link_button3,\n            border_size_link_button3,\n            df_background_color_link_button3,\n            df_background_color_hover_link_button3,\n            df_color_link_button3,\n            df_color_hover_link_button3,\n            df_border_color_link_button3,\n            df_background_color_transparent_link_button3,\n            alt3,\n            id3,\n            imageUrl_3,\n            df_cover_img3,\n            df_focalPoint_img_3,\n            df_focalPoint_y_img_3,\n            df_background_color_slider_3,\n            df_enable_divide_3,\n            divide_3,\n            df_color_divide_3,\n            df_height_divide_3,\n            df_height_table_divide_3,\n            df_height_mobile_divide_3,\n            bubiblock_dalay_divide_3,\n            df_enable_divide_bottom_3,\n            divide_bottom_3,\n            df_color_divide_bottom_3,\n            df_height_divide_bottom_3,\n            df_height_table_divide_bottom_3,\n            df_height_mobile_divide_bottom_3,\n            bubiblock_dalay_divide_3_bottom,\n            bubiblock_link_slider_3,\n            bubiblock_link_tab_slider_3,\n            // Slider 4\n            bubiblock_add_slider_4,\n            df_slider_chose_4,\n            df_mask_slider_4,\n            background_color_solid_mask_4,\n            background_color_gradient_mask_4,\n            df_opacity_mask_4,\n            effectcaption4,\n            df_speed_effectcaption4,\n            df_delay_effectcaption4,\n            df_repeat_effectcaption4,\n            margin_bottom_caption4,\n            margin_bottom_table_caption4,\n            margin_bottom_mobile_caption4,\n            margin_bottom_info4,\n            margin_bottom_table_info4,\n            margin_bottom_mobile_info4,\n            effectinfo4,\n            df_speed_effectinfo4,\n            df_delay_effectinfo4,\n            df_repeat_effectinfo4,\n            title4,\n            fontsizetitle4,\n            fontsizetitle4table,\n            fontsizetitle4mobile,\n            info4,\n            fontsizeinfo4,\n            fontsizeinfo4table,\n            fontsizeinfo4mobile,\n            margin_bottom_button4,\n            margin_bottom_table_button4,\n            margin_bottom_mobile_button4,\n            effectbutton4,\n            df_speed_effectbutton4,\n            df_delay_effectbutton4,\n            df_repeat_effectbutton4,\n            alignment_title4,\n            alignment_info4,\n            button4,\n            fontsizebutton4,\n            fontsizebutton4table,\n            fontsizebutton4mobile,\n            alignment_button4,\n            padding_link_button4,\n            padding_right_link_button4,\n            border_radius_top_left_link_button4,\n            border_radius_top_right_link_button4,\n            border_radius_bottom_left_link_button4,\n            border_radius_bottom_right_link_button4,\n            border_size_link_button4,\n            df_background_color_link_button4,\n            df_background_color_hover_link_button4,\n            df_color_link_button4,\n            df_color_hover_link_button4,\n            df_border_color_link_button4,\n            df_background_color_transparent_link_button4,\n            alt4,\n            id4,\n            imageUrl_4,\n            df_cover_img4,\n            df_focalPoint_img_4,\n            df_focalPoint_y_img_4,\n            df_background_color_slider_4,\n            df_enable_divide_4,\n            divide_4,\n            df_color_divide_4,\n            df_height_divide_4,\n            df_height_table_divide_4,\n            df_height_mobile_divide_4,\n            bubiblock_dalay_divide_4,\n            df_enable_divide_bottom_4,\n            divide_bottom_4,\n            df_color_divide_bottom_4,\n            df_height_divide_bottom_4,\n            df_height_table_divide_bottom_4,\n            df_height_mobile_divide_bottom_4,\n            bubiblock_dalay_divide_4_bottom,\n            bubiblock_link_slider_4,\n            bubiblock_link_tab_slider_4,\n            // Slider 5\n            bubiblock_add_slider_5,\n            df_slider_chose_5,\n            df_mask_slider_5,\n            background_color_solid_mask_5,\n            background_color_gradient_mask_5,\n            df_opacity_mask_5,\n            effectcaption5,\n            df_speed_effectcaption5,\n            df_delay_effectcaption5,\n            df_repeat_effectcaption5,\n            margin_bottom_caption5,\n            margin_bottom_table_caption5,\n            margin_bottom_mobile_caption5,\n            margin_bottom_info5,\n            margin_bottom_table_info5,\n            margin_bottom_mobile_info5,\n            effectinfo5,\n            df_speed_effectinfo5,\n            df_delay_effectinfo5,\n            df_repeat_effectinfo5,\n            title5,\n            fontsizetitle5,\n            fontsizetitle5table,\n            fontsizetitle5mobile,\n            info5,\n            fontsizeinfo5,\n            fontsizeinfo5table,\n            fontsizeinfo5mobile,\n            margin_bottom_button5,\n            margin_bottom_table_button5,\n            margin_bottom_mobile_button5,\n            effectbutton5,\n            df_speed_effectbutton5,\n            df_delay_effectbutton5,\n            df_repeat_effectbutton5,\n            alignment_title5,\n            alignment_info5,\n            button5,\n            fontsizebutton5,\n            fontsizebutton5table,\n            fontsizebutton5mobile,\n            alignment_button5,\n            padding_link_button5,\n            padding_right_link_button5,\n            border_radius_top_left_link_button5,\n            border_radius_top_right_link_button5,\n            border_radius_bottom_left_link_button5,\n            border_radius_bottom_right_link_button5,\n            border_size_link_button5,\n            df_background_color_link_button5,\n            df_background_color_hover_link_button5,\n            df_color_link_button5,\n            df_color_hover_link_button5,\n            df_border_color_link_button5,\n            df_background_color_transparent_link_button5,\n            alt5,\n            id5,\n            imageUrl_5,\n            df_cover_img5,\n            df_focalPoint_img_5,\n            df_focalPoint_y_img_5,\n            df_background_color_slider_5,\n            df_enable_divide_5,\n            divide_5,\n            df_color_divide_5,\n            df_height_divide_5,\n            df_height_table_divide_5,\n            df_height_mobile_divide_5,\n            bubiblock_dalay_divide_5,\n            df_enable_divide_bottom_5,\n            divide_bottom_5,\n            df_color_divide_bottom_5,\n            df_height_divide_bottom_5,\n            df_height_table_divide_bottom_5,\n            df_height_mobile_divide_bottom_5,\n            bubiblock_dalay_divide_5_bottom,\n            bubiblock_link_slider_5,\n            bubiblock_link_tab_slider_5,\n\n        } = attributes;\n\n        const dateFormat = __experimentalGetSettings().formats.date;\n\n        // Editor Responsive\n        {(df_resp=='desktop')  &&\n            document.styleSheets[0].addRule('.editor-styles-wrapper','height:100%;width:100%;margin:0;min-height:100%;max-height:100%');\n        }\n        {(df_resp=='table') &&\n            document.styleSheets[0].addRule('.editor-styles-wrapper','height:1024px; width: 780px; margin: 72px auto!important; flex-grow: 0;min-height: 1024px; max-height: 1024px;overflow-y: auto;');\n        }\n        {(df_resp=='mobile')  &&\n            document.styleSheets[0].addRule('.editor-styles-wrapper','height:768px; width: 360px; margin: 72px auto!important; flex-grow: 0;min-height: 768px; max-height: 768px;overflow-y: auto;');\n        }\n        // Padding Slider\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop','padding-left:'+bubiblock_padding_slider+'px;'+'padding-right:'+bubiblock_padding_slider+'px;'+'padding-top:'+bubiblock_padding_b_slider+'px;'+'padding-bottom:'+bubiblock_padding_b_slider+'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table','padding-left:'+bubiblock_padding_table_slider+'px;'+'padding-right:'+bubiblock_padding_table_slider+'px;'+'padding-top:'+bubiblock_padding_b_table_slider+'px;'+'padding-bottom:'+bubiblock_padding_b_table_slider+'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile','padding-left:'+bubiblock_padding_mobile_slider+'px;'+'padding-right:'+bubiblock_padding_mobile_slider+'px;'+'padding-top:'+bubiblock_padding_b_mobile_slider+'px;'+'padding-bottom:'+bubiblock_padding_b_mobile_slider+'px');\n        // Padding Caption\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-caption','margin-left:'+ bubiblock_padding_caption +'px;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-caption','margin-left:'+ bubiblock_padding_table_caption +'px;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-caption','margin-left:'+ bubiblock_padding_mobile_caption +'px;');\n        // Button Caption\n        if(bubiblock_display_button_table_caption !=1 ){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-caption button','display: none;');\n        }\n        if(bubiblock_display_button_table_caption !=0 ){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-caption button','display: initial;');\n        }\n        if(bubiblock_display_button_mobile_caption !=1){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-caption button','display: none;');\n        }\n        if(bubiblock_display_button_mobile_caption !=0 ){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-caption button','display: initial;');\n        }\n\n        // Height slider\n        if(df_height_slider_auto != 1){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active','height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active img.img-cap','min-height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active video','min-height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item','height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item img.img-cap','min-height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item video','min-height:'+ height_slider +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active','height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active img.img-cap','min-height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active video','min-height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item','height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item img.img-cap','min-height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item video','min-height:'+ height_slider_table +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active','height:'+ height_slider_mobile +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active img.img-cap','min-height:'+ height_slider_mobile +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active video','min-height:'+ height_slider_mobile +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item','height:'+ height_slider_mobile +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item img.img-cap','min-height:'+ height_slider_mobile +'px!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item video','min-height:'+ height_slider_mobile +'px!important;');\n        }\n        if(df_height_slider_auto != 0){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item.active video','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .carousel-item video','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item.active video','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .carousel-item video','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item.active video','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item','height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item img.img-cap','min-height:auto!important;');\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .carousel-item video','min-height:auto!important;');\n        }\n        // Caption block\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .bubiblock-block','padding-left:'+bubiblock_padding_block_slider+'px;'+'padding-right:'+bubiblock_padding_block_slider+'px;'+'padding-top:'+bubiblock_padding_b_block_slider+'px;'+'padding-bottom:'+bubiblock_padding_b_block_slider+'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .bubiblock-block','padding-left:'+bubiblock_padding_block_slider_table+'px;'+'padding-right:'+bubiblock_padding_block_slider_table+'px;'+'padding-top:'+bubiblock_padding_b_block_slider_table+'px;'+'padding-bottom:'+bubiblock_padding_b_block_slider_table+'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .bubiblock-block','padding-left:'+bubiblock_padding_block_slider_mobile+'px;'+'padding-right:'+bubiblock_padding_block_slider_mobile+'px;'+'padding-top:'+bubiblock_padding_b_block_slider_mobile+'px;'+'padding-bottom:'+bubiblock_padding_b_block_slider_mobile+'px');\n        // Arrow\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-carousel-control-prev.df-arrow-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-carousel-control-next.df-arrow-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-carousel-control-prev.df-arrow-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-carousel-control-next.df-arrow-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-carousel-control-prev.df-arrow-mobile-false','display:none');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-carousel-control-next.df-arrow-mobile-false','display:none');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-carousel-control-prev i','font-size:'+ df_size_arrow_table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-carousel-control-next i','font-size:'+ df_size_arrow_table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-carousel-control-prev i','font-size:'+ df_size_arrow_mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-carousel-control-next i','font-size:'+ df_size_arrow_mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-control-next.df-carousel-control-next:hover','opacity:'+ bubiopacityhoverarrow+'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-control-prev.df-carousel-control-prev:hover','opacity:'+ bubiopacityhoverarrow+'!important' );\n        // Dots\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-dot-false.carousel-indicators','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-dot-table-false.carousel-indicators','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-dot-mobile-false.carousel-indicators','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-indicators.difftrue li.active::after','height:'+bubiblock_height_dot_active+'px; width: 100%;position: absolute; transition: height .25s ease-in-out;bottom: 0;background-color:'+df_color_dot);\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-indicators.difftrue li','transition:height .25s ease-in-out;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-indicators.progtrue li.active::after','width: 100%!important;  transition: width '+df_interval_slider+'ms ease-out;top: 0;height:'+df_height_dot+'px;background-color:'+df_color_progress_dot);\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-indicators.progtrue li::after','width:0!important;transition: width '+df_interval_slider+'ms ease-in;position: absolute;top: 0; height:'+df_height_dot+'px;');\n        //Speed slider\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.df-slider-slide','-webkit-transition: -webkit-transform '+bubiblock_speed_slider+'s ease-in-out;transition: -webkit-transform '+bubiblock_speed_slider+'s ease-in-out;-o-transition: -o-transform '+bubiblock_speed_slider+'s ease-in-out;transition: transform '+bubiblock_speed_slider+'s ease-in-out;transition: transform '+bubiblock_speed_slider+'s ease-in-out, -webkit-transform '+bubiblock_speed_slider+'s ease-in-out, -o-transform '+bubiblock_speed_slider+'s ease-in-out;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.bubiblock-flip',' transition: '+bubiblock_speed_flip_slider+'s cubic-bezier(0.175, 0.885, 0.32, 1.275) ;-webkit-transition: '+bubiblock_speed_flip_slider+'s cubic-bezier(0.175, 0.885, 0.32, 1.275);transform-style: preserve-3d;-webkit-style: preserve-3d;');\n        // Border radius item\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item img.img-cap,#carouselDFControlslider'+bubiblock_id_slider+',#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item video,#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item .bubiblock-color-slider-item,#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item iframe','border-radius:'+bubiblock_radius_slider+'%');\n        // Font Family\n        if(bubiblock_typography_custom != 0){\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' h4','font-family:'+  bubiblcok_fontfamily );\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' h4','font-weight:'+bubiblcok_fontfamily_weight);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' h4','line-height:'+bubiblock_line_height_title);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' p','font-family:'+bubiblcok_fontfamily_descritpion);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' p','font-weight:'+bubiblcok_fontfamily_weight_description);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' p.bubiblock-p-capt','line-height:'+bubiblock_line_height_info);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button p','font-family:'+bubiblcok_fontfamily_button);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button p','font-weight:'+bubiblcok_fontfamily_weight_button);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button a','font-family:'+bubiblcok_fontfamily_button);\n            document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button a','font-weight:'+bubiblcok_fontfamily_weight_button);\n        }\n        // Slider 1\n        // title\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title','bottom:'+ margin_bottom_table_caption1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title','bottom:'+ margin_bottom_mobile_caption1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title','font-size:'+ fontsizetitle1table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title','font-size:'+ fontsizetitle1mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-1.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-1.df-caption-mobile-false','display:none!important;');\n        // info\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info','bottom:'+ margin_bottom_table_info1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info','bottom:'+ margin_bottom_mobile_info1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info','font-size:'+ fontsizeinfo1table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info','font-size:'+ fontsizeinfo1mobile +'px!important;');\n        // button\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-1','bottom:'+ margin_bottom_table_button1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-1','bottom:'+ margin_bottom_mobile_button1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .button-slider p','font-size:'+ fontsizebutton1table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .button-slider p','font-size:'+ fontsizebutton1mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider:hover','background-color:'+ df_background_color_hover_link_button1+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider:hover','background:'+ df_background_color_hover_link_button1+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider:hover p','color:'+ df_color_hover_link_button1 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider:hover span','color:'+ df_color_hover_link_button1 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider:hover a','color:'+ df_color_hover_link_button1 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true','background-color: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true','background: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true:hover','background-color: '+ df_background_color_hover_link_button1 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true:hover','background: '+ df_background_color_hover_link_button1 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 button.button-slider.df-trasparent-color-button1-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 a','color: '+ df_color_link_button1 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 p','color: '+ df_color_link_button1 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-1 span','color: '+ df_color_link_button1 +'!important' );\n\n        // divide top\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-1','height:'+ df_height_divide_1 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-1','height:'+ df_height_table_divide_1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-1','height:'+ df_height_mobile_divide_1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-1','transition: max-height '+bubiblock_dalay_divide_1+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-1','transition: max-height '+bubiblock_dalay_divide_1+'s ease-out;');\n        // divide bottom\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-bottom-1','height:'+ df_height_divide_bottom_1 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-bottom-1','height:'+ df_height_table_divide_bottom_1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-bottom-1','height:'+ df_height_mobile_divide_bottom_1 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-bottom-1','transition: max-height '+bubiblock_dalay_divide_1_bottom+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-bottom-1','transition: max-height '+bubiblock_dalay_divide_1_bottom+'s ease-out;');\n\n        // Slider 2\n         // title\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_2','bottom:'+ margin_bottom_table_caption2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_2','bottom:'+ margin_bottom_mobile_caption2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_2','font-size:'+ fontsizetitle2table +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_2','font-size:'+ fontsizetitle2mobile +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_2.df-caption-table-false','display:none;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_2.df-caption-mobile-false','display:none!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_2.df-caption-table-false','display:none;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_2.df-caption-mobile-false','display:none!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-2.df-caption-table-false','display:none;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-2.df-caption-mobile-false','display:none!important;');\n         // info\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_2','bottom:'+ margin_bottom_table_info2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_2','bottom:'+ margin_bottom_mobile_info2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_2','font-size:'+ fontsizeinfo2table +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_2','font-size:'+ fontsizeinfo2mobile +'px!important;');\n         // button\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-2','bottom:'+ margin_bottom_table_button2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-2','bottom:'+ margin_bottom_mobile_button2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .button-slider2 p','font-size:'+ fontsizebutton2table +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .button-slider2 p','font-size:'+ fontsizebutton2mobile +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2:hover','background-color:'+ df_background_color_hover_link_button2+'!important');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2:hover');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2:hover','background:'+ df_background_color_hover_link_button2+'!important');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2:hover');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider2:hover p','color:'+ df_color_hover_link_button2 +'!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider2:hover span','color:'+ df_color_hover_link_button2 +'!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider2:hover a','color:'+ df_color_hover_link_button2 +'!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true','background-color: transparent!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true','background: transparent!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true:hover','background-color: '+ df_background_color_hover_link_button2 +'!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true:hover','background: '+ df_background_color_hover_link_button2 +'!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true:hover');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 button.button-slider2.df-trasparent-color-button2-true:hover');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 a','color: '+ df_color_link_button2 +'!important' );\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 p','color: '+ df_color_link_button2 +'!important' );\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-2 span','color: '+ df_color_link_button2 +'!important' );\n         // divide top\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-2','height:'+ df_height_divide_2 +'px');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-2','height:'+ df_height_table_divide_2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-2','height:'+ df_height_mobile_divide_2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-2','transition: max-height '+bubiblock_dalay_divide_2+'s ease-in;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-2','transition: max-height '+bubiblock_dalay_divide_2+'s ease-out;');\n         // divide bottom\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-bottom-2','height:'+ df_height_divide_bottom_2 +'px');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-bottom-2','height:'+ df_height_table_divide_bottom_2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-bottom-2','height:'+ df_height_mobile_divide_bottom_2 +'px!important;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-bottom-2','transition: max-height '+bubiblock_dalay_divide_2_bottom+'s ease-in;');\n         document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-bottom-2','transition: max-height '+bubiblock_dalay_divide_2_bottom+'s ease-out;');\n\n        // Slider 3\n        // title\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_3','bottom:'+ margin_bottom_table_caption3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_3','bottom:'+ margin_bottom_mobile_caption3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_3','font-size:'+ fontsizetitle3table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_3','font-size:'+ fontsizetitle3mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_3.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_3.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_3.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_3.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-3.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-3.df-caption-mobile-false','display:none!important;');\n        // info\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_3','bottom:'+ margin_bottom_table_info3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_3','bottom:'+ margin_bottom_mobile_info3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_3','font-size:'+ fontsizeinfo3table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_3','font-size:'+ fontsizeinfo3mobile +'px!important;');\n        // button\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-3','bottom:'+ margin_bottom_table_button3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-3','bottom:'+ margin_bottom_mobile_button3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .button-slider3 p','font-size:'+ fontsizebutton3table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .button-slider3 p','font-size:'+ fontsizebutton3mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3:hover','background-color:'+ df_background_color_hover_link_button3+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3:hover','background:'+ df_background_color_hover_link_button3+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider3:hover p','color:'+ df_color_hover_link_button3 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider3:hover span','color:'+ df_color_hover_link_button3 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider3:hover a','color:'+ df_color_hover_link_button3 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true','background-color: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true','background: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true:hover','background-color: '+ df_background_color_hover_link_button3 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true:hover','background: '+ df_background_color_hover_link_button3 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 button.button-slider3.df-trasparent-color-button3-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 a','color: '+ df_color_link_button3 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 p','color: '+ df_color_link_button3 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-3 span','color: '+ df_color_link_button3 +'!important' );\n        // divide top\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-3','height:'+ df_height_divide_3 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-3','height:'+ df_height_table_divide_3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-3','height:'+ df_height_mobile_divide_3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-3','transition: max-height '+bubiblock_dalay_divide_3+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-3','transition: max-height '+bubiblock_dalay_divide_3+'s ease-out;');\n        // divide bottom\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-bottom-3','height:'+ df_height_divide_bottom_3 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-bottom-3','height:'+ df_height_table_divide_bottom_3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-bottom-3','height:'+ df_height_mobile_divide_bottom_3 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-bottom-3','transition: max-height '+bubiblock_dalay_divide_3_bottom+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-bottom-3','transition: max-height '+bubiblock_dalay_divide_3_bottom+'s ease-out;');\n\n        // Slider 4\n        // title\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_4','bottom:'+ margin_bottom_table_caption4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_4','bottom:'+ margin_bottom_mobile_caption4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_4','font-size:'+ fontsizetitle4table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_4','font-size:'+ fontsizetitle4mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_4.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_4.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_4.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_4.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-4.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-4.df-caption-mobile-false','display:none!important;');\n        // info\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_4','bottom:'+ margin_bottom_table_info4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_4','bottom:'+ margin_bottom_mobile_info4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_4','font-size:'+ fontsizeinfo4table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_4','font-size:'+ fontsizeinfo4mobile +'px!important;');\n        // button\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-4','bottom:'+ margin_bottom_table_button4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-4','bottom:'+ margin_bottom_mobile_button4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .button-slider4 p','font-size:'+ fontsizebutton4table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .button-slider4 p','font-size:'+ fontsizebutton4mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4:hover','background-color:'+ df_background_color_hover_link_button4+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4:hover','background:'+ df_background_color_hover_link_button4+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider4:hover p','color:'+ df_color_hover_link_button4 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider4:hover span','color:'+ df_color_hover_link_button4 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider4:hover a','color:'+ df_color_hover_link_button4 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true','background-color: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true','background: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true:hover','background-color: '+ df_background_color_hover_link_button4 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true:hover','background: '+ df_background_color_hover_link_button4 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 button.button-slider4.df-trasparent-color-button4-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 a','color: '+ df_color_link_button4 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 p','color: '+ df_color_link_button4 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-4 span','color: '+ df_color_link_button4 +'!important' );\n        // divide top\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-4','height:'+ df_height_divide_4 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-4','height:'+ df_height_table_divide_4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-4','height:'+ df_height_mobile_divide_4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-4','transition: max-height '+bubiblock_dalay_divide_4+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-4','transition: max-height '+bubiblock_dalay_divide_4+'s ease-out;');\n        // divide bottom\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-bottom-4','height:'+ df_height_divide_bottom_4 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-bottom-4','height:'+ df_height_table_divide_bottom_4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-bottom-4','height:'+ df_height_mobile_divide_bottom_4 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-bottom-4','transition: max-height '+bubiblock_dalay_divide_4_bottom+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-bottom-4','transition: max-height '+bubiblock_dalay_divide_4_bottom+'s ease-out;');\n\n        // Slider 5\n        // title\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_5','bottom:'+ margin_bottom_table_caption5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_5','bottom:'+ margin_bottom_mobile_caption5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_5','font-size:'+ fontsizetitle5table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_5','font-size:'+ fontsizetitle5mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table h4.wp-block-bubiblock-slider-slider__title_5.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile h4.wp-block-bubiblock-slider-slider__title_5.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_5.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_5.df-caption-mobile-false','display:none!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-5.df-caption-table-false','display:none;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-5.df-caption-mobile-false','display:none!important;');\n        // info\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_5','bottom:'+ margin_bottom_table_info5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_5','bottom:'+ margin_bottom_mobile_info5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table p.wp-block-bubiblock-slider-slider__info_5','font-size:'+ fontsizeinfo5table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile p.wp-block-bubiblock-slider-slider__info_5','font-size:'+ fontsizeinfo5mobile +'px!important;');\n        // button\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .link-button-5','bottom:'+ margin_bottom_table_button5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .link-button-5','bottom:'+ margin_bottom_mobile_button5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .button-slider5 p','font-size:'+ fontsizebutton5table +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .button-slider5 p','font-size:'+ fontsizebutton5mobile +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5:hover','background-color:'+ df_background_color_hover_link_button5+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5:hover','background:'+ df_background_color_hover_link_button5+'!important');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider5:hover p','color:'+ df_color_hover_link_button5 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider5:hover span','color:'+ df_color_hover_link_button5 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' button.button-slider5:hover a','color:'+ df_color_hover_link_button5 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true','background-color: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true','background: transparent!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true:hover','background-color: '+ df_background_color_hover_link_button5 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true:hover','background: '+ df_background_color_hover_link_button5 +'!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 button.button-slider5.df-trasparent-color-button5-true:hover');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 a','color: '+ df_color_link_button5 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 p','color: '+ df_color_link_button5 +'!important' );\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .link-button-5 span','color: '+ df_color_link_button5 +'!important' );\n        // divide top\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-5','height:'+ df_height_divide_5 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-5','height:'+ df_height_table_divide_5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-5','height:'+ df_height_mobile_divide_5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-5','transition: max-height '+bubiblock_dalay_divide_5+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-5','transition: max-height '+bubiblock_dalay_divide_5+'s ease-out;');\n        // divide bottom\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.desktop .df-divide-bottom-5','height:'+ df_height_divide_bottom_5 +'px');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.table .df-divide-bottom-5','height:'+ df_height_table_divide_bottom_5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+'.mobile .df-divide-bottom-5','height:'+ df_height_mobile_divide_bottom_5 +'px!important;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .carousel-item.active .df-divide-bottom-5','transition: max-height '+bubiblock_dalay_divide_5_bottom+'s ease-in;');\n        document.styleSheets[0].addRule('#carouselDFControlslider'+bubiblock_id_slider+' .df-divide-bottom-5','transition: max-height '+bubiblock_dalay_divide_5_bottom+'s ease-out;');\n\n        // Divide Slider\n        const bubiOptionsDivideTop=[\n            { label: <svg className={'df-flip-editor'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>, value: 'svg-1' },\n            { label: <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>, value: 'svg-2' },\n            { label: <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>, value: 'svg-3' },\n            { label: <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>, value: 'svg-4' },\n        ]\n\n        const bubiOptionsDivideBottom=[\n            { label: <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>, value: 'svg-1' },\n            { label:  <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>, value: 'svg-2' },\n            { label: <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>, value: 'svg-3' },\n            { label: <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\" fill=\"#007cba\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>, value: 'svg-4' },\n        ]\n\n        return(\n            <>\n                <InspectorControls>\n                    <PanelBody // General\n                        icon={'admin-tools'}\n                        className={'bubiblock-variation'}\n                        title={__('General', 'bubiblock-slider')}\n                        initialOpen={true}\n                    >\n                        <h6 className=\"df-inspector\">{ __('Multiple Slider on the same page', 'bubiblock-slider')}</h6>\n                        <SelectControl\n                            label={__(\"ID\",\"bubiblock-slider\")}\n                            help={__('If you insert more sliders on the same page you have to set different ID! Important: when you have many sliders on the same page when using responsive controls, always return the control to \"Desktop\" before saving!','bubiblocks-slider')}\n                            options={[\n                                {label: __('One','bubiblock-slider'), value: 'one'},\n                                {label: __('Two','bubiblock-slider'), value: 'two'},\n                                {label: __('Three','bubiblock-slider'), value: 'three'},\n                                {label: __('Four','bubiblock-slider'), value: 'four'},\n                                {label: __('Five','bubiblock-slider'), value: 'five'},\n                            ]}\n                            onChange={(val) => setAttributes({ bubiblock_id_slider: val })}\n                            value={bubiblock_id_slider}\n                        />\n                        <h6 className=\"df-inspector\">{ __('Show Slider', 'bubiblock-slider')}</h6>\n                        <ToggleControl\n                            label={ __( 'Show on Desktop','bubiblock-slider' ) }\n                            checked={bubiblock_show_slider_desktop}\n                            onChange={ (newValue) => setAttributes({bubiblock_show_slider_desktop: newValue}) }\n                        />\n                        <ToggleControl\n                            label={ __( 'Show on Table','bubiblock-slider' ) }\n                            checked={bubiblock_show_slider_table}\n                            onChange={ (newValue) => setAttributes({bubiblock_show_slider_table: newValue}) }\n                        />\n                        <ToggleControl\n                            label={ __( 'Show on Mobile','bubiblock-slider' ) }\n                            checked={bubiblock_show_slider_mobile}\n                            onChange={ (newValue) => setAttributes({bubiblock_show_slider_mobile: newValue}) }\n                        />\n                         <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin bubi-width-two'}\n                        >\n                            <h6 className=\"df-inspector bubi-mt-0\">{ __('Slide Content', 'bubiblock-slider')}</h6>\n                            <p className=\"df-inspector\">{__('Each slide can have its own content or are child blocks fixed on top of all slides.','bubiblock-slider')}</p>\n                            <Button\n                                isSecondary\n                                isPrimary={bubi_block_content_slider == 'bubiblock-block-slider'} onClick={() => setAttributes({ bubi_block_content_slider: 'bubiblock-block-slider' })}\n                            >\n                                {__('Fixed Content','bubiblock-slider')}\n                            </Button>\n                            <Button\n                                isSecondary\n                                isPrimary={bubi_block_content_slider == 'bubiblock-content-slider'} onClick={() => setAttributes({ bubi_block_content_slider: 'bubiblock-content-slider' })}\n                            >\n                                {__('Changing Content','bubiblock-slider')}\n                            </Button>\n                        </ButtonGroup>\n                        <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin bubi-width-one bubi-mt-1'}\n                        >\n                            <Button\n                                isSecondary\n                                isPrimary={bubi_block_content_slider == 'bubiblock-blockcontent-slider'} onClick={() => setAttributes({ bubi_block_content_slider: 'bubiblock-blockcontent-slider' })}\n                            >\n                                {__('Fixed and Changing Content','bubiblock-slider')}\n                            </Button>\n                        </ButtonGroup>\n                        {(bubi_block_content_slider == 'bubiblock-blockcontent-slider') &&\n                            <Notice\n                                status=\"info\"\n                                isDismissible={ false }\n                            >\n                                {__('First enter the Changing Content, then the Fixed Content!','bubiblock-slider')}\n                            </Notice>\n                        }\n                        {(bubi_block_content_slider == 'bubiblock-block-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                        <>\n                        <h6 class=\"df-inspector\">{ __('Spacing', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group'}\n                        >\n                            <div class=\"df-group-button-resp\">\n                                <div class=\"bubi-col-6\">\n                                    <h6>{ __('Padding', 'bubiblock-slider')}</h6>\n                                </div>\n                                <div class=\"bubi-col-6\">\n                                    <Button\n                                        icon={'laptop'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'tablet'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'smartphone'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                    >\n                                    </Button>\n                                </div>\n                            </div>\n                        </ButtonGroup>\n                        {df_resp == 'desktop'&&\n                            <>\n                            <RangeControl\n                                help={__('Px Unit(Desktop)','bubiblock-slider')}\n                                beforeIcon={'arrow-left-alt'}\n                                afterIcon={'arrow-right-alt'}\n                                allowReset\n                                resetFallbackValue={15}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 60,\n                                        label: __('60','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 90,\n                                        label: __('90','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 120,\n                                        label: __('120','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 150,\n                                        label: __('150','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiblock_padding_block_slider }\n                                onChange={ this.onChangeBubiblock_padding_block_slider }\n                                min={ 0 }\n                                max={ 150}\n                            />\n                            <RangeControl\n                                help={__('Px Unit(Desktop)','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={15}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 60,\n                                        label: __('60','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 90,\n                                        label: __('90','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 120,\n                                        label: __('120','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 150,\n                                        label: __('150','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={bubiblock_padding_b_block_slider }\n                                onChange={ this.onChangeBubiblock_padding_b_block_slider }\n                                min={ 0 }\n                                max={ 150}\n                            />\n                            </>\n                        }\n                        {df_resp == 'table'&&\n                                <>\n                                <RangeControl\n                                    help={__('Px Unit(Table)','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={10}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 90,\n                                            label: __('90','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 120,\n                                            label: __('120','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 150,\n                                            label: __('150','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_block_slider_table }\n                                    onChange={ this.onChangeBubiblock_padding_slider_table }\n                                    min={ 0 }\n                                    max={ 150}\n                                />\n                                <RangeControl\n                                    help={__('Px Unit(Table)','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={10}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 90,\n                                            label: __('90','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 120,\n                                            label: __('120','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 150,\n                                            label: __('150','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={bubiblock_padding_b_block_slider_table }\n                                    onChange={ this.onChangeBubiblock_padding_b_slider_table }\n                                    min={ 0 }\n                                    max={ 150}\n                                />\n                                </>\n                            }\n                            {df_resp == 'mobile'&&\n                                <>\n                                <RangeControl\n                                    help={__('Px Unit(Mobile)','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={5}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 90,\n                                            label: __('90','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 120,\n                                            label: __('120','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 150,\n                                            label: __('150','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_block_slider_mobile }\n                                    onChange={ this.onChangeBubiblock_padding_block_slider_mobile }\n                                    min={ 0 }\n                                    max={ 150}\n                                />\n                                <RangeControl\n                                    help={__('Px Unit(Mobile)','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={5}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 90,\n                                            label: __('90','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 120,\n                                            label: __('120','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 150,\n                                            label: __('150','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={bubiblock_padding_b_block_slider_mobile }\n                                    onChange={ this.onChangeBubiblock_padding_b_block_slider_mobile }\n                                    min={ 0 }\n                                    max={ 150}\n                                />\n                                </>\n                            }\n                            <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                            {bubiblock_background_color_block_slider &&\n                                <ColorIndicator\n                                    colorValue={ bubiblock_background_color_block_slider }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                                <ColorPaletteControl\n                                    value={  bubiblock_background_color_block_slider}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({ bubiblock_background_color_block_slider: newValue}) }\n                                />\n                            </div>\n                            <RangeControl\n                                label={__('Opacity','bubiblock-slider')}\n                                beforeIcon={'hidden'}\n                                afterIcon={'visibility'}\n                                allowReset\n                                resetFallbackValue={1}\n                                step={.1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .2,\n                                        label: __('.2','bubiblock-slider'),\n                                    },\n\n                                    {\n                                        value: .4,\n                                        label: __('.4','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .6,\n                                        label: __('.6','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .8,\n                                        label: __('.8','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 1,\n                                        label: __('1','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiopacityblock_slider }\n                                onChange={ this.onChangeBubiopacityblock_slider }\n                                min={ 0 }\n                                max={ 1}\n                            />\n                        </>\n                        }\n                        <h6 className=\"df-inspector\">{ __('Carousel Touch', 'bubiblock-slider')}</h6>\n                        <p className=\"df-inspector\">{__('This setting will only be visible in the Front-end!','bubiblock-slider')}</p>\n                        <ToggleControl\n                            checked={bubiblock_carousle_touch}\n                            onChange={this.onChangeBubiblock_carousle_touch}\n                        />\n                    </PanelBody>\n                    <PanelBody // Styles\n                        icon={'admin-appearance'}\n                        className={'bubiblock-variation'}\n                        title={__('Styles', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                    <h6 class=\"df-inspector\">{ __('Size', 'bubiblock-slider')}</h6>\n                    <ButtonGroup\n                        className={'df-button-group'}\n                    >\n                        <div class=\"df-group-button-resp\">\n                            <div class=\"bubi-col-6\">\n                                <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                            </div>\n                            <div class=\"bubi-col-6\">\n                                <Button\n                                    icon={'laptop'}\n                                    isSecondary\n                                    className={'df-resp-button'}\n                                    isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                >\n                                </Button>\n                                <Button\n                                    icon={'tablet'}\n                                    isSecondary\n                                    className={'df-resp-button'}\n                                    isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                >\n                                </Button>\n                                <Button\n                                    icon={'smartphone'}\n                                    isSecondary\n                                    className={'df-resp-button'}\n                                    isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                >\n                                </Button>\n                            </div>\n                        </div>\n                        {df_height_slider_auto !=1 &&\n                            <>\n                                {(df_resp=='desktop' ) &&\n                                    <RangeControl\n                                        label={__(\"Fixed (Desktop)\",\"bubiblock-slider\")}\n                                        help={__(\"Px unit\",\"bubiblock-slider\")}\n                                        value={ height_slider }\n                                        onChange={ this.onChangeHeight_slider }\n                                        min={200}\n                                        max={2000}\n                                    />\n                                }\n                                {(df_resp=='table' ) &&\n                                    <RangeControl\n                                        label={__(\"Fixed (Tablet)\",\"bubiblock-slider\")}\n                                        help={__(\"Px unit\",\"bubiblock-slider\")}\n                                        value={ height_slider_table }\n                                        onChange={ this.onChangeHeight_slider_table }\n                                        min={200}\n                                        max={1800}\n                                    />\n                                }\n                                {(df_resp=='mobile' ) &&\n                                    <RangeControl\n                                        label={__(\"Fixed (Mobile)\",\"bubiblock-slider\")}\n                                        help={__(\"Px unit\",\"bubiblock-slider\")}\n                                        value={ height_slider_mobile }\n                                        onChange={ this.onChangeHeight_slider_mobile }\n                                        min={100}\n                                        max={1500}\n                                    />\n                                }\n                            </>\n                        }\n                        {(df_resp=='desktop' ) &&\n                            <>\n                            <ToggleControl\n                                label={ __( 'Adaptive Height Slider','bubiblock-slider' ) }\n                                checked={df_height_slider_auto}\n                                onChange={this.onChangeDf_height_slider_auto}\n                            />\n                            {df_height_slider_auto &&\n                                <Notice\n                                    status=\"info\"\n                                    isDismissible={ false }\n                                >\n                                    {__('Important: if you set height auto you have to insert images of equal size! Do not use this function if you have background color slides!If you use video and images together we recommend using this function, the size for the images must be 1024x576 px','bubiblock-slider')}\n                                </Notice>\n                            }\n                            <ToggleControl\n                                label={ __( 'Full width Background Slider','bubiblock-slider' ) }\n                                checked={bubiblock_full_slider}\n                                onChange={this.onChangeBubiblock_full_slider}\n                            />\n                            {bubiblock_full_slider &&\n                                <Notice\n                                    status=\"info\"\n                                    isDismissible={ false }\n                                >\n                                    {__('Full Width Background Slider preview is not available in the editor, check the live site to see it in action. Alternatively, if your theme supports it, you can use the \"Change Alignment\" block from the Toolbar and select \"Full Width\".','bubiblock-slider')}\n                                </Notice>\n                            }\n                            </>\n                        }\n                        </ButtonGroup>\n                        <h6 class=\"df-inspector\">{ __('Spacing', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group'}\n                        >\n                            <div class=\"df-group-button-resp\">\n                                <div class=\"bubi-col-6\">\n                                    <h6>{ __('Padding', 'bubiblock-slider')}</h6>\n                                </div>\n                                <div class=\"bubi-col-6\">\n                                    <Button\n                                        icon={'laptop'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'tablet'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'smartphone'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                    >\n                                    </Button>\n                                </div>\n                            </div>\n                            {(df_resp=='desktop' ) &&\n                                <>\n                                <RangeControl\n                                    help={__('Px Unit(Desktop)','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 80,\n                                            label: __('80','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_slider }\n                                    onChange={ this.onChangeBubiblock_padding_slider }\n                                    min={ 0 }\n                                    max={ 100}\n                                />\n                                <RangeControl\n                                    help={__('Px Unit(Desktop)','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 80,\n                                            label: __('80','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_b_slider }\n                                    onChange={ this.onChangeBubiblock_padding_b_slider }\n                                    min={ 0 }\n                                    max={ 100}\n                                />\n                                </>\n                            }\n                            {(df_resp=='table' ) &&\n                                <>\n                                <RangeControl\n                                    help={__('Px Unit(Table)','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 80,\n                                            label: __('80','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_table_slider }\n                                    onChange={(val) => setAttributes({bubiblock_padding_table_slider: val})}\n                                    min={ 0 }\n                                    max={ 100}\n                                />\n                                <RangeControl\n                                    help={__('Px Unit(Table)','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 80,\n                                            label: __('80','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_b_table_slider }\n                                    onChange={(val) => setAttributes({bubiblock_padding_b_table_slider: val})}\n                                    min={ 0 }\n                                    max={ 100}\n                                />\n                                </>\n                            }\n                            {(df_resp=='mobile' ) &&\n                                 <>\n                                 <RangeControl\n                                     help={__('Px Unit(Mobile)','bubiblock-slider')}\n                                     beforeIcon={'arrow-left-alt'}\n                                     afterIcon={'arrow-right-alt'}\n                                     allowReset\n                                     resetFallbackValue={0}\n                                     step={1}\n                                     withInputField={false}\n                                     separatorType=\"none\"\n                                     trackColor=\"#007cba\"\n                                     isShiftStepEnabled\n                                     marks={[\n                                         {\n                                             value: 0,\n                                             label: __('0','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 20,\n                                             label: __('20','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 40,\n                                             label: __('40','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 60,\n                                             label: __('60','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 80,\n                                             label: __('80','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 100,\n                                             label: __('100','bubiblock-slider'),\n                                         },\n                                     ]}\n                                     railColor=\"#02abff\"\n                                     value={ bubiblock_padding_mobile_slider }\n                                     onChange={(val) => setAttributes({bubiblock_padding_mobile_slider: val})}\n                                     min={ 0 }\n                                     max={ 100}\n                                 />\n                                 <RangeControl\n                                     help={__('Px Unit(Mobile)','bubiblock-slider')}\n                                     beforeIcon={'arrow-down-alt'}\n                                     afterIcon={'arrow-up-alt'}\n                                     allowReset\n                                     resetFallbackValue={0}\n                                     step={1}\n                                     withInputField={false}\n                                     separatorType=\"none\"\n                                     trackColor=\"#007cba\"\n                                     isShiftStepEnabled\n                                     marks={[\n                                         {\n                                             value: 0,\n                                             label: __('0','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 20,\n                                             label: __('20','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 40,\n                                             label: __('40','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 60,\n                                             label: __('60','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 80,\n                                             label: __('80','bubiblock-slider'),\n                                         },\n                                         {\n                                             value: 100,\n                                             label: __('100','bubiblock-slider'),\n                                         },\n                                     ]}\n                                     railColor=\"#02abff\"\n                                     value={ bubiblock_padding_b_mobile_slider }\n                                     onChange={(val) => setAttributes({bubiblock_padding_b_mobile_slider: val})}\n                                     min={ 0 }\n                                     max={ 100}\n                                 />\n                                 </>\n                            }\n                        </ButtonGroup>\n                         <h6 class=\"df-inspector\">{ __('Padding Caption', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group'}\n                        >\n                            <div class=\"df-group-button-resp\">\n                                <div class=\"bubi-col-6\">\n                                    <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                </div>\n                                <div class=\"bubi-col-6\">\n                                    <Button\n                                        icon={'laptop'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'tablet'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'smartphone'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                    >\n                                    </Button>\n                                </div>\n                            </div>\n                            {(df_resp=='desktop' ) &&\n                                <RangeControl\n                                    label={__('Left(Desktop)','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: -50,\n                                            label: __('-50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_caption }\n                                    onChange={(val) => setAttributes({bubiblock_padding_caption: val})}\n                                    min={ -50 }\n                                    max={ 100}\n                                />\n                            }\n                            {(df_resp=='table' ) &&\n                                <>\n                                <RangeControl\n                                    label={__('Left(Table)','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: -50,\n                                            label: __('-50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_table_caption }\n                                    onChange={(val) => setAttributes({bubiblock_padding_table_caption: val})}\n                                    min={ -50 }\n                                    max={ 100}\n                                />\n                                <ToggleControl\n                                    label={ __('Show Button(Table)','bubiblock-slider' ) }\n                                    checked={bubiblock_display_button_table_caption}\n                                    onChange={(val) => setAttributes({bubiblock_display_button_table_caption: val})}\n                                />\n                                </>\n                            }\n                            {(df_resp=='mobile' ) &&\n                                <>\n                                <RangeControl\n                                    label={__('Left(Mobile)','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: -50,\n                                            label: __('-50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_padding_mobile_caption }\n                                    onChange={(val) => setAttributes({bubiblock_padding_mobile_caption: val})}\n                                    min={ -50 }\n                                    max={ 100}\n                                />\n                                <ToggleControl\n                                    label={ __('Show Button(Mobile)','bubiblock-slider' ) }\n                                    checked={bubiblock_display_button_mobile_caption}\n                                    onChange={(val) => setAttributes({bubiblock_display_button_mobile_caption: val})}\n                                />\n                                </>\n                            }\n                        </ButtonGroup>\n                        <h6 class=\"df-inspector\">{ __('Border', 'bubiblock-slider')}</h6>\n                        <RangeControl\n                            label={__('Border Radius Item','bubiblock-slider')}\n                            help={__('% Unit','bubiblock-slider')}\n                            beforeIcon={'fullscreen-alt'}\n                            afterIcon={'fullscreen-exit-alt'}\n                            allowReset\n                            resetFallbackValue={0}\n                            step={1}\n                            withInputField={false}\n                            separatorType=\"none\"\n                            trackColor=\"#007cba\"\n                            isShiftStepEnabled\n                            marks={[\n                                {\n                                    value: 0,\n                                    label: __('0','bubiblock-slider'),\n                                },\n                                {\n                                    value: 10,\n                                    label: __('10','bubiblock-slider'),\n                                },\n                                {\n                                    value: 20,\n                                    label: __('20','bubiblock-slider'),\n                                },\n                                {\n                                    value: 30,\n                                    label: __('30','bubiblock-slider'),\n                                },\n                                {\n                                    value: 40,\n                                    label: __('40','bubiblock-slider'),\n                                },\n                                {\n                                    value: 50,\n                                    label: __('50','bubiblock-slider'),\n                                },\n                            ]}\n                            railColor=\"#02abff\"\n                            value={ bubiblock_radius_slider }\n                            onChange={ this.onChangeBubiblock_radius_slider }\n                            min={ 0 }\n                            max={ 50}\n                        />\n                        <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                        {bubiblock_background_color_slider &&\n                            <ColorIndicator\n                                colorValue={ bubiblock_background_color_slider }\n                            />\n                        }\n                        </h6>\n                        <div class={'legend-color-none'}>\n                            <ColorPaletteControl\n                                value={  bubiblock_background_color_slider}\n                                colors={ bubiColors }\n                                onChange={ (newValue) => setAttributes({bubiblock_background_color_slider: newValue}) }\n                            />\n                        </div>\n                    </PanelBody>\n                    <PanelBody // Typography\n                        icon={'editor-spellcheck'}\n                        title={__('Typography', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                        <div className={'bubi-mt-2 bubi-mb-2'}>\n                        <ToggleControl\n                            label={ __('Enable or disable Custom Typography','bubiblock-slider' ) }\n                            help={__('You can use the general typography of your site, or choose the BubiBlock typography.To see the result you need to refresh the page!','bubiblock-slider')}\n                            checked={bubiblock_typography_custom}\n                            onChange={(val) => setAttributes({bubiblock_typography_custom: val})}\n                        />\n                        </div>\n                        {bubiblock_typography_custom &&\n                        <TabPanel\n                            className=\"bubiblock-tab-panel\"\n                            activeClass=\"bubiblock-active-tab\"\n                            orientation=\"horizontal\"\n                            initialTabName=\"tab1\"\n                            onSelect={ (className) => console.log(className) }\n                            tabs={ [\n                                {\n                                    name: 'tab1',\n                                    icon:'admin-site-alt',\n                                    title: __('Title','bubiblock-slider'),\n                                    className: 'tab-one',\n                                },\n                                {\n                                    name: 'tab2',\n                                    title:  __('Descritpion','bubiblock-slider'),\n                                    className: 'tab-two',\n                                },\n                                {\n                                    name: 'tab3',\n                                    title:  __('Button','bubiblock-slider'),\n                                    className: 'tab-three',\n                                },\n                            ] }\n\n                        >\n                            {\n                                ( tab ) => (\n                                    <>\n                                    <PanelBody\n                                        className={'bubi-tab-1 '+tab.name}\n                                    >\n                                        <SelectControl\n                                            label={__(\"Font Family\",\"bubiblock-slider\")}\n                                            options={bubiOptionsFont}\n                                            onChange={this.onChangeBubiblcok_fontfamily}\n                                            value={bubiblcok_fontfamily}\n                                        />\n                                        <SelectControl\n                                            label={__(\"Font Weight\",\"bubiblock-slider\")}\n                                            help={__('Not all fonts support all weights!','bubiblocks-slider')}\n                                            options={bubiOptionsWeight}\n                                            onChange={this.onChangeBubiblcok_fontfamily_weight}\n                                            value={bubiblcok_fontfamily_weight}\n                                        />\n                                        <RangeControl\n                                            label={__('Line Height','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={2}\n                                            step={.5}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: .5,\n                                                    label: __('.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1,\n                                                    label: __('1','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1.5,\n                                                    label: __('1.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 2,\n                                                    label: __('2','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 2.5,\n                                                    label: __('2.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 3,\n                                                    label: __('3','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ bubiblock_line_height_title }\n                                            onChange={(val) => setAttributes({ bubiblock_line_height_title: val})}\n                                            min={ .5 }\n                                            max={ 3}\n                                        />\n                                    </PanelBody>\n                                    <PanelBody\n                                        className={'bubi-tab-2 '+tab.name}\n                                    >\n                                     <SelectControl\n                                        label={__(\"Font Family\",\"bubiblock-slider\")}\n                                        options={bubiOptionsFont}\n                                         onChange={this.onChangeBubiblcok_fontfamily_descritpion}\n                                         value={bubiblcok_fontfamily_descritpion}\n                                    />\n                                    <SelectControl\n                                        label={__(\"Font Weight\",\"bubiblock-slider\")}\n                                        help={__('Not all fonts support all weights!','bubiblocks-slider')}\n                                        options={bubiOptionsWeight}\n                                        onChange={this.onChangeBubiblcok_fontfamily_weight_description}\n                                        value={bubiblcok_fontfamily_weight_description}\n                                    />\n                                             <RangeControl\n                                            label={__('Line Height','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={2}\n                                            step={.5}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: .5,\n                                                    label: __('.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1,\n                                                    label: __('1','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1.5,\n                                                    label: __('1.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 2,\n                                                    label: __('2','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 2.5,\n                                                    label: __('2.5','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 3,\n                                                    label: __('3','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ bubiblock_line_height_info }\n                                            onChange={(val) => setAttributes({ bubiblock_line_height_info: val})}\n                                            min={ .5 }\n                                            max={ 3}\n                                        />\n                                 </PanelBody>\n                                 <PanelBody\n                                        className={'bubi-tab-3 '+tab.name}\n                                    >\n                                     <SelectControl\n                                        label={__(\"Font Family\",\"bubiblock-slider\")}\n                                        options={bubiOptionsFont}\n                                        onChange={this.onChangeBubiblcok_fontfamily_button}\n                                        value={bubiblcok_fontfamily_button}\n                                    />\n                                    <SelectControl\n                                        label={__(\"Font Weight\",\"bubiblock-slider\")}\n                                        help={__('Not all fonts support all weights!','bubiblocks-slider')}\n                                        options={bubiOptionsWeight}\n                                        onChange={this.onChangeBubiblcok_fontfamily_weight_button}\n                                        value={bubiblcok_fontfamily_weight_button}\n                                    />\n                                 </PanelBody>\n                                 </>\n                                )\n\t                        }\n                        </TabPanel>\n                        }\n                    </PanelBody>\n                    <PanelBody // Settings\n                        icon={'admin-generic'}\n                        title={__('Settings', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                        <h6 className=\"df-inspector\">{ __('Animation', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin bubi-width-three'}\n                        >\n                            <Button\n                                isSecondary\n                                isPrimary={df_effect_slider == 'df-slider-slide'} onClick={() => setAttributes({ df_effect_slider: 'df-slider-slide' })}\n                            >\n                                {__('Slider','bubiblock-slider')}\n                            </Button>\n                            <Button\n                                isSecondary\n                                isPrimary={df_effect_slider == 'carousel-fade'} onClick={() => setAttributes({ df_effect_slider: 'carousel-fade' })}\n                            >\n                                {__('Fade','bubiblock-slider')}\n                            </Button>\n                            <Button\n                                isSecondary\n                                isPrimary={df_effect_slider == 'bubiblock-flip'} onClick={() => setAttributes({ df_effect_slider: 'bubiblock-flip' })}\n                            >\n                                {__('Flip','bubiblock-slider')}\n                            </Button>\n                            {(df_effect_slider == 'carousel-fade') &&\n                                <Notice\n                                    status=\"info\"\n                                    isDismissible={ false }\n                                >\n                                    {__('With this effect you cannot view fixed content!','bubiblock-slider')}\n                                </Notice>\n                            }\n                        </ButtonGroup>\n                        <h6 className=\"df-inspector\">{ __('Autoplay', 'bubiblock-slider')}</h6>\n                        <p className=\"df-inspector\">{__('To see the result immediately, you need to refresh and reload the page!','bubiblock-slider')}</p>\n                        <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin bubi-width-two'}\n                        >\n                            <Button\n                                isSecondary\n                                isPrimary={df_interval_slider == '5000'} onClick={() => setAttributes({ df_interval_slider: '5000' })}\n                            >\n                                {__('True','bubiblock-slider')}\n                            </Button>\n                            <Button\n                                isSecondary\n                                isPrimary={df_interval_slider == '0'} onClick={() => setAttributes({ df_interval_slider: '0' })}\n                            >\n                                {__('False','bubiblock-slider')}\n                            </Button>\n                        </ButtonGroup>\n                        {(df_interval_slider  == '5000') &&\n                            <>\n                            <h6 className=\"df-inspector\">{ __('Pause', 'bubiblock-slider')}</h6>\n                            <p className=\"df-inspector\">{__('This setting will only be visible in the Front-end!','bubiblock-slider')}</p>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin bubi-width-two'}\n                            >\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_pause_slider == 'hover'} onClick={() => setAttributes({ df_pause_slider: 'hover' })}\n                                >\n                                    {__('Hover','bubiblock-slider')}\n                                </Button>\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_pause_slider == 'false'} onClick={() => setAttributes({ df_pause_slider: 'false' })}\n                                >\n                                    {__('False','bubiblock-slider')}\n                                </Button>\n                            </ButtonGroup>\n                            </>\n                        }\n                    </PanelBody>\n                    <PanelBody // Arrow Settings\n                        icon={'arrow-right-alt2'}\n                        title={__('Arrow Settings', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                        <h6 className=\"df-inspector\">{ __('Show Arrows', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin'}\n                        >\n                            <div class=\"df-group-button-resp\">\n                                <div class=\"bubi-col-6\">\n                                    <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                </div>\n                                <div class=\"bubi-col-6\">\n                                    <Button\n                                        icon={'laptop'}\n                                        className={'df-resp-button'}\n                                        isSecondary\n                                        isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'tablet'}\n                                        className={'df-resp-button'}\n                                        isSecondary\n                                        isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'smartphone'}\n                                        className={'df-resp-button'}\n                                        isSecondary\n                                        isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                    >\n                                    </Button>\n                                </div>\n                            </div>\n                            {(df_resp=='desktop')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider == 'df-arrow-true'} onClick={() => setAttributes({ df_arrow_slider: 'df-arrow-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider == 'df-arrow-false'} onClick={() => setAttributes({ df_arrow_slider: 'df-arrow-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n                            {(df_resp=='table')  && (df_arrow_slider=='df-arrow-true')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider_table == 'df-arrow-table-true'} onClick={() => setAttributes({ df_arrow_slider_table: 'df-arrow-table-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider_table == 'df-arrow-table-false'} onClick={() => setAttributes({ df_arrow_slider_table: 'df-arrow-table-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n                            {(df_arrow_slider_table=='df-arrow-table-true') && (df_resp=='mobile')  && (df_arrow_slider=='df-arrow-true')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider_mobile == 'df-arrow-mobile-true'} onClick={() => setAttributes({ df_arrow_slider_mobile: 'df-arrow-mobile-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_arrow_slider_mobile == 'df-arrow-mobile-false'} onClick={() => setAttributes({ df_arrow_slider_mobile: 'df-arrow-mobile-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n\n                        </ButtonGroup>\n                        {(df_arrow_slider=='df-arrow-true')  &&\n                            <>\n                            <h6 className=\"df-inspector\">{ __('Arrow type', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-icon-group bubi-mb-2 bubi-width-five'}\n                            >\n                                <Button\n                                    icon={'arrow-right'}\n                                    isSecondary\n                                    isPrimary={df_arrow_slider_type == 'bubi-arrow-right'} onClick={() => setAttributes({ df_arrow_slider_type: 'bubi-arrow-right' })}\n                                >\n                                </Button>\n                                <Button\n                                    icon={'arrow-right-alt'}\n                                    isSecondary\n                                    isPrimary={df_arrow_slider_type == 'bubi-arrow-right-alt'} onClick={() => setAttributes({ df_arrow_slider_type: 'bubi-arrow-right-alt' })}\n                                >\n                                </Button>\n                                <Button\n                                    icon={'arrow-right-alt2'}\n                                    isSecondary\n                                    isPrimary={df_arrow_slider_type == 'bubi-arrow-right-alt2'} onClick={() => setAttributes({ df_arrow_slider_type: 'bubi-arrow-right-alt2' })}\n                                >\n                                </Button>\n                            </ButtonGroup>\n                            <h6 className=\"df-inspector\">{ __('Position', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-icon-group bubi-mb-1 bubi-width-three' }\n                            >\n                                <Button\n                                    isSecondary\n                                    isPrimary={bubi_arrow_position == 'arrowtop'} onClick={() => setAttributes({ bubi_arrow_position: 'arrowtop' })}\n                                >\n                                { __('Top', 'bubiblock-slider')}\n                                </Button>\n                                <Button\n                                    isSecondary\n                                    isPrimary={bubi_arrow_position == 'arrowcenter'} onClick={() => setAttributes({ bubi_arrow_position: 'arrowcenter' })}\n                                >\n                                { __('Center', 'bubiblock-slider')}\n                                </Button>\n                                <Button\n                                    isSecondary\n                                    isPrimary={bubi_arrow_position == 'arrowbottom'} onClick={() => setAttributes({ bubi_arrow_position: 'arrowbottom' })}\n                                >\n                                { __('Bottom', 'bubiblock-slider')}\n                                </Button>\n                                </ButtonGroup>\n                            <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                            {df_color_arrow &&\n                                <ColorIndicator\n                                    colorValue={ df_color_arrow }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                                <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_color_arrow}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_color_arrow: newValue}) }\n                                    disableCustomColors={ true }\n                                />\n                            </div>\n                            <RangeControl\n                                label={__('Opacity','bubiblock-slider')}\n                                beforeIcon={'hidden'}\n                                afterIcon={'visibility'}\n                                allowReset\n                                resetFallbackValue={.5}\n                                step={.1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .2,\n                                        label: __('.2','bubiblock-slider'),\n                                    },\n\n                                    {\n                                        value: .4,\n                                        label: __('.4','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .6,\n                                        label: __('.6','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .8,\n                                        label: __('.8','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 1,\n                                        label: __('1','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiopacityarrow }\n                                onChange={ this.onChangeBubiopacityarrow }\n                                min={ 0 }\n                                max={ 1}\n                            />\n                            <RangeControl\n                                label={__('Opacity Hover','bubiblock-slider')}\n                                beforeIcon={'hidden'}\n                                afterIcon={'visibility'}\n                                allowReset\n                                resetFallbackValue={1}\n                                step={.1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .2,\n                                        label: __('.2','bubiblock-slider'),\n                                    },\n\n                                    {\n                                        value: .4,\n                                        label: __('.4','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .6,\n                                        label: __('.6','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: .8,\n                                        label: __('.8','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 1,\n                                        label: __('1','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiopacityhoverarrow }\n                                onChange={ this.onChangeBubiopacityhoverarrow }\n                                min={ 0 }\n                                max={ 1}\n                            />\n\n                            <h6 className=\"df-inspector\">{ __('Spacing', 'bubiblock-slider')}</h6>\n                            <RangeControl\n                                label={__('Interspace','bubiblock-slider')}\n                                help={__('Px Unit','bubiblock-slider')}\n                                beforeIcon={'arrow-left-alt'}\n                                afterIcon={'arrow-right-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: -120,\n                                        label: __('-120','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: -60,\n                                        label: __('-60','bubiblock-slider'),\n                                    },\n\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 60,\n                                        label: __('60','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 120,\n                                        label: __('120','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubi_marginarrow }\n                                onChange={ this.onChangeBubi_marginarrow }\n                                min={ -120 }\n                                max={ 120}\n                            />\n                            <h6 class=\"df-inspector\">{ __('Size', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            className={'df-resp-button'}\n                                            isSecondary\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            className={'df-resp-button'}\n                                            isSecondary\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            className={'df-resp-button'}\n                                            isSecondary\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop')&&\n                                    <RangeControl\n                                        label={__(\"Size(Desktop)\",\"bubiblock-slider\")}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        value={ df_size_arrow }\n                                        onChange={ this.onChangeDf_size_arrow  }\n                                        min={1}\n                                        max={200}\n                                    />\n                                }\n                                {(df_resp=='table') && (df_arrow_slider_table=='df-arrow-table-true') &&\n                                    <RangeControl\n                                        label={__(\"Size(Table)\",\"bubiblock-slider\")}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        value={ df_size_arrow_table }\n                                        onChange={ this.onChangeDf_size_arrow_table  }\n                                        min={1}\n                                        max={200}\n                                    />\n                                }\n                                {(df_resp=='mobile') && (df_arrow_slider_table=='df-arrow-table-true') && (df_arrow_slider_mobile=='df-arrow-mobile-true') &&\n                                    <RangeControl\n                                        label={__(\"Size(Mobile)\",\"bubiblock-slider\")}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        value={ df_size_arrow_mobile }\n                                        onChange={ this.onChangeDf_size_arrow_mobile  }\n                                        min={1}\n                                        max={200}\n                                    />\n                                }\n                            </ButtonGroup>\n                            </>\n                        }\n                    </PanelBody>\n                    <PanelBody // Dot Settings\n                        icon={'ellipsis'}\n                        title={__('Dot Settings', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                        <h6 class=\"df-inspector\">{ __('Show Dots', 'bubiblock-slider')}</h6>\n                        <ButtonGroup\n                            className={'df-button-group bubiblock-no-margin'}\n                        >\n                            <div class=\"df-group-button-resp\">\n                                <div class=\"bubi-col-6\">\n                                    <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                </div>\n                                <div class=\"bubi-col-6\">\n                                    <Button\n                                        icon={'laptop'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'tablet'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                    >\n                                    </Button>\n                                    <Button\n                                        icon={'smartphone'}\n                                        isSecondary\n                                        className={'df-resp-button'}\n                                        isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                    >\n                                    </Button>\n                                </div>\n                            </div>\n                            {(df_resp=='desktop')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider == 'df-dot-true'} onClick={() => setAttributes({ df_dot_slider: 'df-dot-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider == 'df-dot-false'} onClick={() => setAttributes({ df_dot_slider: 'df-dot-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n                            {(df_resp=='table')  && (df_dot_slider=='df-dot-true')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider_table == 'df-dot-table-true'} onClick={() => setAttributes({ df_dot_slider_table: 'df-dot-table-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider_table == 'df-dot-table-false'} onClick={() => setAttributes({ df_dot_slider_table: 'df-dot-table-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n                            {(df_dot_slider_table=='df-dot-table-true') && (df_resp=='mobile')  && (df_dot_slider=='df-dot-true')  &&\n                                <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider_mobile == 'df-dot-mobile-true'} onClick={() => setAttributes({ df_dot_slider_mobile: 'df-dot-mobile-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_dot_slider_mobile == 'df-dot-mobile-false'} onClick={() => setAttributes({ df_dot_slider_mobile: 'df-dot-mobile-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                </div>\n                            }\n                        </ButtonGroup>\n                        {(df_dot_slider=='df-dot-true') &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Dots type', 'bubiblock-slider')}</h6>\n                                <SelectControl\n                                    options={[\n                                        {label: __('Linear','bubiblock-slider'), value: 'df-dot-linear'},\n                                        {label: __('Round','bubiblock-slider'), value: 'df-dot-round'},\n                                    ]}\n                                    onChange={this.onChangeDf_dot_slider_type}\n                                    value={df_dot_slider_type}\n                                />\n                                <h6 class=\"df-inspector\">{ __('Size', 'bubiblock-slider')}</h6>\n                                <RangeControl\n                                    label={__(\"Width\",\"bubiblock-slider\")}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    value={ df_width_dot }\n                                    onChange={ this.onChangeDf_width_dot  }\n                                    min={1}\n                                    max={100}\n                                />\n                                <RangeControl\n                                    label={__(\"Height\",\"bubiblock-slider\")}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    value={ df_height_dot }\n                                    onChange={ this.onChangeDf_height_dot  }\n                                    min={1}\n                                    max={100}\n                                />\n                                <h6 class=\"df-inspector\">{ __('Spacing', 'bubiblock-slider')}</h6>\n                                <RangeControl\n                                    label={__('Bottom','bubiblock-slider')}\n                                    help={__('Px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={10}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 60,\n                                            label: __('60','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 80,\n                                            label: __('80','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 100,\n                                            label: __('100','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ df_bottom_dot }\n                                    onChange={ this.onChangeDf_bottom_dot }\n                                    min={ 0 }\n                                    max={ 100}\n                                />\n                                <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                                {df_color_dot &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_dot }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_color_dot}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_dot: newValue}) }\n                                        disableCustomColors={true}\n                                    />\n                                </div>\n                            </>\n                        }\n                    </PanelBody>\n                    <PanelBody // Slider 1\n                        icon={'format-image'}\n                        title={__('Slides 1', 'bubiblock-slider')}\n                        initialOpen={false}\n                    >\n                        <h6 className=\"df-inspector bubi-mt-1\">{ __('Background type', 'bubiblock-slider')}</h6>\n                        <div class=\"bubi-width-three bubibutton-icon\">\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <Tooltip\n                                    text= {__('Color','bubiblock-slider')}\n                                >\n                                    <Button\n                                        isPrimary={df_slider_chose_1 == 'df-slider-color-1'}\n                                        icon=\"admin-appearance\"\n                                        onClick={() => setAttributes({ df_slider_chose_1: 'df-slider-color-1' })}\n                                    >\n                                    </Button>\n                                </Tooltip>\n                                <Tooltip\n                                    text=  {__('Image','bubiblock-slider')}\n                                >\n                                    <Button\n                                        isPrimary={df_slider_chose_1 == 'df-slider-image-1'}\n                                        icon=\"format-image\"\n                                        onClick={() => setAttributes({ df_slider_chose_1: 'df-slider-image-1' })}\n                                    >\n                                    </Button>\n                                </Tooltip>\n                            </ButtonGroup>\n                        </div>\n                        {(df_slider_chose_1=='df-slider-image-1' ) &&\n                            <>\n                                {url?\n                                    <>\n                                    <img src={url} className={'bubi-mt-2'}/>\n                                    {isBlobURL(url) && <Spinner />}\n                                    </>\n                                    :\n                                    <MediaPlaceholder\n                                        className={'bubi-mt-2 bubi-mb-2'}\n                                        icon=\"format-image df-icon-img-upload\"\n                                        onSelect={ this.onSelectImage }\n                                        onSelectURL={ this.onSelectURL }\n                                        onError={this.onUploadError}\n                                        accept=\"image/*\"\n                                        allowedTypes={['image']}\n                                        notices={ noticeUI }\n                                    />\n                                }\n                                {url &&\n                                <>\n                                    <MenuItem\n                                        icon={ 'trash' }\n                                        className={'df-remov-img'}\n                                        onClick={ this.removeImage }\n                                    >\n                                        { __('Remove Image','bubiblock-slider') }\n                                    </MenuItem>\n                                    <TextareaControl\n                                        label={__('Alt Text (Alternative Text)','bubiblock-slider')}\n                                        value={ alt}\n                                        onChange={ this.updateAlt }\n                                        help={__('Alternative text describes your image to people who cant see it. Add a short description with its key details.','bubiblock-slider')}\n                                    />\n                                    <SelectControl\n                                        label={__(\"Dispaly Size\",\"bubiblock-slider\")}\n                                        options={[\n                                            {label: __('None','bubiblock-slider'), value: 'none'},\n                                            {label: __('Containe','bubiblock-slider'), value: 'contain'},\n                                            {label: __('Cover','bubiblock-slider'), value: 'cover'},\n                                            {label: __('Fill','bubiblock-slider'), value: 'fill'},\n                                            {label: __('Scale down','bubiblock-slider'), value: 'scale-down'},\n                                            {label: __('Unset','bubiblock-slider'), value: 'unset'},\n                                        ]}\n                                        onChange={this.onChangeDf_cover_img1}\n                                        value={df_cover_img1}\n                                    />\n                                    {(df_cover_img1=='none')&&\n                                    <>\n                                        <RangeControl\n                                            label={__('Display Position','bubiblock-slider')}\n                                            help={__('% Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-left-alt'}\n                                            afterIcon={'arrow-right-alt'}\n                                            allowReset\n                                            resetFallbackValue={50}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 20,\n                                                    label: __('20','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 40,\n                                                    label: __('40','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 60,\n                                                    label: __('60','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 80,\n                                                    label: __('80','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_focalPoint_img_1 }\n                                            onChange={ this.onChangeDf_focalPoint_img_1 }\n                                            min={ 0 }\n                                            max={ 100}\n                                        />\n                                        <RangeControl\n                                            label={__('Display Position','bubiblock-slider')}\n                                            help={__('% Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={50}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 20,\n                                                    label: __('20','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 40,\n                                                    label: __('40','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 60,\n                                                    label: __('60','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 80,\n                                                    label: __('80','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_focalPoint_y_img_1 }\n                                            onChange={ this.onChangeDf_focalPoint_y_img_1 }\n                                            min={ 0 }\n                                            max={ 100}\n                                        />\n                                        </>\n                                    }\n                                    <ToggleControl\n                                        label={ __( 'Show mask','bubiblock-slider' ) }\n                                        checked={df_mask_slider_1}\n                                        onChange={this.onChangeDf_mask_slider_1}\n                                    />\n                                    {df_mask_slider_1 &&\n                                        <>\n                                        <Notice\n                                            status=\"info\"\n                                            isDismissible={ false }\n                                        >\n                                            {__('If you have set the border radius for the slider this control will not work well!','bubiblock-slider')}\n                                        </Notice>\n                                        <ColorPaletteControl\n                                            value={ background_color_solid_mask_1}\n                                            colors={ bubiColors }\n                                            onChange={ (newValue) => setAttributes({background_color_solid_mask_1: newValue}) }\n                                        />\n                                        <RangeControl\n                                            label={__('Opacity','bubiblock-slider')}\n                                            beforeIcon={'hidden'}\n                                            afterIcon={'visibility'}\n                                            allowReset\n                                            resetFallbackValue={.4}\n                                            step={.1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.2,\n                                                    label: __('2','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.4,\n                                                    label: __('4','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.6,\n                                                    label: __('6','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.8,\n                                                    label: __('8','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1.0,\n                                                    label: __('10','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_opacity_mask_1 }\n                                            onChange={ this.onChangeDf_opacity_mask_1 }\n                                            min={ .0 }\n                                            max={ 1.0}\n                                        />\n                                    </>\n                                    }\n                                    <TextControl\n                                        label={__('Link Image','bubiblock-slider')}\n                                        value={ bubiblock_link_slider_1 }\n                                        onChange={ (newValue) => setAttributes({bubiblock_link_slider_1: newValue}) }\n                                        type=\"url\"\n                                    />\n                                    {bubiblock_link_slider_1 &&\n                                        <ButtonGroup\n                                                className={'df-button-group bubiblock-no-margin bubi-mb-2'}\n                                            >\n                                                <p className=\"df-inspector bubi-mt-1\">{ __('Open in new tab', 'bubiblock-slider')}</p>\n                                                <div class=\"bubi-width-two\">\n                                                <Button\n                                                    isSecondary\n                                                    isPrimary={bubiblock_link_tab_slider_1 == '_blank'} onClick={() => setAttributes({ bubiblock_link_tab_slider_1: '_blank' })}\n                                                >\n                                                    {__('True','bubiblock-slider')}\n                                                </Button>\n                                                <Button\n                                                    isSecondary\n                                                    isPrimary={bubiblock_link_tab_slider_1 == ''} onClick={() => setAttributes({ bubiblock_link_tab_slider_1: '' })}\n                                                >\n                                                    {__('False','bubiblock-slider')}\n                                                </Button>\n                                                </div>\n                                        </ButtonGroup>\n                                    }\n                                </>\n                                }\n                            </>\n                        }\n                        {(df_slider_chose_1=='df-slider-color-1' ) &&\n                            <>\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Background Color', 'bubiblock-slider')}\n                            {df_background_color_slider_1 &&\n                                <ColorIndicator\n                                    colorValue={ df_background_color_slider_1 }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                               <ColorPaletteControl\n                                    value={ df_background_color_slider_1}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_background_color_slider_1: newValue}) }\n                                />\n                            </div>\n                            </>\n                        }\n                        <ToggleControl\n                            label={ __( 'Dividers Top','bubiblock-slider' ) }\n                            checked={df_enable_divide_1}\n                            onChange={this.onChangeDf_enable_divide_1}\n                        />\n                        {df_enable_divide_1 &&\n                        <>\n                            <RadioControl\n                                label={__('Choose', 'df-sidebar-gutenberg')}\n                                selected={divide_1}\n                                className={'bubiblock-radio-image'}\n                                onChange={(val) => setAttributes({divide_1: val})}\n                                options={bubiOptionsDivideTop}\n                            />\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                            { df_color_divide_1 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_divide_1 }\n                                />\n                            }\n                            </h6>\n                            <ColorPicker\n                                color={df_color_divide_1}\n                                onChangeComplete={(newval) => setAttributes({df_color_divide_1: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                            />\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_divide_1 }\n                                        onChange={ this.onChangeDf_height_divide_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='table' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_table_divide_1 }\n                                        onChange={ this.onChangeDf_height_table_divide_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='mobile' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_mobile_divide_1 }\n                                        onChange={ this.onChangeDf_height_mobile_divide_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RangeControl\n                                label={__('Delayed appearance','bubiblock-slider')}\n                                help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={3}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 5,\n                                        label: __('5','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 15,\n                                        label: __('15','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 25,\n                                        label: __('25','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiblock_dalay_divide_1 }\n                                onChange={ this.onChangeBubiblock_dalay_divide_1}\n                                min={ 0 }\n                                max={ 30}\n                            />\n                        </>\n                        }\n                         <ToggleControl\n                            label={ __( 'Dividers Bottom','bubiblock-slider' ) }\n                            checked={df_enable_divide_bottom_1}\n                            onChange={this.onChangeDf_enable_divide_bottom_1}\n                        />\n                        {df_enable_divide_bottom_1 &&\n                        <>\n                            <RadioControl\n                                label={__('Choose', 'df-sidebar-gutenberg')}\n                                selected={divide_bottom_1}\n                                className={'df-radio-control-divide-bottom'}\n                                onChange={(val) => setAttributes({divide_bottom_1: val})}\n                                options={bubiOptionsDivideBottom}\n                            />\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                            { df_color_divide_bottom_1&&\n                                <ColorIndicator\n                                    colorValue={ df_color_divide_bottom_1 }\n                                />\n                            }\n                            </h6>\n                            <ColorPicker\n                                color={df_color_divide_bottom_1}\n                                onChangeComplete={(newval) => setAttributes({df_color_divide_bottom_1: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                            />\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_divide_bottom_1 }\n                                        onChange={ this.onChangeDf_height_divide_bottom_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='table' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_table_divide_bottom_1 }\n                                        onChange={ this.onChangeDf_height_table_divide_bottom_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='mobile' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_mobile_divide_bottom_1 }\n                                        onChange={ this.onChangeDf_height_mobile_divide_bottom_1 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RangeControl\n                                label={__('Delayed appearance','bubiblock-slider')}\n                                help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={3}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 5,\n                                        label: __('5','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 15,\n                                        label: __('15','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 25,\n                                        label: __('25','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiblock_dalay_divide_1_bottom }\n                                onChange={ this.onChangeBubiblock_dalay_divide_1_bottom}\n                                min={ 0 }\n                                max={ 30}\n                            />\n                        </>\n                        }\n                        {title1 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Title', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={35}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_caption1 }\n                                        onChange={ this.onChangeMargin_bottom_caption1}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={25}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_caption1 }\n                                        onChange={ this.onChangeMargin_bottom_table_caption1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={15}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_caption1 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_caption1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        className={'bubiblock-slider-inspectorcontrols'}\n                                        value={fontsizetitle1}\n                                        onChange={(val) => setAttributes({fontsizetitle1: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                    }\n                                {(df_resp=='table') &&\n                                    <FontSizePicker\n                                        value={fontsizetitle1table}\n                                        onChange={(val) => setAttributes({fontsizetitle1table: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <FontSizePicker\n                                        value={fontsizetitle1mobile}\n                                        onChange={(val) => setAttributes({fontsizetitle1mobile: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_title1 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_title1: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectcaption1}\n                                value={effectcaption1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectcaption1}\n                                value={df_speed_effectcaption1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectcaption1}\n                                value={df_delay_effectcaption1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectcaption1}\n                                value={df_repeat_effectcaption1}\n                            />\n                        </>\n                        }\n                        {info1 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Info', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={40}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_info1 }\n                                        onChange={ this.onChangeMargin_bottom_info1}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={30}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_info1 }\n                                        onChange={ this.onChangeMargin_bottom_table_info1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={10}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_info1 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_info1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo1}\n                                        onChange={(val) => setAttributes({fontsizeinfo1: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                    }\n                                {(df_resp=='table') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo1table}\n                                        onChange={(val) => setAttributes({fontsizeinfo1table: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo1mobile}\n                                        onChange={(val) => setAttributes({fontsizeinfo1mobile: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_info1 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_info1: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectinfo1}\n                                value={effectinfo1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectinfo1}\n                                value={df_speed_effectinfo1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectinfo1}\n                                value={df_delay_effectinfo1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectinfo1}\n                                value={df_repeat_effectinfo1}\n                            />\n                        </>\n                        }\n                        {button1 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Button', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_button1 }\n                                        onChange={ this.onChangeMargin_bottom_button1}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table')  &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_button1 }\n                                        onChange={ this.onChangeMargin_bottom_table_button1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_button1 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_button1}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        value={fontsizebutton1}\n                                        onChange={(val) => setAttributes({fontsizebutton1: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                />\n                                    }\n                                {(df_resp=='table') &&\n                                    <FontSizePicker\n                                        value={fontsizebutton1table}\n                                        onChange={(val) => setAttributes({fontsizebutton1table: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <FontSizePicker\n                                        value={fontsizebutton1mobile}\n                                        onChange={(val) => setAttributes({fontsizebutton1mobile: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_button1 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_button1: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectbutton1}\n                                value={effectbutton1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectbutton1}\n                                value={df_speed_effectbutton1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectbutton1}\n                                value={df_delay_effectbutton1}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectbutton1}\n                                value={df_repeat_effectbutton1}\n                            />\n                            <RangeControl\n                                label={__('Padding top/bottom','bubiblock-slider')}\n                                help={__('px Unit','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={8}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ padding_link_button1 }\n                                onChange={(val) => setAttributes({ padding_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Padding left/right','bubiblock-slider')}\n                                help={__('px Unit','bubiblock-slider')}\n                                beforeIcon={'arrow-left-alt'}\n                                afterIcon={'arrow-right-alt'}\n                                allowReset\n                                resetFallbackValue={20}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ padding_right_link_button1 }\n                                onChange={(val) => setAttributes({ padding_right_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border solid','bubiblock-slider')}\n                                help={__('Px Unit','bubiblock-slider')}\n                                beforeIcon={'star-empty'}\n                                afterIcon={'star-filled'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_size_link_button1 }\n                                onChange={(val) => setAttributes({ border_size_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border top left radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_top_left_link_button1 }\n                                onChange={(val) => setAttributes({ border_radius_top_left_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border top right radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_top_right_link_button1 }\n                                onChange={(val) => setAttributes({ border_radius_top_right_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border bottom left radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_bottom_left_link_button1 }\n                                onChange={(val) => setAttributes({ border_radius_bottom_left_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border bottom right radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_bottom_right_link_button1 }\n                                onChange={(val) => setAttributes({ border_radius_bottom_right_link_button1: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                            {(df_background_color_transparent_link_button1 == 'df-trasparent-color-button1-false') &&\n                                <>\n                                {df_background_color_link_button1 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_link_button1 }\n                                    />\n                                }\n                                </>\n                            }\n                            {df_background_color_hover_link_button1 &&\n                                <ColorIndicator\n                                    colorValue={ df_background_color_hover_link_button1 }\n                                />\n                            }\n                            </h6>\n                            {(df_background_color_transparent_link_button1 == 'df-trasparent-color-button1-false') &&\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_link_button1}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_link_button1: newValue}) }\n                                    />\n                                </div>\n                            }\n                            <p className={\"df-inspector bubi-mt-1\"}>{__('Hover','bubiblock-slider')}</p>\n                            <div class={'legend-color-none'}>\n                                <ColorPaletteControl\n                                    value={ df_background_color_hover_link_button1}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_background_color_hover_link_button1: newValue}) }\n                                />\n                            </div>\n                            <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                            {df_color_link_button1 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_link_button1 }\n                                />\n                            }\n                            {df_color_hover_link_button1 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_hover_link_button1 }\n                                />\n                            }\n                            {df_border_color_link_button1 &&\n                                <ColorIndicator\n                                    colorValue={ df_border_color_link_button1 }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                                <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_color_link_button1}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_color_link_button1: newValue}) }\n                                />\n                                <p className=\"df-inspector\">{__('Color hover','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_color_hover_link_button1}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_color_hover_link_button1: newValue}) }\n                                />\n                                <p className=\"df-inspector\">{__('Border Color','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_border_color_link_button1}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_border_color_link_button1: newValue}) }\n                                />\n                            </div>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <h6 className=\"df-inspector\">{ __('Background color transparent', 'bubiblock-slider')}</h6>\n                                <div class=\"bubi-width-two\">\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_background_color_transparent_link_button1 == 'df-trasparent-color-button1-true'} onClick={() => setAttributes({ df_background_color_transparent_link_button1: 'df-trasparent-color-button1-true' })}\n                                >\n                                    {__('True','bubiblock-slider')}\n                                </Button>\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_background_color_transparent_link_button1 == 'df-trasparent-color-button1-false'} onClick={() => setAttributes({ df_background_color_transparent_link_button1: 'df-trasparent-color-button1-false' })}\n                                >\n                                    {__('False','bubiblock-slider')}\n                                </Button>\n                                </div>\n                            </ButtonGroup>\n                        </>\n                        }\n                    </PanelBody>\n                    <PanelBody // Slider 2\n                        icon={'format-image'}\n                        title={__('Slides 2', 'bubiblock-slider')}\n                        initialOpen={false}\n                        >\n                        <h6 className=\"df-inspector bubi-mt-1\">{ __('Background type', 'bubiblock-slider')}</h6>\n                        <div class=\"bubi-width-three bubibutton-icon\">\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <Tooltip\n                                    text= {__('Color','bubiblock-slider')}\n                                >\n                                    <Button\n                                        isPrimary={df_slider_chose_2 == 'df-slider-color-2'}\n                                        icon=\"admin-appearance\"\n                                        onClick={() => setAttributes({ df_slider_chose_2: 'df-slider-color-2' })}\n                                    >\n                                    </Button>\n                                </Tooltip>\n                                <Tooltip\n                                    text=  {__('Image','bubiblock-slider')}\n                                >\n                                    <Button\n                                        isPrimary={df_slider_chose_2 == 'df-slider-image-2'}\n                                        icon=\"format-image\"\n                                        onClick={() => setAttributes({ df_slider_chose_2: 'df-slider-image-2' })}\n                                    >\n                                    </Button>\n                                </Tooltip>\n                            </ButtonGroup>\n                        </div>\n                        {(df_slider_chose_2=='df-slider-image-2' ) &&\n                            <>\n                                {imageUrl_2?\n                                    <>\n                                    <img src={imageUrl_2} className={'bubi-mt-2'}/>\n                                    {isBlobURL(imageUrl_2) && <Spinner />}\n                                    </>\n                                    :\n                                    <MediaPlaceholder\n                                        className={'bubi-mt-2 bubi-mb-2'}\n                                        icon=\"format-image df-icon-img-upload\"\n                                        onSelect={ media => { setAttributes({ imageAlt_2: media.alt, imageUrl_2: media.url }); } }\n                                        onSelectURL={ this.onSelectURL2 }\n                                        onError={this.onUploadError2}\n                                        accept=\"image/*\"\n                                        allowedTypes={['image']}\n                                        notices={ noticeUI2 }\n                                    />\n                                }\n                                {imageUrl_2 &&\n                                <>\n                                    <MenuItem\n                                        icon={ 'trash' }\n                                        className={'df-remov-img'}\n                                        onClick={ this.removeImage2 }\n                                    >\n                                        { __('Remove Image','bubiblock-slider') }\n                                    </MenuItem>\n                                    <TextareaControl\n                                        label={__('Alt Text (Alternative Text)','bubiblock-slider')}\n                                        value={ alt2}\n                                        onChange={ this.updateAlt2 }\n                                        help={__('Alternative text describes your image to people who cant see it. Add a short description with its key details.','bubiblock-slider')}\n                                    />\n                                    <SelectControl\n                                        label={__(\"Dispaly Size\",\"bubiblock-slider\")}\n                                        options={[\n                                            {label: __('None','bubiblock-slider'), value: 'none'},\n                                            {label: __('Containe','bubiblock-slider'), value: 'contain'},\n                                            {label: __('Cover','bubiblock-slider'), value: 'cover'},\n                                            {label: __('Fill','bubiblock-slider'), value: 'fill'},\n                                            {label: __('Scale down','bubiblock-slider'), value: 'scale-down'},\n                                            {label: __('Unset','bubiblock-slider'), value: 'unset'},\n                                        ]}\n                                        onChange={this.onChangeDf_cover_img2}\n                                        value={df_cover_img2}\n                                    />\n                                    {(df_cover_img2=='none')&&\n                                    <>\n                                        <RangeControl\n                                            label={__('Display Position','bubiblock-slider')}\n                                            help={__('% Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-left-alt'}\n                                            afterIcon={'arrow-right-alt'}\n                                            allowReset\n                                            resetFallbackValue={50}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 20,\n                                                    label: __('20','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 40,\n                                                    label: __('40','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 60,\n                                                    label: __('60','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 80,\n                                                    label: __('80','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_focalPoint_img_2 }\n                                            onChange={ this.onChangeDf_focalPoint_img_2 }\n                                            min={ 0 }\n                                            max={ 100}\n                                        />\n                                        <RangeControl\n                                            label={__('Display Position','bubiblock-slider')}\n                                            help={__('% Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={50}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 20,\n                                                    label: __('20','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 40,\n                                                    label: __('40','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 60,\n                                                    label: __('60','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 80,\n                                                    label: __('80','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_focalPoint_y_img_2 }\n                                            onChange={ this.onChangeDf_focalPoint_y_img_2 }\n                                            min={ 0 }\n                                            max={ 100}\n                                        />\n                                        </>\n                                    }\n                                    <ToggleControl\n                                        label={ __( 'Show mask','bubiblock-slider' ) }\n                                        checked={df_mask_slider_2}\n                                        onChange={this.onChangeDf_mask_slider_2}\n                                    />\n                                    {df_mask_slider_2 &&\n                                        <>\n                                        <Notice\n                                            status=\"info\"\n                                            isDismissible={ false }\n                                        >\n                                            {__('If you have set the border radius for the slider this control will not work well!','bubiblock-slider')}\n                                        </Notice>\n                                        <ColorGradientControl\n                                            colorValue={ background_color_solid_mask_2 }\n                                            gradientValue={ background_color_gradient_mask_2 }\n                                            colors={ bubiColors }\n                                            gradients={ bubiGradients }\n                                            onColorChange={ (newValue) => setAttributes({ background_color_solid_mask_2: newValue }) }\n                                            onGradientChange={ (newValue) => setAttributes({ background_color_gradient_mask_2: newValue }) }\n                                        />\n                                        <RangeControl\n                                            label={__('Opacity','bubiblock-slider')}\n                                            beforeIcon={'hidden'}\n                                            afterIcon={'visibility'}\n                                            allowReset\n                                            resetFallbackValue={.4}\n                                            step={.1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.2,\n                                                    label: __('2','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.4,\n                                                    label: __('4','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.6,\n                                                    label: __('6','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0.8,\n                                                    label: __('8','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 1.0,\n                                                    label: __('10','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ df_opacity_mask_2 }\n                                            onChange={ this.onChangeDf_opacity_mask_2 }\n                                            min={ .0 }\n                                            max={ 1.0}\n                                        />\n                                    </>\n                                    }\n                                    <TextControl\n                                        label={__('Link Image','bubiblock-slider')}\n                                        value={ bubiblock_link_slider_2 }\n                                        onChange={ (newValue) => setAttributes({bubiblock_link_slider_2: newValue}) }\n                                        type=\"url\"\n                                    />\n                                    {bubiblock_link_slider_2 &&\n                                        <ButtonGroup\n                                                className={'df-button-group bubiblock-no-margin bubi-mb-2'}\n                                            >\n                                                <p className=\"df-inspector bubi-mt-1\">{ __('Open in new tab', 'bubiblock-slider')}</p>\n                                                <div class=\"bubi-width-two\">\n                                                <Button\n                                                    isSecondary\n                                                    isPrimary={bubiblock_link_tab_slider_2 == '_blank'} onClick={() => setAttributes({ bubiblock_link_tab_slider_2: '_blank' })}\n                                                >\n                                                    {__('True','bubiblock-slider')}\n                                                </Button>\n                                                <Button\n                                                    isSecondary\n                                                    isPrimary={bubiblock_link_tab_slider_2 == ''} onClick={() => setAttributes({ bubiblock_link_tab_slider_2: '' })}\n                                                >\n                                                    {__('False','bubiblock-slider')}\n                                                </Button>\n                                                </div>\n                                        </ButtonGroup>\n                                    }\n                                </>\n                                }\n                            </>\n                        }\n                        {(df_slider_chose_2=='df-slider-color-2' ) &&\n                            <>\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Background Color', 'bubiblock-slider')}\n                            {df_background_color_slider_2 &&\n                                <ColorIndicator\n                                    colorValue={ df_background_color_slider_2 }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                                <ColorPaletteControl\n                                    value={ df_background_color_slider_2}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_background_color_slider_2: newValue}) }\n                                />\n                            </div>\n                            </>\n                        }\n                        <ToggleControl\n                            label={ __( 'Dividers Top','bubiblock-slider' ) }\n                            checked={df_enable_divide_2}\n                            onChange={this.onChangeDf_enable_divide_2}\n                        />\n                        {df_enable_divide_2 &&\n                        <>\n                            <RadioControl\n                                label={__('Choose', 'df-sidebar-gutenberg')}\n                                selected={divide_2}\n                                className={'bubiblock-radio-image'}\n                                onChange={(val) => setAttributes({divide_2: val})}\n                                options={bubiOptionsDivideTop}\n                            />\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                            { df_color_divide_2 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_divide_2 }\n                                />\n                            }\n                            </h6>\n                            <ColorPicker\n                                color={df_color_divide_2}\n                                onChangeComplete={(newval) => setAttributes({df_color_divide_2: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                            />\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_divide_2 }\n                                        onChange={ this.onChangeDf_height_divide_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='table' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_table_divide_2 }\n                                        onChange={ this.onChangeDf_height_table_divide_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='mobile' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_mobile_divide_2 }\n                                        onChange={ this.onChangeDf_height_mobile_divide_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RangeControl\n                                label={__('Delayed appearance','bubiblock-slider')}\n                                help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={2}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 5,\n                                        label: __('5','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 15,\n                                        label: __('15','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 25,\n                                        label: __('25','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiblock_dalay_divide_2 }\n                                onChange={ this.onChangeBubiblock_dalay_divide_2}\n                                min={ 0 }\n                                max={ 20}\n                            />\n                        </>\n                        }\n                        <ToggleControl\n                            label={ __( 'Dividers Bottom','bubiblock-slider' ) }\n                            checked={df_enable_divide_bottom_2}\n                            onChange={this.onChangeDf_enable_divide_bottom_2}\n                        />\n                        {df_enable_divide_bottom_2 &&\n                        <>\n                            <RadioControl\n                                label={__('Choose', 'df-sidebar-gutenberg')}\n                                selected={divide_bottom_2}\n                                className={'df-radio-control-divide-bottom'}\n                                onChange={(val) => setAttributes({divide_bottom_2: val})}\n                                options={bubiOptionsDivideBottom}\n                            />\n                            <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                            { df_color_divide_bottom_2&&\n                                <ColorIndicator\n                                    colorValue={ df_color_divide_bottom_2 }\n                                />\n                            }\n                            </h6>\n                            <ColorPicker\n                                color={df_color_divide_bottom_2}\n                                onChangeComplete={(newval) => setAttributes({df_color_divide_bottom_2: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                            />\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_divide_bottom_2 }\n                                        onChange={ this.onChangeDf_height_divide_bottom_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='table' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_table_divide_bottom_2 }\n                                        onChange={ this.onChangeDf_height_table_divide_bottom_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                                {(df_resp=='mobile' ) &&\n                                    <RangeControl\n                                        label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                        help={__('Px Unit','bubiblock-slider')}\n                                        value={ df_height_mobile_divide_bottom_2 }\n                                        onChange={ this.onChangeDf_height_mobile_divide_bottom_2 }\n                                        min={20}\n                                        max={1000}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RangeControl\n                                label={__('Delayed appearance','bubiblock-slider')}\n                                help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={2}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 5,\n                                        label: __('5','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 15,\n                                        label: __('15','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 25,\n                                        label: __('25','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ bubiblock_dalay_divide_2_bottom }\n                                onChange={ this.onChangeBubiblock_dalay_divide_2_bottom}\n                                min={ 0 }\n                                max={ 20}\n                            />\n                        </>\n                        }\n                        {title2 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Title', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={25}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_caption2 }\n                                        onChange={ this.onChangeMargin_bottom_caption2}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={25}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_caption2 }\n                                        onChange={ this.onChangeMargin_bottom_table_caption2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={15}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_caption2 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_caption2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        className={'bubiblock-slider-inspectorcontrols'}\n                                        value={fontsizetitle2}\n                                        onChange={(val) => setAttributes({fontsizetitle2: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:22 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                    }\n                                {(df_resp=='table') &&\n                                    <FontSizePicker\n                                        value={fontsizetitle2table}\n                                        onChange={(val) => setAttributes({fontsizetitle2table: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:22 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile')&&\n                                    <FontSizePicker\n                                        value={fontsizetitle2mobile}\n                                        onChange={(val) => setAttributes({fontsizetitle2mobile: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:22 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_title2 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_title2: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectcaption2}\n                                value={effectcaption2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectcaption2}\n                                value={df_speed_effectcaption2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectcaption2}\n                                value={df_delay_effectcaption2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectcaption2}\n                                value={df_repeat_effectcaption2}\n                            />\n                        </>\n                        }\n                        {info2 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Info', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={40}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_info2 }\n                                        onChange={ this.onChangeMargin_bottom_info2}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={20}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_info2 }\n                                        onChange={ this.onChangeMargin_bottom_table_info2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={10}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_info2 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_info2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo2}\n                                        onChange={(val) => setAttributes({fontsizeinfo2: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                    }\n                                {(df_resp=='table') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo2table}\n                                        onChange={(val) => setAttributes({fontsizeinfo2table: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <FontSizePicker\n                                        value={fontsizeinfo2mobile}\n                                        onChange={(val) => setAttributes({fontsizeinfo2mobile: val})}\n                                        fontSizes={[\n                                            { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_info2 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_info2: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectinfo2}\n                                value={effectinfo2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectinfo2}\n                                value={df_speed_effectinfo2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectinfo2}\n                                value={df_delay_effectinfo2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectinfo2}\n                                value={df_repeat_effectinfo2}\n                            />\n                        </>\n                        }\n                        {button2 &&\n                        <>\n                            <h6 class=\"df-inspector\">{ __('Button', 'bubiblock-slider')}</h6>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <div class=\"df-group-button-resp\">\n                                    <div class=\"bubi-col-6\">\n                                        <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                    </div>\n                                    <div class=\"bubi-col-6\">\n                                        <Button\n                                            icon={'laptop'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'tablet'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                        >\n                                        </Button>\n                                        <Button\n                                            icon={'smartphone'}\n                                            isSecondary\n                                            className={'df-resp-button'}\n                                            isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                        >\n                                        </Button>\n                                    </div>\n                                </div>\n                                {(df_resp=='desktop') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -100,\n                                                label: __('-100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 300,\n                                                label: __('300','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_button2 }\n                                        onChange={ this.onChangeMargin_bottom_button2}\n                                        min={ -100 }\n                                        max={ 300}\n                                    />\n                                }\n                                {(df_resp=='table') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_table_button2 }\n                                        onChange={ this.onChangeMargin_bottom_table_button2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <RangeControl\n                                        label={__('Margin','bubiblock-slider')}\n                                        help={__('px Unit','bubiblock-slider')}\n                                        beforeIcon={'arrow-down-alt'}\n                                        afterIcon={'arrow-up-alt'}\n                                        allowReset\n                                        resetFallbackValue={5}\n                                        step={1}\n                                        withInputField={false}\n                                        separatorType=\"none\"\n                                        trackColor=\"#007cba\"\n                                        isShiftStepEnabled\n                                        marks={[\n                                            {\n                                                value: -50,\n                                                label: __('-50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 0,\n                                                label: __('0','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 50,\n                                                label: __('50','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 100,\n                                                label: __('100','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 150,\n                                                label: __('150','bubiblock-slider'),\n                                            },\n                                            {\n                                                value: 200,\n                                                label: __('200','bubiblock-slider'),\n                                            },\n                                        ]}\n                                        railColor=\"#02abff\"\n                                        value={ margin_bottom_mobile_button2 }\n                                        onChange={ this.onChangeMargin_bottom_mobile_button2}\n                                        min={ -50 }\n                                        max={ 200}\n                                    />\n                                }\n                                {(df_resp=='desktop') &&\n                                    <FontSizePicker\n                                        value={fontsizebutton2}\n                                        onChange={(val) => setAttributes({fontsizebutton2: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                />\n                                    }\n                                {(df_resp=='table')  &&\n                                    <FontSizePicker\n                                        value={fontsizebutton2table}\n                                        onChange={(val) => setAttributes({fontsizebutton2table: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                                {(df_resp=='mobile') &&\n                                    <FontSizePicker\n                                        value={fontsizebutton2mobile}\n                                        onChange={(val) => setAttributes({fontsizebutton2mobile: val})}\n                                        fontSizes={[\n                                            { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                            { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                            { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 22 },\n                                            { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                        ]}\n                                        withSlider={true}\n                                    />\n                                }\n                            </ButtonGroup>\n                            <RadioControl\n                                label={__('Align','bubiblock-slider')}\n                                selected={ alignment_button2 }\n                                options={ [\n                                    { label: 'Left', value: 'left' },\n                                    { label: 'Center', value: 'center' },\n                                    { label: 'Right', value: 'right' },\n                                ] }\n                                onChange={ ( newAlign ) => setAttributes( { alignment_button2: newAlign } ) }\n                            />\n                            <SelectControl\n                                label={__(\"Effect\",\"bubiblock-slider\")}\n                                options={bubiOptionsEffectAnimate}\n                                onChange={this.onChangeEffectbutton2}\n                                value={effectbutton2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectSpeed}\n                                onChange={this.onChangeDf_speed_effectbutton2}\n                                value={df_speed_effectbutton2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectDalay}\n                                onChange={this.onChangeDf_delay_effectbutton2}\n                                value={df_delay_effectbutton2}\n                            />\n                            <SelectControl\n                                label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                options={bubiOptionEffectRepeat}\n                                onChange={this.onChangeDf_repeat_effectbutton2}\n                                value={df_repeat_effectbutton2}\n                            />\n                            <RangeControl\n                                label={__('Padding top/bottom','bubiblock-slider')}\n                                help={__('px Unit','bubiblock-slider')}\n                                beforeIcon={'arrow-down-alt'}\n                                afterIcon={'arrow-up-alt'}\n                                allowReset\n                                resetFallbackValue={8}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ padding_link_button2 }\n                                onChange={(val) => setAttributes({ padding_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Padding left/right','bubiblock-slider')}\n                                help={__('px Unit','bubiblock-slider')}\n                                beforeIcon={'arrow-left-alt'}\n                                afterIcon={'arrow-right-alt'}\n                                allowReset\n                                resetFallbackValue={20}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ padding_right_link_button2 }\n                                onChange={(val) => setAttributes({ padding_right_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border solid','bubiblock-slider')}\n                                help={__('Px Unit','bubiblock-slider')}\n                                beforeIcon={'star-empty'}\n                                afterIcon={'star-filled'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_size_link_button2 }\n                                onChange={(val) => setAttributes({ border_size_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border top left radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_top_left_link_button2 }\n                                onChange={(val) => setAttributes({ border_radius_top_left_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border top right radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_top_right_link_button2 }\n                                onChange={(val) => setAttributes({ border_radius_top_right_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border bottom left radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_bottom_left_link_button2 }\n                                onChange={(val) => setAttributes({ border_radius_bottom_left_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <RangeControl\n                                label={__('Border bottom right radius','bubiblock-slider')}\n                                help={__('% Unit','bubiblock-slider')}\n                                beforeIcon={'fullscreen-alt'}\n                                afterIcon={'fullscreen-exit-alt'}\n                                allowReset\n                                resetFallbackValue={0}\n                                step={1}\n                                withInputField={false}\n                                separatorType=\"none\"\n                                trackColor=\"#007cba\"\n                                isShiftStepEnabled\n                                marks={[\n                                    {\n                                        value: 0,\n                                        label: __('0','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 10,\n                                        label: __('10','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 20,\n                                        label: __('20','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 30,\n                                        label: __('30','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 40,\n                                        label: __('40','bubiblock-slider'),\n                                    },\n                                    {\n                                        value: 50,\n                                        label: __('50','bubiblock-slider'),\n                                    },\n                                ]}\n                                railColor=\"#02abff\"\n                                value={ border_radius_bottom_right_link_button2 }\n                                onChange={(val) => setAttributes({ border_radius_bottom_right_link_button2: val })}\n                                min={ 0 }\n                                max={ 50}\n                            />\n                            <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                            {(df_background_color_transparent_link_button2 == 'df-trasparent-color-button2-false') &&\n                                <>\n                                {df_background_color_link_button2 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_link_button2 }\n                                    />\n                                }\n                                </>\n                            }\n                            {df_background_color_hover_link_button2 &&\n                                <ColorIndicator\n                                    colorValue={ df_background_color_hover_link_button2 }\n                                />\n                            }\n                            </h6>\n                            {(df_background_color_transparent_link_button2 == 'df-trasparent-color-button2-false') &&\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_link_button2}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_link_button2: newValue}) }\n                                    />\n                                </div>\n                            }\n                            <p className={\"df-inspector bubi-mt-1\"}>{__('Hover','bubiblock-slider')}</p>\n                            <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_hover_link_button2}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_hover_link_button2: newValue}) }\n                                    />\n                            </div>\n                            <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                            {df_color_link_button2 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_link_button2 }\n                                />\n                            }\n                            {df_color_hover_link_button2 &&\n                                <ColorIndicator\n                                    colorValue={ df_color_hover_link_button2 }\n                                />\n                            }\n                            {df_border_color_link_button2 &&\n                                <ColorIndicator\n                                    colorValue={ df_border_color_link_button2 }\n                                />\n                            }\n                            </h6>\n                            <div class={'legend-color-none'}>\n                                <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_color_link_button2}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_color_link_button2: newValue}) }\n                                />\n                                <p className=\"df-inspector\">{__('Color hover','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_color_hover_link_button2}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_color_hover_link_button2: newValue}) }\n                                />\n                                <p className=\"df-inspector\">{__('Border Color','bubiblock-slider')}</p>\n                                <ColorPaletteControl\n                                    value={ df_border_color_link_button2}\n                                    colors={ bubiColors }\n                                    onChange={ (newValue) => setAttributes({df_border_color_link_button2: newValue}) }\n                                />\n                            </div>\n                            <ButtonGroup\n                                className={'df-button-group bubiblock-no-margin'}\n                            >\n                                <h6 className=\"df-inspector\">{ __('Background color transparent', 'bubiblock-slider')}</h6>\n                                <div class=\"bubi-width-two\">\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_background_color_transparent_link_button2 == 'df-trasparent-color-button2-true'} onClick={() => setAttributes({ df_background_color_transparent_link_button2: 'df-trasparent-color-button2-true' })}\n                                >\n                                    {__('True','bubiblock-slider')}\n                                </Button>\n                                <Button\n                                    isSecondary\n                                    isPrimary={df_background_color_transparent_link_button2 == 'df-trasparent-color-button2-false'} onClick={() => setAttributes({ df_background_color_transparent_link_button2: 'df-trasparent-color-button2-false' })}\n                                >\n                                    {__('False','bubiblock-slider')}\n                                </Button>\n                                </div>\n                            </ButtonGroup>\n                        </>\n                        }\n                    </PanelBody>\n                    <Panel\n                        className={'bubiblock-add-slider'}\n                    >\n                        <ToggleControl\n                            label={__( 'Add Slides','bubiblock-slider' ) }\n                            help={__('Important: if you want to remove this slider make sure you are with the carousel on the first or second slider!','bubiblock-slider')}\n                            checked={bubiblock_add_slider_3}\n                            onChange={(val) => setAttributes({ bubiblock_add_slider_3: val })}\n                        />\n                    </Panel>\n                    {bubiblock_add_slider_3 &&\n                        <>\n                        <PanelBody // Slider 3\n                            icon={'format-image'}\n                            title={__('Slides 3', 'bubiblock-slider')}\n                            initialOpen={false}\n                            >\n                            <h6 className=\"df-inspector bubi-mt-1\">{ __('Background type', 'bubiblock-slider')}</h6>\n                            <div class=\"bubi-width-three bubibutton-icon\">\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <Tooltip\n                                        text= {__('Color','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_3 == 'df-slider-color-3'}\n                                            icon=\"admin-appearance\"\n                                            onClick={() => setAttributes({ df_slider_chose_3: 'df-slider-color-3' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                    <Tooltip\n                                        text=  {__('Image','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_3 == 'df-slider-image-3'}\n                                            icon=\"format-image\"\n                                            onClick={() => setAttributes({ df_slider_chose_3: 'df-slider-image-3' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                </ButtonGroup>\n                            </div>\n                            {(df_slider_chose_3=='df-slider-image-3' ) &&\n                                <>\n                                    {imageUrl_3?\n                                        <>\n                                        <img src={imageUrl_3} className={'bubi-mt-2'}/>\n                                        {isBlobURL(imageUrl_3) && <Spinner />}\n                                        </>\n                                        :\n                                        <MediaPlaceholder\n                                            className={'bubi-mt-2 bubi-mb-2'}\n                                            icon=\"format-image df-icon-img-upload\"\n                                            onSelect={ media => { setAttributes({ imageAlt_3: media.alt, imageUrl_3: media.url }); } }\n                                            onSelectURL={ this.onSelectURL3 }\n                                            onError={this.onUploadError3}\n                                            accept=\"image/*\"\n                                            allowedTypes={['image']}\n                                            notices={ noticeUI3 }\n                                        />\n                                    }\n                                    {imageUrl_3 &&\n                                    <>\n                                        <MenuItem\n                                            icon={ 'trash' }\n                                            className={'df-remov-img'}\n                                            onClick={ this.removeImage3 }\n                                        >\n                                            { __('Remove Image','bubiblock-slider') }\n                                        </MenuItem>\n                                        <TextareaControl\n                                            label={__('Alt Text (Alternative Text)','bubiblock-slider')}\n                                            value={ alt3}\n                                            onChange={ this.updateAlt3 }\n                                            help={__('Alternative text describes your image to people who cant see it. Add a short description with its key details.','bubiblock-slider')}\n                                        />\n                                        <SelectControl\n                                            label={__(\"Dispaly Size\",\"bubiblock-slider\")}\n                                            options={[\n                                                {label: __('None','bubiblock-slider'), value: 'none'},\n                                                {label: __('Containe','bubiblock-slider'), value: 'contain'},\n                                                {label: __('Cover','bubiblock-slider'), value: 'cover'},\n                                                {label: __('Fill','bubiblock-slider'), value: 'fill'},\n                                                {label: __('Scale down','bubiblock-slider'), value: 'scale-down'},\n                                                {label: __('Unset','bubiblock-slider'), value: 'unset'},\n                                            ]}\n                                            onChange={this.onChangeDf_cover_img3}\n                                            value={df_cover_img3}\n                                        />\n                                        {(df_cover_img3=='none')&&\n                                        <>\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-left-alt'}\n                                                afterIcon={'arrow-right-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_img_3 }\n                                                onChange={ this.onChangeDf_focalPoint_img_3 }\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-down-alt'}\n                                                afterIcon={'arrow-up-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_y_img_3 }\n                                                onChange={ this.onChangeDf_focalPoint_y_img_3 }\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            </>\n                                        }\n                                        <ToggleControl\n                                            label={ __( 'Show mask','bubiblock-slider' ) }\n                                            checked={df_mask_slider_3}\n                                            onChange={this.onChangeDf_mask_slider_3}\n                                        />\n                                        {df_mask_slider_3 &&\n                                            <>\n                                            <Notice\n                                                status=\"info\"\n                                                isDismissible={ false }\n                                            >\n                                                {__('If you have set the border radius for the slider this control will not work well!','bubiblock-slider')}\n                                            </Notice>\n                                            <ColorGradientControl\n                                                colorValue={ background_color_solid_mask_3 }\n                                                gradientValue={ background_color_gradient_mask_3 }\n                                                colors={ bubiColors }\n                                                gradients={ bubiGradients }\n                                                onColorChange={ (newValue) => setAttributes({ background_color_solid_mask_3: newValue }) }\n                                                onGradientChange={ (newValue) => setAttributes({ background_color_gradient_mask_3: newValue }) }\n                                            />\n                                            <RangeControl\n                                                label={__('Opacity','bubiblock-slider')}\n                                                beforeIcon={'hidden'}\n                                                afterIcon={'visibility'}\n                                                allowReset\n                                                resetFallbackValue={.4}\n                                                step={.1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.2,\n                                                        label: __('2','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.4,\n                                                        label: __('4','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.6,\n                                                        label: __('6','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.8,\n                                                        label: __('8','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 1.0,\n                                                        label: __('10','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_opacity_mask_3 }\n                                                onChange={ this.onChangeDf_opacity_mask_3 }\n                                                min={ .0 }\n                                                max={ 1.0}\n                                            />\n                                        </>\n                                        }\n                                        <TextControl\n                                            label={__('Link Image','bubiblock-slider')}\n                                            value={ bubiblock_link_slider_3 }\n                                            onChange={ (newValue) => setAttributes({bubiblock_link_slider_3: newValue}) }\n                                            type=\"url\"\n                                        />\n                                        {bubiblock_link_slider_3 &&\n                                            <ButtonGroup\n                                                    className={'df-button-group bubiblock-no-margin bubi-mb-2'}\n                                                >\n                                                    <p className=\"df-inspector bubi-mt-1\">{ __('Open in new tab', 'bubiblock-slider')}</p>\n                                                    <div class=\"bubi-width-two\">\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_3 == '_blank'} onClick={() => setAttributes({ bubiblock_link_tab_slider_3: '_blank' })}\n                                                    >\n                                                        {__('True','bubiblock-slider')}\n                                                    </Button>\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_3 == ''} onClick={() => setAttributes({ bubiblock_link_tab_slider_3: '' })}\n                                                    >\n                                                        {__('False','bubiblock-slider')}\n                                                    </Button>\n                                                    </div>\n                                            </ButtonGroup>\n                                        }\n                                    </>\n                                    }\n                                </>\n                            }\n                            {(df_slider_chose_3=='df-slider-color-3' ) &&\n                                <>\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Background Color', 'bubiblock-slider')}\n                                {df_background_color_slider_3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_slider_3 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_slider_3}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_slider_3: newValue}) }\n                                    />\n                                </div>\n                                </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Top','bubiblock-slider' ) }\n                                checked={df_enable_divide_3}\n                                onChange={this.onChangeDf_enable_divide_3}\n                            />\n                            {df_enable_divide_3 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_3}\n                                    className={'bubiblock-radio-image'}\n                                    onChange={(val) => setAttributes({divide_3: val})}\n                                    options={bubiOptionsDivideTop}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_3 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_3}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_3: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_3 }\n                                            onChange={ this.onChangeDf_height_divide_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_3 }\n                                            onChange={ this.onChangeDf_height_table_divide_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_3 }\n                                            onChange={ this.onChangeDf_height_mobile_divide_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_3 }\n                                    onChange={ this.onChangeBubiblock_dalay_divide_3}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Bottom','bubiblock-slider' ) }\n                                checked={df_enable_divide_bottom_3}\n                                onChange={this.onChangeDf_enable_divide_bottom_3}\n                            />\n                            {df_enable_divide_bottom_3 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_bottom_3}\n                                    className={'df-radio-control-divide-bottom'}\n                                    onChange={(val) => setAttributes({divide_bottom_3: val})}\n                                    options={bubiOptionsDivideBottom}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_bottom_3&&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_bottom_3 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_bottom_3}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_bottom_3: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_bottom_3 }\n                                            onChange={ this.onChangeDf_height_divide_bottom_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_bottom_3 }\n                                            onChange={ this.onChangeDf_height_table_divide_bottom_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_bottom_3 }\n                                            onChange={ this.onChangeDf_height_mobile_divide_bottom_3 }\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_3_bottom }\n                                    onChange={ this.onChangeBubiblock_dalay_divide_3_bottom}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            {title3 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Title', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={35}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_caption3 }\n                                            onChange={ this.onChangeMargin_bottom_caption3}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={25}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_caption3 }\n                                            onChange={ this.onChangeMargin_bottom_table_caption3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={15}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_caption3 }\n                                            onChange={ this.onChangeMargin_bottom_mobile_caption3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            className={'bubiblock-slider-inspectorcontrols'}\n                                            value={fontsizetitle3}\n                                            onChange={(val) => setAttributes({fontsizetitle3: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle3table}\n                                            onChange={(val) => setAttributes({fontsizetitle3table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle3mobile}\n                                            onChange={(val) => setAttributes({fontsizetitle3mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_title3 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_title3: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={this.onChangeEffectcaption3}\n                                    value={effectcaption3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={this.onChangeDf_speed_effectcaption3}\n                                    value={df_speed_effectcaption3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={this.onChangeDf_delay_effectcaption3}\n                                    value={df_delay_effectcaption3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={this.onChangeDf_repeat_effectcaption3}\n                                    value={df_repeat_effectcaption3}\n                                />\n                            </>\n                            }\n                            {info3 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Info', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={40}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_info3 }\n                                            onChange={ this.onChangeMargin_bottom_info3}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={30}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_info3 }\n                                            onChange={ this.onChangeMargin_bottom_table_info3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={10}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_info3 }\n                                            onChange={ this.onChangeMargin_bottom_mobile_info3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo3}\n                                            onChange={(val) => setAttributes({fontsizeinfo3: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo3table}\n                                            onChange={(val) => setAttributes({fontsizeinfo3table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo3mobile}\n                                            onChange={(val) => setAttributes({fontsizeinfo3mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_info3 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_info3: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={this.onChangeEffectinfo3}\n                                    value={effectinfo3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={this.onChangeDf_speed_effectinfo3}\n                                    value={df_speed_effectinfo3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={this.onChangeDf_delay_effectinfo3}\n                                    value={df_delay_effectinfo3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={this.onChangeDf_repeat_effectinfo3}\n                                    value={df_repeat_effectinfo3}\n                                />\n                            </>\n                            }\n                            {button3 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Button', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_button3 }\n                                            onChange={ this.onChangeMargin_bottom_button3}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_button3 }\n                                            onChange={ this.onChangeMargin_bottom_table_button3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_button3 }\n                                            onChange={ this.onChangeMargin_bottom_mobile_button3}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton3}\n                                            onChange={(val) => setAttributes({fontsizebutton3: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                    />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton3table}\n                                            onChange={(val) => setAttributes({fontsizebutton3table: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton3mobile}\n                                            onChange={(val) => setAttributes({fontsizebutton3mobile: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_button3 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_button3: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={this.onChangeEffectbutton3}\n                                    value={effectbutton3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={this.onChangeDf_speed_effectbutton3}\n                                    value={df_speed_effectbutton3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={this.onChangeDf_delay_effectbutton3}\n                                    value={df_delay_effectbutton3}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={this.onChangeDf_repeat_effectbutton3}\n                                    value={df_repeat_effectbutton3}\n                                />\n                                <RangeControl\n                                    label={__('Padding top/bottom','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={8}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_link_button3 }\n                                    onChange={(val) => setAttributes({ padding_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Padding left/right','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={20}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_right_link_button3 }\n                                    onChange={(val) => setAttributes({ padding_right_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border solid','bubiblock-slider')}\n                                    help={__('Px Unit','bubiblock-slider')}\n                                    beforeIcon={'star-empty'}\n                                    afterIcon={'star-filled'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_size_link_button3 }\n                                    onChange={(val) => setAttributes({ border_size_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_left_link_button3 }\n                                    onChange={(val) => setAttributes({ border_radius_top_left_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_right_link_button3 }\n                                    onChange={(val) => setAttributes({ border_radius_top_right_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_left_link_button3 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_left_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_right_link_button3 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_right_link_button3: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                                {(df_background_color_transparent_link_button3 == 'df-trasparent-color-button3-false') &&\n                                    <>\n                                    {df_background_color_link_button3 &&\n                                        <ColorIndicator\n                                            colorValue={ df_background_color_link_button3 }\n                                        />\n                                    }\n                                    </>\n                                }\n                                {df_background_color_hover_link_button3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_hover_link_button3 }\n                                    />\n                                }\n                                </h6>\n                                {(df_background_color_transparent_link_button3 == 'df-trasparent-color-button3-false') &&\n                                    <div class={'legend-color-none'}>\n                                        <ColorPaletteControl\n                                            value={ df_background_color_link_button3}\n                                            colors={ bubiColors }\n                                            onChange={ (newValue) => setAttributes({df_background_color_link_button3: newValue}) }\n                                        />\n                                    </div>\n                                }\n                                <p className={\"df-inspector bubi-mt-1\"}>{__('Hover','bubiblock-slider')}</p>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_hover_link_button3}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_hover_link_button3: newValue}) }\n                                    />\n                                </div>\n                                <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                                {df_color_link_button3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_link_button3 }\n                                    />\n                                }\n                                {df_color_hover_link_button3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_hover_link_button3 }\n                                    />\n                                }\n                                {df_border_color_link_button3 &&\n                                    <ColorIndicator\n                                        colorValue={ df_border_color_link_button3 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_link_button3}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_link_button3: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Color hover','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_hover_link_button3}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_hover_link_button3: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Border Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_border_color_link_button3}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_border_color_link_button3: newValue}) }\n                                    />\n                                </div>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <h6 className=\"df-inspector\">{ __('Background color transparent', 'bubiblock-slider')}</h6>\n                                    <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button3 == 'df-trasparent-color-button3-true'} onClick={() => setAttributes({ df_background_color_transparent_link_button3: 'df-trasparent-color-button3-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button3 == 'df-trasparent-color-button3-false'} onClick={() => setAttributes({ df_background_color_transparent_link_button3: 'df-trasparent-color-button3-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                    </div>\n                                </ButtonGroup>\n                            </>\n                            }\n                            </PanelBody>\n                            <Panel\n                                className={'bubiblock-add-slider'}\n                            >\n                                <ToggleControl\n                                    label={__( 'Add Slides','bubiblock-slider' ) }\n                                    help={__('Important: if you want to remove this slider make sure you are with the carousel on the first or second slider!','bubiblock-slider')}\n                                    checked={bubiblock_add_slider_4}\n                                    onChange={(val) => setAttributes({ bubiblock_add_slider_4: val })}\n                                />\n                        </Panel>\n                        </>\n                    }\n                    {bubiblock_add_slider_4 &&\n                        <>\n                        <PanelBody // Slider 4\n                            icon={'format-image'}\n                            title={__('Slides 4', 'bubiblock-slider')}\n                            initialOpen={false}\n                            >\n                            <h6 className=\"df-inspector bubi-mt-1\">{ __('Background type', 'bubiblock-slider')}</h6>\n                            <div class=\"bubi-width-three bubibutton-icon\">\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <Tooltip\n                                        text= {__('Color','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_4 == 'df-slider-color-4'}\n                                            icon=\"admin-appearance\"\n                                            onClick={() => setAttributes({ df_slider_chose_4: 'df-slider-color-4' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                    <Tooltip\n                                        text=  {__('Image','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_4 == 'df-slider-image-4'}\n                                            icon=\"format-image\"\n                                            onClick={() => setAttributes({ df_slider_chose_4: 'df-slider-image-4' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                </ButtonGroup>\n                            </div>\n                            {(df_slider_chose_4=='df-slider-image-4' ) &&\n                                <>\n                                    {imageUrl_4?\n                                        <>\n                                        <img src={imageUrl_4} className={'bubi-mt-2'}/>\n                                        {isBlobURL(imageUrl_4) && <Spinner />}\n                                        </>\n                                        :\n                                        <MediaPlaceholder\n                                            className={'bubi-mt-2 bubi-mb-2'}\n                                            icon=\"format-image df-icon-img-upload\"\n                                            onSelect={ media => { setAttributes({ imageAlt_4: media.alt, imageUrl_4: media.url }); } }\n                                            onSelectURL={ this.onSelectURL4 }\n                                            onError={this.onUploadError4}\n                                            accept=\"image/*\"\n                                            allowedTypes={['image']}\n                                            notices={ noticeUI4 }\n                                        />\n                                    }\n                                    {imageUrl_4 &&\n                                    <>\n                                        <MenuItem\n                                            icon={ 'trash' }\n                                            className={'df-remov-img'}\n                                            onClick={ this.removeImage4 }\n                                        >\n                                            { __('Remove Image','bubiblock-slider') }\n                                        </MenuItem>\n                                        <TextareaControl\n                                            label={__('Alt Text (Alternative Text)','bubiblock-slider')}\n                                            value={ alt4}\n                                            onChange={ this.updateAlt4 }\n                                            help={__('Alternative text describes your image to people who cant see it. Add a short description with its key details.','bubiblock-slider')}\n                                        />\n                                        <SelectControl\n                                            label={__(\"Dispaly Size\",\"bubiblock-slider\")}\n                                            options={[\n                                                {label: __('None','bubiblock-slider'), value: 'none'},\n                                                {label: __('Containe','bubiblock-slider'), value: 'contain'},\n                                                {label: __('Cover','bubiblock-slider'), value: 'cover'},\n                                                {label: __('Fill','bubiblock-slider'), value: 'fill'},\n                                                {label: __('Scale down','bubiblock-slider'), value: 'scale-down'},\n                                                {label: __('Unset','bubiblock-slider'), value: 'unset'},\n                                            ]}\n                                            onChange={(val) => setAttributes({ df_cover_img4: val })}\n                                            value={df_cover_img4}\n                                        />\n                                        {(df_cover_img4=='none')&&\n                                        <>\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-left-alt'}\n                                                afterIcon={'arrow-right-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_img_4 }\n                                                onChange={(val) => setAttributes({ df_focalPoint_img_4: val })}\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-down-alt'}\n                                                afterIcon={'arrow-up-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_y_img_4 }\n                                                onChange={(val) => setAttributes({ df_focalPoint_y_img_4: val })}\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            </>\n                                        }\n                                        <ToggleControl\n                                            label={ __( 'Show mask','bubiblock-slider' ) }\n                                            checked={df_mask_slider_4}\n                                            onChange={(val) => setAttributes({ df_mask_slider_4: val })}\n                                        />\n                                        {df_mask_slider_4 &&\n                                            <>\n                                            <Notice\n                                                status=\"info\"\n                                                isDismissible={ false }\n                                            >\n                                                {__('If you have set the border radius for the slider this control will not work well!','bubiblock-slider')}\n                                            </Notice>\n                                            <ColorGradientControl\n                                                colorValue={ background_color_solid_mask_4 }\n                                                gradientValue={ background_color_gradient_mask_4 }\n                                                colors={ bubiColors }\n                                                gradients={ bubiGradients }\n                                                onColorChange={ (newValue) => setAttributes({ background_color_solid_mask_4: newValue }) }\n                                                onGradientChange={ (newValue) => setAttributes({ background_color_gradient_mask_4: newValue }) }\n                                            />\n                                            <RangeControl\n                                                label={__('Opacity','bubiblock-slider')}\n                                                beforeIcon={'hidden'}\n                                                afterIcon={'visibility'}\n                                                allowReset\n                                                resetFallbackValue={.4}\n                                                step={.1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.2,\n                                                        label: __('2','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.4,\n                                                        label: __('4','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.6,\n                                                        label: __('6','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.8,\n                                                        label: __('8','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 1.0,\n                                                        label: __('10','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_opacity_mask_4 }\n                                                onChange={(val) => setAttributes({ df_opacity_mask_4: val })}\n                                                min={ .0 }\n                                                max={ 1.0}\n                                            />\n                                        </>\n                                        }\n                                        <TextControl\n                                            label={__('Link Image','bubiblock-slider')}\n                                            value={ bubiblock_link_slider_4 }\n                                            onChange={ (newValue) => setAttributes({bubiblock_link_slider_4: newValue}) }\n                                            type=\"url\"\n                                        />\n                                        {bubiblock_link_slider_4 &&\n                                            <ButtonGroup\n                                                    className={'df-button-group bubiblock-no-margin bubi-mb-2'}\n                                                >\n                                                    <p className=\"df-inspector bubi-mt-1\">{ __('Open in new tab', 'bubiblock-slider')}</p>\n                                                    <div class=\"bubi-width-two\">\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_4 == '_blank'} onClick={() => setAttributes({ bubiblock_link_tab_slider_4: '_blank' })}\n                                                    >\n                                                        {__('True','bubiblock-slider')}\n                                                    </Button>\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_4 == ''} onClick={() => setAttributes({ bubiblock_link_tab_slider_4: '' })}\n                                                    >\n                                                        {__('False','bubiblock-slider')}\n                                                    </Button>\n                                                    </div>\n                                            </ButtonGroup>\n                                        }\n                                    </>\n                                    }\n                                </>\n                            }\n                            {(df_slider_chose_4=='df-slider-color-4' ) &&\n                                <>\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Background Color', 'bubiblock-slider')}\n                                {df_background_color_slider_4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_slider_4 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_slider_4 }\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_slider_4 : newValue}) }\n                                    />\n                                </div>\n                                </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Top','bubiblock-slider' ) }\n                                checked={df_enable_divide_4}\n                                onChange={ (newValue) => setAttributes({df_enable_divide_4: newValue}) }\n                            />\n                            {df_enable_divide_4 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_4}\n                                    className={'bubiblock-radio-image'}\n                                    onChange={(val) => setAttributes({divide_4: val})}\n                                    options={bubiOptionsDivideTop}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_4 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_4}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_4: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_4 }\n                                            onChange={(val) => setAttributes({df_height_divide_4: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_4 }\n                                            onChange={(val) => setAttributes({df_height_table_divide_4: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_4 }\n                                            onChange={(val) => setAttributes({df_height_mobile_divide_4 : val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_4 }\n                                    onChange={(val) => setAttributes({bubiblock_dalay_divide_4 : val})}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Bottom','bubiblock-slider' ) }\n                                checked={df_enable_divide_bottom_4}\n                                onChange={(val) => setAttributes({df_enable_divide_bottom_4 : val})}\n                            />\n                            {df_enable_divide_bottom_4 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_bottom_4}\n                                    className={'df-radio-control-divide-bottom'}\n                                    onChange={(val) => setAttributes({divide_bottom_4: val})}\n                                    options={bubiOptionsDivideBottom}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_bottom_4&&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_bottom_4 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_bottom_4}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_bottom_4: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_bottom_4 }\n                                            onChange={(val) => setAttributes({df_height_divide_bottom_4: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_bottom_4 }\n                                            onChange={(val) => setAttributes({df_height_table_divide_bottom_4: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_bottom_4}\n                                            onChange={(val) => setAttributes({df_height_mobile_divide_bottom_4: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_4_bottom }\n                                    onChange={(val) => setAttributes({bubiblock_dalay_divide_4_bottom: val})}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            {title4 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Title', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={35}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_caption4}\n                                            onChange={(val) => setAttributes({margin_bottom_caption4: val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={25}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_caption4 }\n                                            onChange={(val) => setAttributes({margin_bottom_table_caption4: val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={15}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_caption4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_caption4: val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            className={'bubiblock-slider-inspectorcontrols'}\n                                            value={fontsizetitle4}\n                                            onChange={(val) => setAttributes({fontsizetitle4: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle4table}\n                                            onChange={(val) => setAttributes({fontsizetitle4table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle4mobile}\n                                            onChange={(val) => setAttributes({fontsizetitle4mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_title4 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_title4: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectcaption4: val})}\n                                    value={effectcaption4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectcaption4: val})}\n                                    value={df_speed_effectcaption4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectcaption4: val})}\n                                    value={df_delay_effectcaption4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectcaption4: val})}\n                                    value={df_repeat_effectcaption4}\n                                />\n                            </>\n                            }\n                            {info4 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Info', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={40}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_info4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_info4: val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={30}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_info4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_table_info4 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={10}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_info4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_info4 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo4}\n                                            onChange={(val) => setAttributes({fontsizeinfo4: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo4table}\n                                            onChange={(val) => setAttributes({fontsizeinfo4table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo4mobile}\n                                            onChange={(val) => setAttributes({fontsizeinfo4mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_info4 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_info4: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectinfo4 : val})}\n                                    value={effectinfo4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectinfo4 : val})}\n                                    value={df_speed_effectinfo4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectinfo4 : val})}\n                                    value={df_delay_effectinfo4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectinfo4 : val})}\n                                    value={df_repeat_effectinfo4}\n                                />\n                            </>\n                            }\n                            {button4 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Button', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_button4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_button4 : val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_button4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_table_button4 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_button4 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_button4 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton4}\n                                            onChange={(val) => setAttributes({fontsizebutton4: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                    />\n                                        }\n                                    {(df_resp=='table')  &&\n                                        <FontSizePicker\n                                            value={fontsizebutton4table}\n                                            onChange={(val) => setAttributes({fontsizebutton4table: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile')  &&\n                                        <FontSizePicker\n                                            value={fontsizebutton4mobile}\n                                            onChange={(val) => setAttributes({fontsizebutton4mobile: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_button4 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_button4: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectbutton4 : val})}\n                                    value={effectbutton4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectbutton4 : val})}\n                                    value={df_speed_effectbutton4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectbutton4 : val})}\n                                    value={df_delay_effectbutton4}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectbutton4 : val})}\n                                    value={df_repeat_effectbutton4}\n                                />\n                                <RangeControl\n                                    label={__('Padding top/bottom','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={8}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_link_button4 }\n                                    onChange={(val) => setAttributes({ padding_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Padding left/right','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={20}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_right_link_button4 }\n                                    onChange={(val) => setAttributes({ padding_right_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border solid','bubiblock-slider')}\n                                    help={__('Px Unit','bubiblock-slider')}\n                                    beforeIcon={'star-empty'}\n                                    afterIcon={'star-filled'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_size_link_button4 }\n                                    onChange={(val) => setAttributes({ border_size_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_left_link_button4 }\n                                    onChange={(val) => setAttributes({ border_radius_top_left_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_right_link_button4 }\n                                    onChange={(val) => setAttributes({ border_radius_top_right_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_left_link_button4 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_left_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_right_link_button4 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_right_link_button4: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                                {(df_background_color_transparent_link_button4 == 'df-trasparent-color-button4-false') &&\n                                    <>\n                                    {df_background_color_link_button4 &&\n                                        <ColorIndicator\n                                            colorValue={ df_background_color_link_button4 }\n                                        />\n                                    }\n                                    </>\n                                }\n                                {df_background_color_hover_link_button4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_hover_link_button4 }\n                                    />\n                                }\n                                </h6>\n                                {(df_background_color_transparent_link_button4 == 'df-trasparent-color-button4-false') &&\n                                    <div class={'legend-color-none'}>\n                                        <ColorPaletteControl\n                                            value={ df_background_color_link_button4 }\n                                            colors={ bubiColors }\n                                            onChange={ (newValue) => setAttributes({df_background_color_link_button4 : newValue}) }\n                                        />\n                                    </div>\n                                }\n                                <p className={\"df-inspector bubi-mt-1\"}>{__('Hover','bubiblock-slider')}</p>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_hover_link_button4}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_hover_link_button4 : newValue}) }\n                                    />\n                                </div>\n                                <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                                {df_color_link_button4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_link_button4 }\n                                    />\n                                }\n                                {df_color_hover_link_button4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_hover_link_button4 }\n                                    />\n                                }\n                                {df_border_color_link_button4 &&\n                                    <ColorIndicator\n                                        colorValue={ df_border_color_link_button4 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_link_button4}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_link_button4: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Color hover','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_hover_link_button4}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_hover_link_button4: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Border Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_border_color_link_button4}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_border_color_link_button4: newValue}) }\n                                    />\n                                </div>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <h6 className=\"df-inspector\">{ __('Background color transparent', 'bubiblock-slider')}</h6>\n                                    <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button4 == 'df-trasparent-color-button4-true'} onClick={() => setAttributes({ df_background_color_transparent_link_button4: 'df-trasparent-color-button4-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button4 == 'df-trasparent-color-button4-false'} onClick={() => setAttributes({ df_background_color_transparent_link_button4: 'df-trasparent-color-button4-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                    </div>\n                                </ButtonGroup>\n                            </>\n                            }\n                            </PanelBody>\n                            <Panel\n                                className={'bubiblock-add-slider'}\n                            >\n                                <ToggleControl\n                                    label={__( 'Add Slides','bubiblock-slider' ) }\n                                    help={__('Important: if you want to remove this slider make sure you are with the carousel on the first or second slider!','bubiblock-slider')}\n                                    checked={bubiblock_add_slider_5}\n                                    onChange={(val) => setAttributes({ bubiblock_add_slider_5: val })}\n                                />\n                            </Panel>\n                        </>\n                    }\n                    {bubiblock_add_slider_5 &&\n                        <>\n                        <PanelBody // Slider 5\n                            icon={'format-image'}\n                            title={__('Slides 5', 'bubiblock-slider')}\n                            initialOpen={false}\n                            >\n                            <h6 className=\"df-inspector bubi-mt-1\">{ __('Background type', 'bubiblock-slider')}</h6>\n                            <div class=\"bubi-width-three bubibutton-icon\">\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <Tooltip\n                                        text= {__('Color','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_5 == 'df-slider-color-5'}\n                                            icon=\"admin-appearance\"\n                                            onClick={() => setAttributes({ df_slider_chose_5: 'df-slider-color-5' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                    <Tooltip\n                                        text=  {__('Image','bubiblock-slider')}\n                                    >\n                                        <Button\n                                            isPrimary={df_slider_chose_5 == 'df-slider-image-5'}\n                                            icon=\"format-image\"\n                                            onClick={() => setAttributes({ df_slider_chose_5: 'df-slider-image-5' })}\n                                        >\n                                        </Button>\n                                    </Tooltip>\n                                </ButtonGroup>\n                            </div>\n                            {(df_slider_chose_5=='df-slider-image-5' ) &&\n                                <>\n                                    {imageUrl_5?\n                                        <>\n                                        <img src={imageUrl_5} className={'bubi-mt-2'}/>\n                                        {isBlobURL(imageUrl_5) && <Spinner />}\n                                        </>\n                                        :\n                                        <MediaPlaceholder\n                                            className={'bubi-mt-2 bubi-mb-2'}\n                                            icon=\"format-image df-icon-img-upload\"\n                                            onSelect={ media => { setAttributes({ imageAlt_5: media.alt, imageUrl_5: media.url }); } }\n                                            onSelectURL={ this.onSelectURL5 }\n                                            onError={this.onUploadError5}\n                                            accept=\"image/*\"\n                                            allowedTypes={['image']}\n                                            notices={ noticeUI5 }\n                                        />\n                                    }\n                                    {imageUrl_5 &&\n                                    <>\n                                        <MenuItem\n                                            icon={ 'trash' }\n                                            className={'df-remov-img'}\n                                            onClick={ this.removeImage5 }\n                                        >\n                                            { __('Remove Image','bubiblock-slider') }\n                                        </MenuItem>\n                                        <TextareaControl\n                                            label={__('Alt Text (Alternative Text)','bubiblock-slider')}\n                                            value={ alt5}\n                                            onChange={ this.updateAlt5 }\n                                            help={__('Alternative text describes your image to people who cant see it. Add a short description with its key details.','bubiblock-slider')}\n                                        />\n                                        <SelectControl\n                                            label={__(\"Dispaly Size\",\"bubiblock-slider\")}\n                                            options={[\n                                                {label: __('None','bubiblock-slider'), value: 'none'},\n                                                {label: __('Containe','bubiblock-slider'), value: 'contain'},\n                                                {label: __('Cover','bubiblock-slider'), value: 'cover'},\n                                                {label: __('Fill','bubiblock-slider'), value: 'fill'},\n                                                {label: __('Scale down','bubiblock-slider'), value: 'scale-down'},\n                                                {label: __('Unset','bubiblock-slider'), value: 'unset'},\n                                            ]}\n                                            onChange={(val) => setAttributes({ df_cover_img5: val })}\n                                            value={df_cover_img5}\n                                        />\n                                        {(df_cover_img5=='none')&&\n                                        <>\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-left-alt'}\n                                                afterIcon={'arrow-right-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_img_5 }\n                                                onChange={(val) => setAttributes({ df_focalPoint_img_5: val })}\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            <RangeControl\n                                                label={__('Display Position','bubiblock-slider')}\n                                                help={__('% Unit','bubiblock-slider')}\n                                                beforeIcon={'arrow-down-alt'}\n                                                afterIcon={'arrow-up-alt'}\n                                                allowReset\n                                                resetFallbackValue={50}\n                                                step={1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 20,\n                                                        label: __('20','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 40,\n                                                        label: __('40','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 60,\n                                                        label: __('60','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 80,\n                                                        label: __('80','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 100,\n                                                        label: __('100','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_focalPoint_y_img_5 }\n                                                onChange={(val) => setAttributes({ df_focalPoint_y_img_5: val })}\n                                                min={ 0 }\n                                                max={ 100}\n                                            />\n                                            </>\n                                        }\n                                        <ToggleControl\n                                            label={ __( 'Show mask','bubiblock-slider' ) }\n                                            checked={df_mask_slider_5}\n                                            onChange={(val) => setAttributes({ df_mask_slider_5: val })}\n                                        />\n                                        {df_mask_slider_5 &&\n                                            <>\n                                            <Notice\n                                                status=\"info\"\n                                                isDismissible={ false }\n                                            >\n                                                {__('If you have set the border radius for the slider this control will not work well!','bubiblock-slider')}\n                                            </Notice>\n                                            <ColorGradientControl\n                                                colorValue={ background_color_solid_mask_5 }\n                                                gradientValue={ background_color_gradient_mask_5 }\n                                                colors={ bubiColors }\n                                                gradients={ bubiGradients }\n                                                onColorChange={ (newValue) => setAttributes({ background_color_solid_mask_5: newValue }) }\n                                                onGradientChange={ (newValue) => setAttributes({ background_color_gradient_mask_5: newValue }) }\n                                            />\n                                            <RangeControl\n                                                label={__('Opacity','bubiblock-slider')}\n                                                beforeIcon={'hidden'}\n                                                afterIcon={'visibility'}\n                                                allowReset\n                                                resetFallbackValue={.4}\n                                                step={.1}\n                                                withInputField={false}\n                                                separatorType=\"none\"\n                                                trackColor=\"#007cba\"\n                                                isShiftStepEnabled\n                                                marks={[\n                                                    {\n                                                        value: 0,\n                                                        label: __('0','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.2,\n                                                        label: __('2','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.4,\n                                                        label: __('4','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.6,\n                                                        label: __('6','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 0.8,\n                                                        label: __('8','bubiblock-slider'),\n                                                    },\n                                                    {\n                                                        value: 1.0,\n                                                        label: __('10','bubiblock-slider'),\n                                                    },\n                                                ]}\n                                                railColor=\"#02abff\"\n                                                value={ df_opacity_mask_5 }\n                                                onChange={(val) => setAttributes({ df_opacity_mask_5: val })}\n                                                min={ .0 }\n                                                max={ 1.0}\n                                            />\n                                        </>\n                                        }\n                                        <TextControl\n                                            label={__('Link Image','bubiblock-slider')}\n                                            value={ bubiblock_link_slider_5 }\n                                            onChange={ (newValue) => setAttributes({bubiblock_link_slider_5: newValue}) }\n                                            type=\"url\"\n                                        />\n                                        {bubiblock_link_slider_5 &&\n                                            <ButtonGroup\n                                                    className={'df-button-group bubiblock-no-margin bubi-mb-2'}\n                                                >\n                                                    <p className=\"df-inspector bubi-mt-1\">{ __('Open in new tab', 'bubiblock-slider')}</p>\n                                                    <div class=\"bubi-width-two\">\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_5 == '_blank'} onClick={() => setAttributes({ bubiblock_link_tab_slider_5: '_blank' })}\n                                                    >\n                                                        {__('True','bubiblock-slider')}\n                                                    </Button>\n                                                    <Button\n                                                        isSecondary\n                                                        isPrimary={bubiblock_link_tab_slider_5 == ''} onClick={() => setAttributes({ bubiblock_link_tab_slider_5: '' })}\n                                                    >\n                                                        {__('False','bubiblock-slider')}\n                                                    </Button>\n                                                    </div>\n                                            </ButtonGroup>\n                                        }\n                                    </>\n                                    }\n                                </>\n                            }\n                            {(df_slider_chose_5=='df-slider-color-5' ) &&\n                                <>\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Background Color', 'bubiblock-slider')}\n                                {df_background_color_slider_5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_slider_5 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_slider_5}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_slider_5 : newValue}) }\n                                    />\n                                </div>\n                                </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Top','bubiblock-slider' ) }\n                                checked={df_enable_divide_5}\n                                onChange={ (newValue) => setAttributes({df_enable_divide_5: newValue}) }\n                            />\n                            {df_enable_divide_5 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_5}\n                                    className={'bubiblock-radio-image'}\n                                    onChange={(val) => setAttributes({divide_5: val})}\n                                    options={bubiOptionsDivideTop}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_5 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_5}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_5: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_5 }\n                                            onChange={(val) => setAttributes({df_height_divide_5: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_5 }\n                                            onChange={(val) => setAttributes({df_height_table_divide_5: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_5 }\n                                            onChange={(val) => setAttributes({df_height_mobile_divide_5 : val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_5 }\n                                    onChange={(val) => setAttributes({bubiblock_dalay_divide_5 : val})}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            <ToggleControl\n                                label={ __( 'Dividers Bottom','bubiblock-slider' ) }\n                                checked={df_enable_divide_bottom_5}\n                                onChange={(val) => setAttributes({df_enable_divide_bottom_5 : val})}\n                            />\n                            {df_enable_divide_bottom_5 &&\n                            <>\n                                <RadioControl\n                                    label={__('Choose', 'df-sidebar-gutenberg')}\n                                    selected={divide_bottom_5}\n                                    className={'df-radio-control-divide-bottom'}\n                                    onChange={(val) => setAttributes({divide_bottom_5: val})}\n                                    options={bubiOptionsDivideBottom}\n                                />\n                                <h6 className=\"df-inspector bubi-not-background\">{ __('Color', 'bubiblock-slider')}\n                                { df_color_divide_bottom_5&&\n                                    <ColorIndicator\n                                        colorValue={ df_color_divide_bottom_5 }\n                                    />\n                                }\n                                </h6>\n                                <ColorPicker\n                                    color={df_color_divide_bottom_5}\n                                    onChangeComplete={(newval) => setAttributes({df_color_divide_bottom_5: ('rgba(' + newval.rgb.r + ', ' + newval.rgb.g + ', ' + newval.rgb.b + ', ' + newval.rgb.a + ')') })}\n                                />\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Height', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Desktop)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_divide_bottom_5 }\n                                            onChange={(val) => setAttributes({df_height_divide_bottom_5: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='table' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Table)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_table_divide_bottom_5 }\n                                            onChange={(val) => setAttributes({df_height_table_divide_bottom_5: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                    {(df_resp=='mobile' ) &&\n                                        <RangeControl\n                                            label={__(\"Height(Mobile)\",\"bubiblock-slider\")}\n                                            help={__('Px Unit','bubiblock-slider')}\n                                            value={ df_height_mobile_divide_bottom_5}\n                                            onChange={(val) => setAttributes({df_height_mobile_divide_bottom_5: val})}\n                                            min={20}\n                                            max={1000}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RangeControl\n                                    label={__('Delayed appearance','bubiblock-slider')}\n                                    help={__('S Unit. In the Safari Browser this transition is not supported!','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={3}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 5,\n                                            label: __('5','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 15,\n                                            label: __('15','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 25,\n                                            label: __('25','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ bubiblock_dalay_divide_5_bottom }\n                                    onChange={(val) => setAttributes({bubiblock_dalay_divide_5_bottom: val})}\n                                    min={ 0 }\n                                    max={ 30}\n                                />\n                            </>\n                            }\n                            {title5 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Title', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={35}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_caption5}\n                                            onChange={(val) => setAttributes({margin_bottom_caption5: val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={25}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_caption5 }\n                                            onChange={(val) => setAttributes({margin_bottom_table_caption5: val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={15}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_caption5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_caption5: val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            className={'bubiblock-slider-inspectorcontrols'}\n                                            value={fontsizetitle5}\n                                            onChange={(val) => setAttributes({fontsizetitle5: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle5table}\n                                            onChange={(val) => setAttributes({fontsizetitle5table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizetitle5mobile}\n                                            onChange={(val) => setAttributes({fontsizetitle5mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 22 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:32 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 82 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_title5 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_title5: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectcaption5: val})}\n                                    value={effectcaption5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectcaption5: val})}\n                                    value={df_speed_effectcaption5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectcaption5: val})}\n                                    value={df_delay_effectcaption5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectcaption5: val})}\n                                    value={df_repeat_effectcaption5}\n                                />\n                            </>\n                            }\n                            {info5 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Info', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={40}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_info5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_info5: val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={30}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_info5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_table_info5 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={10}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_info5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_info5 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo5}\n                                            onChange={(val) => setAttributes({fontsizeinfo5: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo5table}\n                                            onChange={(val) => setAttributes({fontsizeinfo5table: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizeinfo5mobile}\n                                            onChange={(val) => setAttributes({fontsizeinfo5mobile: val})}\n                                            fontSizes={[\n                                                { name: __('None', 'bubiblock-slider'), slug: 'none', size: 0 },\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_info5 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_info5: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectinfo5 : val})}\n                                    value={effectinfo5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectinfo5 : val})}\n                                    value={df_speed_effectinfo5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectinfo5 : val})}\n                                    value={df_delay_effectinfo5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectinfo5 : val})}\n                                    value={df_repeat_effectinfo5}\n                                />\n                            </>\n                            }\n                            {button5 &&\n                            <>\n                                <h6 class=\"df-inspector\">{ __('Button', 'bubiblock-slider')}</h6>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <div class=\"df-group-button-resp\">\n                                        <div class=\"bubi-col-6\">\n                                            <h6>{ __('Choose', 'bubiblock-slider')}</h6>\n                                        </div>\n                                        <div class=\"bubi-col-6\">\n                                            <Button\n                                                icon={'laptop'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'desktop'} onClick={() => setAttributes({ df_resp: 'desktop' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'tablet'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'table'} onClick={() => setAttributes({ df_resp: 'table' })}\n                                            >\n                                            </Button>\n                                            <Button\n                                                icon={'smartphone'}\n                                                isSecondary\n                                                className={'df-resp-button'}\n                                                isPrimary={df_resp == 'mobile'} onClick={() => setAttributes({ df_resp: 'mobile' })}\n                                            >\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    {(df_resp=='desktop') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -100,\n                                                    label: __('-100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 300,\n                                                    label: __('300','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_button5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_button5 : val})}\n                                            min={ -100 }\n                                            max={ 300}\n                                        />\n                                    }\n                                    {(df_resp=='table') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_table_button5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_table_button5 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <RangeControl\n                                            label={__('Margin','bubiblock-slider')}\n                                            help={__('px Unit','bubiblock-slider')}\n                                            beforeIcon={'arrow-down-alt'}\n                                            afterIcon={'arrow-up-alt'}\n                                            allowReset\n                                            resetFallbackValue={5}\n                                            step={1}\n                                            withInputField={false}\n                                            separatorType=\"none\"\n                                            trackColor=\"#007cba\"\n                                            isShiftStepEnabled\n                                            marks={[\n                                                {\n                                                    value: -50,\n                                                    label: __('-50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 0,\n                                                    label: __('0','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 50,\n                                                    label: __('50','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 100,\n                                                    label: __('100','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 150,\n                                                    label: __('150','bubiblock-slider'),\n                                                },\n                                                {\n                                                    value: 200,\n                                                    label: __('200','bubiblock-slider'),\n                                                },\n                                            ]}\n                                            railColor=\"#02abff\"\n                                            value={ margin_bottom_mobile_button5 }\n                                            onChange={(val) => setAttributes({ margin_bottom_mobile_button5 : val})}\n                                            min={ -50 }\n                                            max={ 200}\n                                        />\n                                    }\n                                    {(df_resp=='desktop') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton5}\n                                            onChange={(val) => setAttributes({fontsizebutton5: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                    />\n                                        }\n                                    {(df_resp=='table') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton5table}\n                                            onChange={(val) => setAttributes({fontsizebutton5table: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                    {(df_resp=='mobile') &&\n                                        <FontSizePicker\n                                            value={fontsizebutton5mobile}\n                                            onChange={(val) => setAttributes({fontsizebutton5mobile: val})}\n                                            fontSizes={[\n                                                { name: __('Small', 'bubiblock-slider'), slug: 'small', size: 18 },\n                                                { name: __('Medium', 'bubiblock-slider'), slug: 'medium', size:24 },\n                                                { name: __('Large', 'bubiblock-slider'), slug: 'large', size: 32 },\n                                                { name: __('Big', 'bubiblock-slider'), slug: 'large', size: 52 },\n                                            ]}\n                                            withSlider={true}\n                                        />\n                                    }\n                                </ButtonGroup>\n                                <RadioControl\n                                    label={__('Align','bubiblock-slider')}\n                                    selected={ alignment_button5 }\n                                    options={ [\n                                        { label: 'Left', value: 'left' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'right' },\n                                    ] }\n                                    onChange={ ( newAlign ) => setAttributes( { alignment_button5: newAlign } ) }\n                                />\n                                <SelectControl\n                                    label={__(\"Effect\",\"bubiblock-slider\")}\n                                    options={bubiOptionsEffectAnimate}\n                                    onChange={(val) => setAttributes({ effectbutton5 : val})}\n                                    value={effectbutton5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect speed\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectSpeed}\n                                    onChange={(val) => setAttributes({ df_speed_effectbutton5 : val})}\n                                    value={df_speed_effectbutton5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect delay\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectDalay}\n                                    onChange={(val) => setAttributes({ df_delay_effectbutton5 : val})}\n                                    value={df_delay_effectbutton5}\n                                />\n                                <SelectControl\n                                    label={__(\"Effect repeat\",\"bubiblock-slider\")}\n                                    options={bubiOptionEffectRepeat}\n                                    onChange={(val) => setAttributes({ df_repeat_effectbutton5 : val})}\n                                    value={df_repeat_effectbutton5}\n                                />\n                                <RangeControl\n                                    label={__('Padding top/bottom','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-down-alt'}\n                                    afterIcon={'arrow-up-alt'}\n                                    allowReset\n                                    resetFallbackValue={8}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_link_button5 }\n                                    onChange={(val) => setAttributes({ padding_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Padding left/right','bubiblock-slider')}\n                                    help={__('px Unit','bubiblock-slider')}\n                                    beforeIcon={'arrow-left-alt'}\n                                    afterIcon={'arrow-right-alt'}\n                                    allowReset\n                                    resetFallbackValue={20}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ padding_right_link_button5 }\n                                    onChange={(val) => setAttributes({ padding_right_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border solid','bubiblock-slider')}\n                                    help={__('Px Unit','bubiblock-slider')}\n                                    beforeIcon={'star-empty'}\n                                    afterIcon={'star-filled'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_size_link_button5 }\n                                    onChange={(val) => setAttributes({ border_size_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_left_link_button5 }\n                                    onChange={(val) => setAttributes({ border_radius_top_left_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border top right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_top_right_link_button5 }\n                                    onChange={(val) => setAttributes({ border_radius_top_right_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom left radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_left_link_button5 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_left_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <RangeControl\n                                    label={__('Border bottom right radius','bubiblock-slider')}\n                                    help={__('% Unit','bubiblock-slider')}\n                                    beforeIcon={'fullscreen-alt'}\n                                    afterIcon={'fullscreen-exit-alt'}\n                                    allowReset\n                                    resetFallbackValue={0}\n                                    step={1}\n                                    withInputField={false}\n                                    separatorType=\"none\"\n                                    trackColor=\"#007cba\"\n                                    isShiftStepEnabled\n                                    marks={[\n                                        {\n                                            value: 0,\n                                            label: __('0','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 10,\n                                            label: __('10','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 20,\n                                            label: __('20','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 30,\n                                            label: __('30','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 40,\n                                            label: __('40','bubiblock-slider'),\n                                        },\n                                        {\n                                            value: 50,\n                                            label: __('50','bubiblock-slider'),\n                                        },\n                                    ]}\n                                    railColor=\"#02abff\"\n                                    value={ border_radius_bottom_right_link_button5 }\n                                    onChange={(val) => setAttributes({ border_radius_bottom_right_link_button5: val })}\n                                    min={ 0 }\n                                    max={ 50}\n                                />\n                                <h6 id={'bg'} class=\"df-inspector\" >{ __('Background Color', 'bubiblock-slider')}\n                                {(df_background_color_transparent_link_button5 == 'df-trasparent-color-button5-false') &&\n                                    <>\n                                    {df_background_color_link_button5 &&\n                                        <ColorIndicator\n                                            colorValue={ df_background_color_link_button5 }\n                                        />\n                                    }\n                                    </>\n                                }\n                                {df_background_color_hover_link_button5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_background_color_hover_link_button5 }\n                                    />\n                                }\n                                </h6>\n                                {(df_background_color_transparent_link_button5 == 'df-trasparent-color-button5-false') &&\n                                    <div class={'legend-color-none'}>\n                                        <ColorPaletteControl\n                                            value={ df_background_color_link_button5}\n                                            colors={ bubiColors }\n                                            onChange={ (newValue) => setAttributes({df_background_color_link_button5 : newValue}) }\n                                        />\n                                    </div>\n                                }\n                                <p className={\"df-inspector bubi-mt-1\"}>{__('Hover','bubiblock-slider')}</p>\n                                <div class={'legend-color-none'}>\n                                    <ColorPaletteControl\n                                        value={ df_background_color_hover_link_button5}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_background_color_hover_link_button5 : newValue}) }\n                                    />\n                                </div>\n                                <h6 className=\"df-inspector\">{ __('Color', 'bubiblock-slider')}\n                                {df_color_link_button5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_link_button5 }\n                                    />\n                                }\n                                {df_color_hover_link_button5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_color_hover_link_button5 }\n                                    />\n                                }\n                                {df_border_color_link_button5 &&\n                                    <ColorIndicator\n                                        colorValue={ df_border_color_link_button5 }\n                                    />\n                                }\n                                </h6>\n                                <div class={'legend-color-none'}>\n                                    <p className=\"df-inspector\">{__('Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_link_button5}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_link_button5: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Color hover','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_color_hover_link_button5}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_color_hover_link_button5: newValue}) }\n                                    />\n                                    <p className=\"df-inspector\">{__('Border Color','bubiblock-slider')}</p>\n                                    <ColorPaletteControl\n                                        value={ df_border_color_link_button5}\n                                        colors={ bubiColors }\n                                        onChange={ (newValue) => setAttributes({df_border_color_link_button5: newValue}) }\n                                    />\n                                </div>\n                                <ButtonGroup\n                                    className={'df-button-group bubiblock-no-margin'}\n                                >\n                                    <h6 className=\"df-inspector\">{ __('Background color transparent', 'bubiblock-slider')}</h6>\n                                    <div class=\"bubi-width-two\">\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button5 == 'df-trasparent-color-button5-true'} onClick={() => setAttributes({ df_background_color_transparent_link_button5: 'df-trasparent-color-button5-true' })}\n                                    >\n                                        {__('True','bubiblock-slider')}\n                                    </Button>\n                                    <Button\n                                        isSecondary\n                                        isPrimary={df_background_color_transparent_link_button5 == 'df-trasparent-color-button5-false'} onClick={() => setAttributes({ df_background_color_transparent_link_button5: 'df-trasparent-color-button5-false' })}\n                                    >\n                                        {__('False','bubiblock-slider')}\n                                    </Button>\n                                    </div>\n                                </ButtonGroup>\n                            </>\n                            }\n                            </PanelBody>\n                        </>\n                    }\n                </InspectorControls>\n\n                <div id={'carouselDFControlslider'+bubiblock_id_slider} className={className+' df_height_carousel_block carousel slide caption-animate touch'+bubiblock_carousle_touch+' '+df_effect_slider +' '+df_resp+' '+df_pause_slider} data-ride=\"carousel\" data-interval={df_interval_slider} style={{background:bubiblock_background_color_slider,backgroundImage:bubiblock_background_gradient_slider}}>\n                    <ol className={df_dot_slider+' '+df_dot_slider_table+' '+df_dot_slider_mobile+' carousel-indicators'} style={{bottom:df_bottom_dot}}>\n                        <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"0\" className={ 'active '+df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',backgroundColor:df_color_dot}} onclick=\"move()\"></li>\n                        <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"1\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',backgroundColor:df_color_dot}}></li>\n                        {bubiblock_add_slider_3 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"2\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                        {bubiblock_add_slider_4 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"3\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                        {bubiblock_add_slider_5 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"4\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                    </ol>\n                    <div className={'carousel-inner'}>\n                        {(bubi_block_content_slider == 'bubiblock-block-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                            <div className={df_resp+' bubiblock-block'} style={{backgroundColor:bubiblock_background_color_block_slider,opacity:bubiopacityblock_slider}}>\n                                <InnerBlocks/>\n                            </div>\n                        }\n                        <div className={'carousel-item '+df_effect_slider+' '+bubiblock_id_slider+' active '}>\n                            { df_enable_divide_1 &&\n                                <div className={'df-divide-1'} style={{color:df_color_divide_1}}>\n                                    {(divide_1=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_1=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_1=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_1=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_1 &&\n                                <div className={'df-divide-bottom-1'} style={{color:df_color_divide_bottom_1}}>\n                                    {(divide_bottom_1=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_1=='df-slider-image-1' ) &&\n                                <>\n                                {url ?\n                                    <>\n                                    <a href={bubiblock_link_slider_1} target={bubiblock_link_tab_slider_1} rel=\"noopener\">\n                                        <img src={url} alt={alt} className={'img-cap'} style={{objectFit:df_cover_img1,objectPosition:df_focalPoint_img_1+'% '+df_focalPoint_y_img_1+'%'}} />\n                                    {isBlobURL(url) && <Spinner />}\n                                    {df_mask_slider_1 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_1,opacity:df_opacity_mask_1}}></div>\n                                    }\n                                    </a>\n                                    </>\n                                    :\n                                    <div className={'df-upload-img'}></div>\n                                }\n                                </>\n                            }\n                            {(df_slider_chose_1=='df-slider-color-1') &&\n                                <>\n                                { df_background_color_slider_1 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_1}}></div>\n                                    :\n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>\n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-1'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText\n                                                className={ 'wp-block-bubiblock-slider-slider__title  '+df_repeat_effectcaption1+' '+df_delay_effectcaption1+' '+df_speed_effectcaption1+' '+effectcaption1 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title1,fontSize:fontsizetitle1+'px',bottom:margin_bottom_caption1+'px'}}\n                                                onChange= { this.onChangeTitle1 }\n                                                value= { title1 }\n                                                placeholder= { __(\"Title\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <RichText\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info '+df_repeat_effectinfo1+' '+df_delay_effectinfo1+' '+df_speed_effectinfo1+' '+effectinfo1}\n                                                tagName= \"p\"\n                                                onChange= { this.onChangeInfo1 }\n                                                value= { info1 }\n                                                style={{textAlign:alignment_info1,fontSize:fontsizeinfo1+'px',bottom:margin_bottom_info1+'px'}}\n                                                placeholder= { __(\"Info\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <div className={'link-button-1 '+df_repeat_effectbutton1+' '+df_delay_effectbutton1+' '+df_speed_effectbutton1+' '+effectbutton1} style={{textAlign:alignment_button1,bottom:margin_bottom_button1+'px'}}>\n                                                <button className={'button-slider '+df_background_color_transparent_link_button1} style={\n                                                    {\n                                                        paddingTop:padding_link_button1+'px',\n                                                        paddingBottom:padding_link_button1+'px',\n                                                        paddingLeft:padding_right_link_button1+'px',\n                                                        paddingRight:padding_right_link_button1+'px',\n                                                        borderTopLeftRadius: border_radius_top_left_link_button1+'px',\n                                                        borderTopRightRadius: border_radius_top_right_link_button1+'px',\n                                                        borderBottomLeftRadius: border_radius_bottom_left_link_button1+'px',\n                                                        borderBottomRightRadius: border_radius_bottom_right_link_button1+'px',\n                                                        border: border_size_link_button1+'px solid'+df_border_color_link_button1,\n                                                        backgroundColor:df_background_color_link_button1,\n                                                        background:df_background_color_link_button1,\n                                                    }\n                                                }\n                                                >\n                                                    <RichText\n                                                        className={ 'wp-block-bubiblock-slider-slider__link' }\n                                                        tagName= \"p\"\n                                                        onChange= { this.onChangeButton1 }\n                                                        value= { button1 }\n                                                        placeholder= { __(\"Button\", \"bubiblock-slider\") }\n                                                        fotmattingControls= { [] }\n                                                        style={{fontSize:fontsizebutton1+'px'}}\n                                                        allowedFormats={ [ 'core/link', 'core/code','core/image','core/strikethrough','core/underline','core/subscript','core/superscript' ] }\n                                                    />\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n\n                        <div className={'carousel-item '+df_effect_slider+' '+bubiblock_id_slider}>\n                            { df_enable_divide_2 &&\n                                <div className={'df-divide-2'} style={{color:df_color_divide_2}}>\n                                    {(divide_2=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_2=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_2=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_2=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_2 &&\n                                <div className={'df-divide-bottom-2'} style={{color:df_color_divide_bottom_2}}>\n                                    {(divide_bottom_2=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_2=='df-slider-image-2' ) &&\n                                <>\n                                {imageUrl_2 ?\n                                    <>\n                                    <a href={bubiblock_link_slider_2} target={bubiblock_link_tab_slider_2} rel=\"noopener\">\n                                        <img src={imageUrl_2} alt={alt2} className={'img-cap image-slider-2'} style={{objectFit:df_cover_img2,objectPosition:df_focalPoint_img_2+'% '+df_focalPoint_y_img_2+'%'}} />\n                                    {isBlobURL(imageUrl_2) && <Spinner />}\n                                    {df_mask_slider_2 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_2,background:background_color_gradient_mask_2,opacity:df_opacity_mask_2}}></div>\n                                    }\n                                    </a>\n                                    </>\n                                    :\n                                    <div className={'df-upload-img'}></div>\n                                }\n                                </>\n                            }\n                            {(df_slider_chose_2=='df-slider-color-2') &&\n                                <>\n                                {df_background_color_slider_2 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_2}}></div>\n                                    :\n                                    <div className={'df-color-default-background-slider-2 bubiblock-color-slider-item'}></div>\n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-2'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText\n                                                className={ 'wp-block-bubiblock-slider-slider__title_2 '+df_repeat_effectcaption2+' '+df_delay_effectcaption2+' '+df_speed_effectcaption2+' '+effectcaption2 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title2,fontSize:fontsizetitle2+'px',bottom:margin_bottom_caption2+'px'}}\n                                                onChange= { this.onChangeTitle2 }\n                                                value= { title2 }\n                                                placeholder= { __(\"Title\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <RichText\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_2 '+df_repeat_effectinfo2+' '+df_delay_effectinfo2+' '+df_speed_effectinfo2+' '+effectinfo2}\n                                                tagName= \"p\"\n                                                onChange= { this.onChangeInfo2 }\n                                                value= { info2 }\n                                                style={{textAlign:alignment_info2,fontSize:fontsizeinfo2+'px',bottom:margin_bottom_info2+'px'}}\n                                                placeholder= { __(\"Info\", \"bubiblock-slider\") }\n                                                fotmattingControls= { [] }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <div className={'link-button-2 '+df_repeat_effectbutton2+' '+df_delay_effectbutton2+' '+df_speed_effectbutton2+' '+effectbutton2} style={{textAlign:alignment_button2,bottom:margin_bottom_button2+'px'}}>\n                                                <button className={'button-slider2 '+df_background_color_transparent_link_button2} style={\n                                                    {\n                                                        paddingTop:padding_link_button2+'px',\n                                                        paddingBottom:padding_link_button2+'px',\n                                                        paddingLeft:padding_right_link_button2+'px',\n                                                        paddingRight:padding_right_link_button2+'px',\n                                                        borderTopLeftRadius: border_radius_top_left_link_button2+'px',\n                                                        borderTopRightRadius: border_radius_top_right_link_button2+'px',\n                                                        borderBottomLeftRadius: border_radius_bottom_left_link_button2+'px',\n                                                        borderBottomRightRadius: border_radius_bottom_right_link_button2+'px',\n                                                        border: border_size_link_button2+'px solid'+df_border_color_link_button2,\n                                                        backgroundColor:df_background_color_link_button2,\n                                                        background:df_background_color_link_button2,\n                                                    }\n                                                }\n                                                >\n                                                    <RichText\n                                                        className={ 'wp-block-bubiblock-slider-slider__link_2' }\n                                                        tagName= \"p\"\n                                                        onChange= { this.onChangeButton2 }\n                                                        value= { button2 }\n                                                        placeholder= { __(\"Button\", \"bubiblock-slider\") }\n                                                        fotmattingControls= { [] }\n                                                        allowedFormats={ [ 'core/link', 'core/code','core/image','core/strikethrough','core/underline','core/subscript','core/superscript' ] }\n                                                        style={{fontSize:fontsizebutton2+'px'}}\n                                                    />\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n\n                        {bubiblock_add_slider_3 && // Slider 3\n                        <div className={'carousel-item '+df_effect_slider}>\n                            { df_enable_divide_3 &&\n                                <div className={'df-divide-3'} style={{color:df_color_divide_3}}>\n                                    {(divide_3=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_3=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_3=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_3=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_3 &&\n                                <div className={'df-divide-bottom-3'} style={{color:df_color_divide_bottom_3}}>\n                                    {(divide_bottom_3=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_3=='df-slider-image-3' ) &&\n                                <>\n                                {imageUrl_3 ?\n                                    <>\n                                    <a href={bubiblock_link_slider_3} target={bubiblock_link_tab_slider_3} rel=\"noopener\">\n                                        <img src={imageUrl_3} alt={alt3} className={'img-cap image-slider-3'} style={{objectFit:df_cover_img3,objectPosition:df_focalPoint_img_3+'% '+df_focalPoint_y_img_3+'%'}} />\n                                    {isBlobURL(imageUrl_3) && <Spinner />}\n                                    {df_mask_slider_3 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_3,background:background_color_gradient_mask_3,opacity:df_opacity_mask_3}}></div>\n                                    }\n                                    </a>\n                                    </>\n                                    :\n                                    <div className={'df-upload-img'}></div>\n                                }\n                                </>\n                            }\n                            {(df_slider_chose_3=='df-slider-color-3') &&\n                                <>\n                                {df_background_color_slider_3 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_3}}></div>\n                                    :\n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>\n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-3'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText\n                                                className={ 'wp-block-bubiblock-slider-slider__title_3 '+df_repeat_effectcaption3+' '+df_delay_effectcaption3+' '+df_speed_effectcaption3+' '+effectcaption3 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title3,fontSize:fontsizetitle3+'px',bottom:margin_bottom_caption3+'px'}}\n                                                onChange= { this.onChangeTitle3 }\n                                                value= { title3 }\n                                                placeholder= { __(\"Title\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <RichText\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_3 '+df_repeat_effectinfo3+' '+df_delay_effectinfo3+' '+df_speed_effectinfo3+' '+effectinfo3}\n                                                tagName= \"p\"\n                                                onChange= { this.onChangeInfo3 }\n                                                value= { info3 }\n                                                style={{textAlign:alignment_info3,fontSize:fontsizeinfo3+'px',bottom:margin_bottom_info3+'px'}}\n                                                placeholder= { __(\"Info\", \"bubiblock-slider\") }\n                                                fotmattingControls= { [] }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <div className={'link-button-3 '+df_repeat_effectbutton3+' '+df_delay_effectbutton3+' '+df_speed_effectbutton3+' '+effectbutton3} style={{textAlign:alignment_button3,bottom:margin_bottom_button3+'px'}}>\n                                                <button className={'button-slider3 '+df_background_color_transparent_link_button3} style={\n                                                    {\n                                                        paddingTop:padding_link_button3+'px',\n                                                        paddingBottom:padding_link_button3+'px',\n                                                        paddingLeft:padding_right_link_button3+'px',\n                                                        paddingRight:padding_right_link_button3+'px',\n                                                        borderTopLeftRadius: border_radius_top_left_link_button3+'px',\n                                                        borderTopRightRadius: border_radius_top_right_link_button3+'px',\n                                                        borderBottomLeftRadius: border_radius_bottom_left_link_button3+'px',\n                                                        borderBottomRightRadius: border_radius_bottom_right_link_button3+'px',\n                                                        border: border_size_link_button3+'px solid'+df_border_color_link_button3,\n                                                        backgroundColor:df_background_color_link_button3,\n                                                        background:df_background_color_link_button3,\n                                                    }\n                                                }\n                                                >\n                                                    <RichText\n                                                        className={ 'wp-block-bubiblock-slider-slider__link_3' }\n                                                        tagName= \"p\"\n                                                        onChange= { this.onChangeButton3 }\n                                                        value= { button3 }\n                                                        placeholder= { __(\"Button\", \"bubiblock-slider\") }\n                                                        fotmattingControls= { [] }\n                                                        style={{fontSize:fontsizebutton3+'px'}}\n                                                        allowedFormats={ [ 'core/link', 'core/code','core/image','core/strikethrough','core/underline','core/subscript','core/superscript' ] }\n                                                    />\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        }\n\n                        {bubiblock_add_slider_4 && // Slider 4\n                        <div className={'carousel-item '+df_effect_slider}>\n                            { df_enable_divide_4 &&\n                                <div className={'df-divide-4'} style={{color:df_color_divide_4}}>\n                                    {(divide_4=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_4=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_4=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_4=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_4 &&\n                                <div className={'df-divide-bottom-4'} style={{color:df_color_divide_bottom_4}}>\n                                    {(divide_bottom_4=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_4=='df-slider-image-4' ) &&\n                                <>\n                                {imageUrl_4 ?\n                                    <>\n                                    <a href={bubiblock_link_slider_4} target={bubiblock_link_tab_slider_4} rel=\"noopener\">\n                                        <img src={imageUrl_4} alt={alt4} className={'img-cap image-slider-4'} style={{objectFit:df_cover_img4,objectPosition:df_focalPoint_img_4+'% '+df_focalPoint_y_img_4+'%'}} />\n                                    {isBlobURL(imageUrl_4) && <Spinner />}\n                                    {df_mask_slider_4 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_4,background:background_color_gradient_mask_4,opacity:df_opacity_mask_4}}></div>\n                                    }\n                                    </a>\n                                    </>\n                                    :\n                                    <div className={'df-upload-img'}></div>\n                                }\n                                </>\n                            }\n                            {(df_slider_chose_4=='df-slider-color-4') &&\n                                <>\n                                {df_background_color_slider_4 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_4}}></div>\n                                    :\n                                    <div className={'df-color-default-background-slider-2 bubiblock-color-slider-item'}></div>\n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-4'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText\n                                                className={ 'wp-block-bubiblock-slider-slider__title_4 '+df_repeat_effectcaption4+' '+df_delay_effectcaption4+' '+df_speed_effectcaption4+' '+effectcaption4 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title4,fontSize:fontsizetitle4+'px',bottom:margin_bottom_caption4+'px'}}\n                                                onChange= { this.onChangeTitle4 }\n                                                value= { title4 }\n                                                placeholder= { __(\"Title\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <RichText\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_4 '+df_repeat_effectinfo4+' '+df_delay_effectinfo4+' '+df_speed_effectinfo4+' '+effectinfo4}\n                                                tagName= \"p\"\n                                                onChange= { this.onChangeInfo4 }\n                                                value= { info4 }\n                                                style={{textAlign:alignment_info4,fontSize:fontsizeinfo4+'px',bottom:margin_bottom_info4+'px'}}\n                                                placeholder= { __(\"Info\", \"bubiblock-slider\") }\n                                                fotmattingControls= { [] }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <div className={'link-button-4 '+df_repeat_effectbutton4+' '+df_delay_effectbutton4+' '+df_speed_effectbutton4+' '+effectbutton4} style={{textAlign:alignment_button4,bottom:margin_bottom_button4+'px'}}>\n                                                <button className={'button-slider4 '+df_background_color_transparent_link_button4} style={\n                                                    {\n                                                        paddingTop:padding_link_button4+'px',\n                                                        paddingBottom:padding_link_button4+'px',\n                                                        paddingLeft:padding_right_link_button4+'px',\n                                                        paddingRight:padding_right_link_button4+'px',\n                                                        borderTopLeftRadius: border_radius_top_left_link_button4+'px',\n                                                        borderTopRightRadius: border_radius_top_right_link_button4+'px',\n                                                        borderBottomLeftRadius: border_radius_bottom_left_link_button4+'px',\n                                                        borderBottomRightRadius: border_radius_bottom_right_link_button4+'px',\n                                                        border: border_size_link_button4+'px solid'+df_border_color_link_button4,\n                                                        backgroundColor:df_background_color_link_button4,\n                                                        background:df_background_color_link_button4,\n                                                    }\n                                                }\n                                                >\n                                                    <RichText\n                                                        className={ 'wp-block-bubiblock-slider-slider__link_4' }\n                                                        tagName= \"p\"\n                                                        onChange= { this.onChangeButton4 }\n                                                        value= { button4 }\n                                                        placeholder= { __(\"Button\", \"bubiblock-slider\") }\n                                                        fotmattingControls= { [] }\n                                                        style={{fontSize:fontsizebutton4+'px'}}\n                                                        allowedFormats={ [ 'core/link', 'core/code','core/image','core/strikethrough','core/underline','core/subscript','core/superscript' ] }\n                                                    />\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        }\n                       {bubiblock_add_slider_5 && // Slider 5\n                        <div className={'carousel-item '+df_effect_slider}>\n                            { df_enable_divide_5 &&\n                                <div className={'df-divide-5'} style={{color:df_color_divide_5}}>\n                                    {(divide_5=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_5=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_5=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_5=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_5 &&\n                                <div className={'df-divide-bottom-5'} style={{color:df_color_divide_bottom_5}}>\n                                    {(divide_bottom_5=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_5=='df-slider-image-5' ) &&\n                                <>\n                                {imageUrl_5 ?\n                                    <>\n                                    <a href={bubiblock_link_slider_5} target={bubiblock_link_tab_slider_5} rel=\"noopener\">\n                                        <img src={imageUrl_5} alt={alt5} className={'img-cap image-slider-5'} style={{objectFit:df_cover_img5,objectPosition:df_focalPoint_img_5+'% '+df_focalPoint_y_img_5+'%'}} />\n                                    {isBlobURL(imageUrl_5) && <Spinner />}\n                                    {df_mask_slider_5 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_5,background:background_color_gradient_mask_5,opacity:df_opacity_mask_5}}></div>\n                                    }\n                                    </a>\n                                    </>\n                                    :\n                                    <div className={'df-upload-img'}></div>\n                                }\n                                </>\n                            }\n                            {(df_slider_chose_5=='df-slider-color-5') &&\n                                <>\n                                {df_background_color_slider_5 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_5}}></div>\n                                    :\n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>\n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-5'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText\n                                                className={ 'wp-block-bubiblock-slider-slider__title_5 '+df_repeat_effectcaption5+' '+df_delay_effectcaption5+' '+df_speed_effectcaption5+' '+effectcaption5 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title5,fontSize:fontsizetitle5+'px',bottom:margin_bottom_caption5+'px'}}\n                                                onChange= { this.onChangeTitle5 }\n                                                value= { title5 }\n                                                placeholder= { __(\"Title\", \"bubiblock-slider\") }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <RichText\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_5 '+df_repeat_effectinfo5+' '+df_delay_effectinfo5+' '+df_speed_effectinfo5+' '+effectinfo5}\n                                                tagName= \"p\"\n                                                onChange= { this.onChangeInfo5 }\n                                                value= { info5 }\n                                                style={{textAlign:alignment_info5,fontSize:fontsizeinfo5+'px',bottom:margin_bottom_info5+'px'}}\n                                                placeholder= { __(\"Info\", \"bubiblock-slider\") }\n                                                fotmattingControls= { [] }\n                                                allowedFormats={ [ 'core/code','core/image','core/strikethrough','core/underline','core/text-color','core/subscript','core/superscript' ] }\n                                            />\n                                            <div className={'link-button-5 '+df_repeat_effectbutton5+' '+df_delay_effectbutton5+' '+df_speed_effectbutton5+' '+effectbutton5} style={{textAlign:alignment_button5,bottom:margin_bottom_button5+'px'}}>\n                                                <button className={'button-slider5 '+df_background_color_transparent_link_button5} style={\n                                                    {\n                                                        paddingTop:padding_link_button5+'px',\n                                                        paddingBottom:padding_link_button5+'px',\n                                                        paddingLeft:padding_right_link_button5+'px',\n                                                        paddingRight:padding_right_link_button5+'px',\n                                                        borderTopLeftRadius: border_radius_top_left_link_button5+'px',\n                                                        borderTopRightRadius: border_radius_top_right_link_button5+'px',\n                                                        borderBottomLeftRadius: border_radius_bottom_left_link_button5+'px',\n                                                        borderBottomRightRadius: border_radius_bottom_right_link_button5+'px',\n                                                        border: border_size_link_button5+'px solid'+df_border_color_link_button5,\n                                                        backgroundColor:df_background_color_link_button5,\n                                                        background:df_background_color_link_button5,\n                                                    }\n                                                }\n                                                >\n                                                    <RichText\n                                                        className={ 'wp-block-bubiblock-slider-slider__link_5' }\n                                                        tagName= \"p\"\n                                                        onChange= { this.onChangeButton5 }\n                                                        value= { button5 }\n                                                        placeholder= { __(\"Button\", \"bubiblock-slider\") }\n                                                        fotmattingControls= { [] }\n                                                        style={{fontSize:fontsizebutton5+'px'}}\n                                                        allowedFormats={ [ 'core/link', 'core/code','core/image','core/strikethrough','core/underline','core/subscript','core/superscript' ] }\n                                                    />\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        }\n\n                    </div>\n                    <a className={'carousel-control-prev df-carousel-control-prev bubi-img-3 '+bubi_arrow_position+' '+df_arrow_slider+' '+df_arrow_slider_table+' '+df_arrow_slider_mobile} type=\"button\" data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide=\"prev\" style={{left:bubi_marginarrow+'px',opacity:bubiopacityarrow}}>\n                        <i className={'bubi-icon '+df_arrow_slider_type} style={{color:df_color_arrow,padding:df_padding_arrow,borderRadius:df_radius_arrow,fontSize:df_size_arrow}} aria-hidden=\"true\"></i>\n                    </a>\n                    <a className={'carousel-control-next df-carousel-control-next bubi-img-3 '+bubi_arrow_position+' '+df_arrow_slider+' '+df_arrow_slider_table+' '+df_arrow_slider_mobile} type=\"button\" data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide=\"next\" style={{right:bubi_marginarrow+'px',opacity:bubiopacityarrow}}>\n                        <i className={'bubi-icon '+df_arrow_slider_type} style={{color:df_color_arrow,padding:df_padding_arrow,borderRadius:df_radius_arrow,fontSize:df_size_arrow}} aria-hidden=\"true\"></i>\n                    </a>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withSelect(\n\n    (select, props) => {\n        const id = props.attributes.id;\n        const id2 = props.attributes.id2;\n        const id3 = props.attributes. id3;\n        const id4 = props.attributes. id4;\n        const id5 = props.attributes. id5;\n\n    return {\n        image: id ? select('core').getMedia(id) : null,\n        image: id2 ? select('core').getMedia(id2) : null,\n        image: id3 ? select('core').getMedia(id3) : null,\n        image: id4 ? select('core').getMedia(id4) : null,\n        image: id5 ? select('core').getMedia(id5) : null,\n    }\n    }\n)(SliderEdit);\n","import './style.editor.scss';\nimport { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport edit from './edit';\nimport { RichText, InnerBlocks } from \"@wordpress/block-editor\";\n\nconst attributes = {\n\n    // Geeral \n    bubiblock_padding_caption:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_table_caption:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_mobile_caption:{\n        type:'number',\n        default:0\n    },\n    bubiblock_display_button_table_caption:{\n        type:'boolean',\n        default:true\n    },\n    bubiblock_display_button_mobile_caption:{\n        type:'boolean',\n        default:true\n    },\n    bubiblcok_fontfamily:{\n        type: 'string',\n        default:'IBM Plex Sans'+',sans-serif'\n    },\n    bubiblock_typography_custom:{\n        type:'boolean',\n        default:true\n    },\n    bubiblcok_fontfamily_weight:{\n        type:'string',\n        default:'400'\n    },\n    bubiblock_line_height_title:{\n        type:'number',\n        default:2\n    },\n    bubiblcok_fontfamily_descritpion:{\n        type: 'string',\n        default:'IBM Plex Sans'+',sans-serif'\n    },\n    bubiblcok_fontfamily_weight_description:{\n        type:'string',\n        default:'300'\n    },\n    bubiblock_line_height_info:{\n        type:'number',\n        default:2\n    },\n    bubiblcok_fontfamily_button:{\n        type: 'string',\n        default:'IBM Plex Sans'+',sans-serif'\n    },\n    bubiblcok_fontfamily_weight_button:{\n        type:'string',\n        default:'400'\n    },\n    height_slider:{\n        type:'number',\n        default:500\n    },\n    df_height_slider_auto:{\n        type:'bolean',\n        default:false\n    },\n    df_resp:{\n        type: 'string',\n        default:'desktop'\n    },\n    height_slider_table:{\n        type:'number',\n        default:400\n    },\n    height_slider_mobile:{\n        type:'number',\n        default:300\n    },\n    bubiblock_full_slider:{\n        type:'boolean',\n        default:false\n    },\n    df_interval_slider:{\n        type:'string',\n        default:'0'\n    },\n    bubiblock_speed_flip_slider:{\n        type:'number',\n        default:3\n    },\n   \n    df_pause_slider:{\n        type:'string',\n        default:'hover'\n    },\n    df_effect_slider:{\n        type:'string',\n        default:'df-slider-slide'\n    },\n    bubiblock_show_slider_desktop:{\n        type:'boolean',\n        default:true\n    },\n    bubiblock_show_slider_table:{\n        type:'boolean',\n        default:true\n    },\n    bubiblock_show_slider_mobile:{\n        type:'boolean',\n        default:true\n    },\n    bubiblock_carousle_touch:{\n        type:'boolean',\n        default:true\n    },\n    bubi_block_content_slider:{\n        type:'string',\n        default:'bubiblock-content-slider'\n    },\n    bubiblock_padding_block_slider:{\n        type:'number',\n        default:15\n    },\n    bubiblock_padding_b_block_slider:{\n        type:'number',\n        default:15\n    },\n    bubiblock_padding_block_slider_table:{\n        type:'number',\n        default:10\n    },\n    bubiblock_padding_b_block_slider_table:{\n        type:'number',\n        default:10\n    },\n    bubiblock_padding_block_slider_mobile:{\n        type:'number',\n        default:5\n    },\n    bubiblock_padding_b_block_slider_mobile:{\n        type:'number',\n        default:5\n    },\n    bubiblock_background_color_block_slider:{\n        type:'string',\n    },\n    bubiopacityblock_slider:{\n        type:'number',\n        default:1\n    },\n    df_arrow_slider:{\n        type:'string',\n        default:'df-arrow-true'\n    },\n    df_arrow_slider_table:{\n        type:'string',\n        default:'df-arrow-table-true'\n    },\n    df_arrow_slider_mobile:{\n        type:'string',\n        default:'df-arrow-mobile-false'\n    },\n    bubiblock_padding_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_table_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_b_table_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_mobile_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_b_mobile_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_padding_b_slider:{\n        type:'number',\n        default:.0\n    },\n    bubiblock_radius_slider:{\n        type:'number',\n        default:.0\n    },\n    bubiblock_background_color_slider:{\n        type:'string',\n    },\n    df_arrow_slider_type:{\n        type:'string',\n        default:'bubi-arrow-right-alt2'\n    },\n    df_arrow_border_solid_slider:{\n        type:'number',\n        default:0\n    },\n    bubiblock_id_slider:{\n        type:'string',\n        default:'one'\n    },\n    df_color_arrow:{\n        type:'string',\n    },\n    bubiopacityarrow:{\n        type: 'number',\n        default:.5\n    },\n    bubiopacityhoverarrow:{\n        type: 'number',\n        default:1\n    },\n    df_padding_arrow:{\n        type:'number',\n        default:0\n    },\n    df_radius_arrow:{\n        type:'number',\n        default:0\n    },\n    df_size_arrow:{\n        type:'number',\n        default:30\n    },\n    df_size_arrow_table:{\n        type:'number',\n        default:16\n    },\n    df_size_arrow_mobile:{\n        type:'number',\n        default:16\n    },\n    bubi_marginarrow:{\n        type:'number',\n        default:0\n    },\n    df_dot_slider:{\n        type:'string',\n        default:'df-dot-true'\n    },\n    df_dot_slider_table:{\n        type:'string',\n        default:'df-dot-table-true'\n    },\n    df_dot_slider_mobile:{\n        type:'string',\n        default:'df-dot-mobile-false'\n    },\n    df_dot_slider_type:{\n        type:'string',\n        default:'df-dot-linear'\n    },\n    bubi_arrow_position :{\n        type:'string',\n        default:'arrowcenter' \n    },\n    df_width_dot:{\n        type:'number',\n        default: 20\n    },\n    df_height_dot:{\n        type:'number',\n        default: 3\n    },\n    bubiblock_height_dot_active_enable:{\n        type:'boolean',\n        default:false\n    },\n    bubiblock_height_dot_active:{\n        type:'number',\n        default: 8\n    },\n    bubiblock_progress_dot_enable:{\n        type:'boolean',\n        default:false\n    },\n    df_color_progress_dot:{\n        type:'string',\n        default:'#007cba' \n    },\n    df_spacing_dot:{\n        type:'number',\n        default: 3\n    },\n    df_bottom_dot:{\n        type:'number',\n        default: 10\n    },\n    df_color_dot:{\n        type:'string',\n        default:'#fff'\n    },\n    // Slider 1\n    df_slider_chose_1:{\n        type: 'string',\n        default: 'df-slider-color-1'\n    },\n    id: {\n        type: 'number'\n    },\n    alt: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img',\n        attribute: 'alt',\n        default: ''\n    },\n    url: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img',\n        attribute: 'src',\n    },\n    df_cover_img1:{\n        type: 'string',\n        default: 'cover',\n    },\n    df_focalPoint_img_1: {\n        type: 'number',\n        default:50\n    },\n    df_focalPoint_y_img_1: {\n        type: 'number',\n        default:50\n    },\n    df_background_color_slider_1:{\n        type: 'string',\n    }, \n    effectcaption1: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectcaption1:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectcaption1:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectcaption1:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    margin_bottom_caption1: {\n        type: 'number',\n        default:80\n    },\n    margin_bottom_table_caption1: {\n        type: 'number',\n        default:25\n    },\n    margin_bottom_mobile_caption1: {\n        type: 'number',\n        default:15\n    },\n    df_info_table_slider_1:{\n        type:'string',\n        default:'df-caption-table-true'\n    },\n    df_info_mobile_slider_1:{\n        type:'string',\n        default:'df-caption-mobile-false'\n    },\n    margin_bottom_info1: {\n        type: 'number',\n        default:40\n    },\n    margin_bottom_table_info1: {\n        type: 'number',\n        default:30\n    },\n    margin_bottom_mobile_info1: {\n        type: 'number',\n        default:10\n    },\n    margin_bottom_button1: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_table_button1: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_mobile_button1: {\n        type: 'number',\n        default:5\n    },\n    effectinfo1: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectinfo1:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectinfo1:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectinfo1:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    effectbutton1: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectbutton1:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectbutton1:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectbutton1:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    title1: {\n        type: 'string',\n        source: 'html',\n        selector: 'h4'\n    },\n    fontsizetitle1:{\n        type: 'number',\n        default:24\n    },\n    fontsizetitle1table:{\n        type: 'number',\n        default:22\n    },\n    fontsizetitle1mobile:{\n        type: 'number',\n        default:18\n    },\n    info1: {\n        type: 'string',\n        source: 'html',\n        selector: 'p'\n    },\n    fontsizeinfo1:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo1table:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo1mobile:{\n        type: 'number',\n        default:16\n    },\n    alignment_title1: {\n        type: 'string',\n        default: 'left'\n    },\n    alignment_info1: {\n        type: 'string',\n        default: 'left'\n    },\n    button1: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__link'\n    },\n    fontsizebutton1:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton1table:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton1mobile:{\n        type: 'number',\n        default:15\n    },\n    alignment_button1: {\n        type: 'string',\n        default: 'right'\n    },\n    padding_link_button1:{\n        type: 'number',\n        default:8\n    },\n    padding_right_link_button1:{\n        type: 'number',\n        default:20\n    },\n    border_radius_top_left_link_button1:{\n        type: 'number',\n        default:4\n    },\n    border_radius_top_right_link_button1:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_left_link_button1:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_right_link_button1:{\n        type: 'number',\n        default:4\n    },\n    border_size_link_button1:{\n        type: 'number',\n        default:0\n    },\n    df_background_color_link_button1:{\n        type: 'string',\n    },\n    df_background_color_hover_link_button1:{\n        type: 'string',\n    }, \n    df_color_link_button1:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_color_hover_link_button1:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_border_color_link_button1:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_background_color_transparent_link_button1:{\n        type: 'string',\n        default: 'df-trasparent-color-button1-false'\n    },\n    df_mask_slider_1:{\n        type:'boolean',\n        default:false\n    },\n    background_color_solid_mask_1:{\n        type: 'string',\n    },\n    df_opacity_mask_1: {\n        type:'number',\n        default:.4\n    },\n    df_enable_divide_1:{\n        type:'bolean',\n        default:false\n    },\n    divide_1:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_1:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_1: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_1: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_1: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_1: {\n        type:'number',\n        default:3\n    },\n    df_enable_divide_bottom_1:{\n        type:'bolean',\n        default:false\n    },\n    divide_bottom_1:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_bottom_1:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_bottom_1: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_bottom_1: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_bottom_1: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_1_bottom: {\n        type:'number',\n        default:3\n    },\n    bubiblock_link_slider_1:{\n        type:'url'\n    },\n    bubiblock_link_tab_slider_1:{\n        type:'string',\n        default:''\n    },\n    bubiblock_sec_img_1:{\n        type:'bolean',\n        default:false\n    },\n    id1: {\n        type: 'number'\n    },   \n \n    // Slider 2\n    bubiblock_add_slider_2:{\n        type:'boolean',\n        default:false\n    },\n    df_slider_chose_2:{\n        type: 'string',\n        default: 'df-slider-color-2'\n    },\n    id2: {\n        type: 'number'\n    },\n    alt2: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-2',\n        attribute: 'alt',\n        default: ''\n    },\n    imageUrl_2: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-2',\n        attribute: 'src',\n    }, \n    df_cover_img2:{\n        type: 'string',\n        default: 'cover',\n    },\n    df_focalPoint_img_2: {\n        type: 'number',\n        default:50\n    },\n    df_focalPoint_y_img_2: {\n        type: 'number',\n        default:50\n    },\n    df_background_color_slider_2:{\n        type: 'string',\n    }, \n    effectcaption2: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectcaption2:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectcaption2:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectcaption2:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    margin_bottom_caption2: {\n        type: 'number',\n        default:80\n    },\n    margin_bottom_table_caption2: {\n        type: 'number',\n        default:25\n    },\n    margin_bottom_mobile_caption2: {\n        type: 'number',\n        default:15\n    },\n    df_info_table_slider_2:{\n        type:'string',\n        default:'df-caption-table-true'\n    },\n    df_info_mobile_slider_2:{\n        type:'string',\n        default:'df-caption-mobile-false'\n    },\n    margin_bottom_info2: {\n        type: 'number',\n        default:40\n    },\n    margin_bottom_table_info2: {\n        type: 'number',\n        default:20\n    },\n    margin_bottom_mobile_info2: {\n        type: 'number',\n        default:10\n    },\n    margin_bottom_button2: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_table_button2: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_mobile_button2: {\n        type: 'number',\n        default:5\n    },\n    effectinfo2: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectinfo2:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectinfo2:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectinfo2:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    effectbutton2: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectbutton2:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectbutton2:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectbutton2:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    title2: {\n        type: 'string',\n        source: 'html',\n        selector: 'h4.wp-block-bubiblock-slider-slider__title_2'\n    },\n    fontsizetitle2:{\n        type: 'number',\n        default:24\n    },\n    fontsizetitle2table:{\n        type: 'number',\n        default:22\n    },\n    fontsizetitle2mobile:{\n        type: 'number',\n        default:18\n    },\n    info2: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__info_2'\n    },\n    fontsizeinfo2:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo2table:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo2mobile:{\n        type: 'number',\n        default:16\n    },\n    alignment_title2: {\n        type: 'string',\n        default: 'left'\n    },\n    alignment_info2: {\n        type: 'string',\n        default: 'left'\n    },\n    button2: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__link_2'\n    },\n    fontsizebutton2:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton2table:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton2mobile:{\n        type: 'number',\n        default:15\n    },\n    alignment_button2: {\n        type: 'string',\n        default: 'right'\n    },\n    padding_link_button2:{\n        type: 'number',\n        default:8\n    },\n    padding_right_link_button2:{\n        type: 'number',\n        default:20\n    },\n    border_radius_top_left_link_button2:{\n        type: 'number',\n        default:4\n    },\n    border_radius_top_right_link_button2:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_left_link_button2:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_right_link_button2:{\n        type: 'number',\n        default:4\n    },\n    border_size_link_button2:{\n        type: 'number',\n        default:0\n    },\n    df_background_color_link_button2:{\n        type: 'string',\n    },\n    df_background_color_hover_link_button2:{\n        type: 'string',\n    }, \n    df_color_link_button2:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_color_hover_link_button2:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_border_color_link_button2:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_background_color_transparent_link_button2:{\n        type: 'string',\n        default: 'df-trasparent-color-button2-false'\n    },\n    df_mask_slider_2:{\n        type:'boolean',\n        default:false\n    },\n    background_color_solid_mask_2:{\n        type: 'string',\n    },\n    df_opacity_mask_2: {\n        type:'number',\n        default:.4\n    },\n    df_enable_divide_2:{\n        type:'bolean',\n        default:false\n    },\n    divide_2:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_2:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_2: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_2: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_2: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_2: {\n        type:'number',\n        default:2\n    },\n    df_enable_divide_bottom_2:{\n        type:'bolean',\n        default:false\n    },\n    divide_bottom_2:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_bottom_2:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_bottom_2: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_bottom_2: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_bottom_2: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_2_bottom: {\n        type:'number',\n        default:2\n    },\n    bubiblock_link_slider_2:{\n        type:'url'\n    },\n    bubiblock_link_tab_slider_2:{\n        type:'string',\n        default:''\n    },\n    // Slider 3\n    bubiblock_add_slider_3:{\n        type:'boolean',\n        default:false\n    },\n    df_slider_chose_3:{\n        type: 'string',\n        default: 'df-slider-color-3'\n    },\n    id3: {\n        type: 'number'\n    },\n    alt3: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-3',\n        attribute: 'alt',\n        default: ''\n    },\n    imageUrl_3: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-3',\n        attribute: 'src',\n    }, \n    df_cover_img3:{\n        type: 'string',\n        default: 'cover',\n    },\n    df_focalPoint_img_3: {\n        type: 'number',\n        default:50\n    },\n    df_focalPoint_y_img_3: {\n        type: 'number',\n        default:50\n    },\n    df_background_color_slider_3:{\n        type: 'string',\n    }, \n    effectcaption3: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectcaption3:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectcaption3:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectcaption3:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    margin_bottom_caption3: {\n        type: 'number',\n        default:80\n    },\n    margin_bottom_table_caption3: {\n        type: 'number',\n        default:25\n    },\n    margin_bottom_mobile_caption3: {\n        type: 'number',\n        default:15\n    },\n    df_info_table_slider_3:{\n        type:'string',\n        default:'df-caption-table-true'\n    },\n    df_info_mobile_slider_3:{\n        type:'string',\n        default:'df-caption-mobile-false'\n    },\n    margin_bottom_info3: {\n        type: 'number',\n        default:40\n    },\n    margin_bottom_table_info3: {\n        type: 'number',\n        default:30\n    },\n    margin_bottom_mobile_info3: {\n        type: 'number',\n        default:10\n    },\n    margin_bottom_button3: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_table_button3: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_mobile_button3: {\n        type: 'number',\n        default:5\n    },\n    effectinfo3: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectinfo3:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectinfo3:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectinfo3:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    effectbutton3: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectbutton3:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectbutton3:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectbutton3:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    title3: {\n        type: 'string',\n        source: 'html',\n        selector: 'h4.wp-block-bubiblock-slider-slider__title_3'\n    },\n    fontsizetitle3:{\n        type: 'number',\n        default:24\n    },\n    fontsizetitle3table:{\n        type: 'number',\n        default:22\n    },\n    fontsizetitle3mobile:{\n        type: 'number',\n        default:18\n    },\n    info3: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__info_3'\n    },\n    fontsizeinfo3:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo3table:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo3mobile:{\n        type: 'number',\n        default:16\n    },\n    alignment_title3: {\n        type: 'string',\n        default: 'left'\n    },\n    alignment_info3: {\n        type: 'string',\n        default: 'left'\n    },\n    button3: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__link_3'\n    },\n    fontsizebutton3:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton3table:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton3mobile:{\n        type: 'number',\n        default:15\n    },\n    alignment_button3: {\n        type: 'string',\n        default: 'right'\n    },\n    padding_link_button3:{\n        type: 'number',\n        default:8\n    },\n    padding_right_link_button3:{\n        type: 'number',\n        default:20\n    },\n    border_radius_top_left_link_button3:{\n        type: 'number',\n        default:4\n    },\n    border_radius_top_right_link_button3:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_left_link_button3:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_right_link_button3:{\n        type: 'number',\n        default:4\n    },\n    border_size_link_button3:{\n        type: 'number',\n        default:0\n    },\n    df_background_color_link_button3:{\n        type: 'string',\n    },\n    df_background_color_hover_link_button3:{\n        type: 'string',\n    }, \n    df_color_link_button3:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_color_hover_link_button3:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_border_color_link_button3:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_background_color_transparent_link_button3:{\n        type: 'string',\n        default: 'df-trasparent-color-button3-false'\n    },\n    df_mask_slider_3:{\n        type:'boolean',\n        default:false\n    },\n    background_color_solid_mask_3:{\n        type: 'string',\n    },\n    df_opacity_mask_3: {\n        type:'number',\n        default:.4\n    },\n    df_enable_divide_3:{\n        type:'bolean',\n        default:false\n    },\n    divide_3:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_3:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_3: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_3: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_3: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_3: {\n        type:'number',\n        default:3\n    },\n    df_enable_divide_bottom_3:{\n        type:'bolean',\n        default:false\n    },\n    divide_bottom_3:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_bottom_3:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_bottom_3: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_bottom_3: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_bottom_3: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_3_bottom: {\n        type:'number',\n        default:3\n    },\n    bubiblock_link_slider_3:{\n        type:'url'\n    },\n    bubiblock_link_tab_slider_3:{\n        type:'string',\n        default:''\n    },\n    // Slider 4\n    bubiblock_add_slider_4:{\n        type:'boolean',\n        default:false\n    },\n    df_slider_chose_4:{\n        type: 'string',\n        default: 'df-slider-color-4'\n    },\n    id4: {\n        type: 'number'\n    },\n    alt4: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-4',\n        attribute: 'alt',\n        default: ''\n    },\n    imageUrl_4: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-4',\n        attribute: 'src',\n    }, \n    df_cover_img4:{\n        type: 'string',\n        default: 'cover',\n    },\n    df_focalPoint_img_4: {\n        type: 'number',\n        default:50\n    },\n    df_focalPoint_y_img_4: {\n        type: 'number',\n        default:50\n    },\n    df_background_color_slider_4:{\n        type: 'string',\n    }, \n    effectcaption4: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectcaption4:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectcaption4:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectcaption4:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    margin_bottom_caption4: {\n        type: 'number',\n        default:80\n    },\n    margin_bottom_table_caption4: {\n        type: 'number',\n        default:25\n    },\n    margin_bottom_mobile_caption4: {\n        type: 'number',\n        default:15\n    },\n    df_info_table_slider_4:{\n        type:'string',\n        default:'df-caption-table-true'\n    },\n    df_info_mobile_slider_4:{\n        type:'string',\n        default:'df-caption-mobile-false'\n    },\n    margin_bottom_info4: {\n        type: 'number',\n        default:40\n    },\n    margin_bottom_table_info4: {\n        type: 'number',\n        default:30\n    },\n    margin_bottom_mobile_info4: {\n        type: 'number',\n        default:10\n    },\n    margin_bottom_button4: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_table_button4: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_mobile_button4: {\n        type: 'number',\n        default:5\n    },\n    effectinfo4: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectinfo4:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectinfo4:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectinfo4:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    effectbutton4: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectbutton4:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectbutton4:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectbutton4:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    title4: {\n        type: 'string',\n        source: 'html',\n        selector: 'h4.wp-block-bubiblock-slider-slider__title_4'\n    },\n    fontsizetitle4:{\n        type: 'number',\n        default:24\n    },\n    fontsizetitle4table:{\n        type: 'number',\n        default:22\n    },\n    fontsizetitle4mobile:{\n        type: 'number',\n        default:18\n    },\n    info4: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__info_4'\n    },\n    fontsizeinfo4:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo4table:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo4mobile:{\n        type: 'number',\n        default:16\n    },\n    alignment_title4: {\n        type: 'string',\n        default: 'left'\n    },\n    alignment_info4: {\n        type: 'string',\n        default: 'left'\n    },\n    button4: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__link_4'\n    },\n    fontsizebutton4:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton4table:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton4mobile:{\n        type: 'number',\n        default:15\n    },\n    alignment_button4: {\n        type: 'string',\n        default: 'right'\n    },\n    padding_link_button4:{\n        type: 'number',\n        default:8\n    },\n    padding_right_link_button4:{\n        type: 'number',\n        default:20\n    },\n    border_radius_top_left_link_button4:{\n        type: 'number',\n        default:4\n    },\n    border_radius_top_right_link_button4:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_left_link_button4:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_right_link_button4:{\n        type: 'number',\n        default:4\n    },\n    border_size_link_button4:{\n        type: 'number',\n        default:0\n    },\n    df_background_color_link_button4:{\n        type: 'string',\n    },\n    df_background_color_hover_link_button4:{\n        type: 'string',\n    }, \n    df_color_link_button4:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_color_hover_link_button4:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_border_color_link_button4:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_background_color_transparent_link_button4:{\n        type: 'string',\n        default: 'df-trasparent-color-button4-false'\n    },\n    df_mask_slider_4:{\n        type:'boolean',\n        default:false\n    },\n    background_color_solid_mask_4:{\n        type: 'string',\n    },\n    df_opacity_mask_4: {\n        type:'number',\n        default:.4\n    },\n    df_enable_divide_4:{\n        type:'bolean',\n        default:false\n    },\n    divide_4:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_4:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_4: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_4: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_4: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_4: {\n        type:'number',\n        default:3\n    },\n    df_enable_divide_bottom_4:{\n        type:'bolean',\n        default:false\n    },\n    divide_bottom_4:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_bottom_4:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_bottom_4: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_bottom_4: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_bottom_4: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_4_bottom: {\n        type:'number',\n        default:3\n    },\n    bubiblock_link_slider_4:{\n        type:'url'\n    },\n    bubiblock_link_tab_slider_4:{\n        type:'string',\n        default:''\n    },\n    // Slider 5\n    bubiblock_add_slider_5:{\n        type:'boolean',\n        default:false\n    },\n    df_slider_chose_5:{\n        type: 'string',\n        default: 'df-slider-color-5'\n    },\n    id5: {\n        type: 'number'\n    },\n    alt5: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-5',\n        attribute: 'alt',\n        default: ''\n    },\n    imageUrl_5: {\n        type: 'string',\n        source: 'attribute',\n        selector: 'img.image-slider-5',\n        attribute: 'src',\n    }, \n    df_cover_img5:{\n        type: 'string',\n        default: 'cover',\n    },\n    df_focalPoint_img_5: {\n        type: 'number',\n        default:50\n    },\n    df_focalPoint_y_img_5: {\n        type: 'number',\n        default:50\n    },\n    df_background_color_slider_5:{\n        type: 'string',\n    }, \n    effectcaption5: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectcaption5:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectcaption5:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectcaption5:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    margin_bottom_caption5: {\n        type: 'number',\n        default:80\n    },\n    margin_bottom_table_caption5: {\n        type: 'number',\n        default:25\n    },\n    margin_bottom_mobile_caption5: {\n        type: 'number',\n        default:15\n    },\n    df_info_table_slider_5:{\n        type:'string',\n        default:'df-caption-table-true'\n    },\n    df_info_mobile_slider_5:{\n        type:'string',\n        default:'df-caption-mobile-false'\n    },\n    margin_bottom_info5: {\n        type: 'number',\n        default:40\n    },\n    margin_bottom_table_info5: {\n        type: 'number',\n        default:30\n    },\n    margin_bottom_mobile_info5: {\n        type: 'number',\n        default:10\n    },\n    margin_bottom_button5: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_table_button5: {\n        type: 'number',\n        default:5\n    },\n    margin_bottom_mobile_button5: {\n        type: 'number',\n        default:5\n    },\n    effectinfo5: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectinfo5:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectinfo5:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectinfo5:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    effectbutton5: {\n        type: 'string',\n        default: 'df-no-effect'\n    },\n    df_speed_effectbutton5:{\n        type: 'string',\n        default: 'animate__slow'\n    },\n    df_delay_effectbutton5:{\n        type: 'string',\n        default: 'animate__delay-0s'\n    },\n    df_repeat_effectbutton5:{\n        type: 'string',\n        default: 'animate__repeat-1'\n    },\n    title5: {\n        type: 'string',\n        source: 'html',\n        selector: 'h4.wp-block-bubiblock-slider-slider__title_5'\n    },\n    fontsizetitle5:{\n        type: 'number',\n        default:24\n    },\n    fontsizetitle5table:{\n        type: 'number',\n        default:22\n    },\n    fontsizetitle5mobile:{\n        type: 'number',\n        default:18\n    },\n    info5: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__info_5'\n    },\n    fontsizeinfo5:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo5table:{\n        type: 'number',\n        default:16\n    },\n    fontsizeinfo5mobile:{\n        type: 'number',\n        default:16\n    },\n    alignment_title5: {\n        type: 'string',\n        default: 'left'\n    },\n    alignment_info5: {\n        type: 'string',\n        default: 'left'\n    },\n    button5: {\n        type: 'string',\n        source: 'html',\n        selector: 'p.wp-block-bubiblock-slider-slider__link_5'\n    },\n    fontsizebutton5:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton5table:{\n        type: 'number',\n        default:15\n    },\n    fontsizebutton5mobile:{\n        type: 'number',\n        default:15\n    },\n    alignment_button5: {\n        type: 'string',\n        default: 'right'\n    },\n    padding_link_button5:{\n        type: 'number',\n        default:8\n    },\n    padding_right_link_button5:{\n        type: 'number',\n        default:20\n    },\n    border_radius_top_left_link_button5:{\n        type: 'number',\n        default:4\n    },\n    border_radius_top_right_link_button5:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_left_link_button5:{\n        type: 'number',\n        default:4\n    },\n    border_radius_bottom_right_link_button5:{\n        type: 'number',\n        default:4\n    },\n    border_size_link_button5:{\n        type: 'number',\n        default:0\n    },\n    df_background_color_link_button5:{\n        type: 'string',\n    },\n    df_background_color_hover_link_button5:{\n        type: 'string',\n    }, \n    df_color_link_button5:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_color_hover_link_button5:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_border_color_link_button5:{\n        type: 'string',\n        default: '#fff'\n    },\n    df_background_color_transparent_link_button5:{\n        type: 'string',\n        default: 'df-trasparent-color-button5-false'\n    },\n    df_mask_slider_5:{\n        type:'boolean',\n        default:false\n    },\n    background_color_solid_mask_5:{\n        type: 'string',\n    },\n    df_opacity_mask_5: {\n        type:'number',\n        default:.4\n    },\n    df_enable_divide_5:{\n        type:'bolean',\n        default:false\n    },\n    divide_5:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_5:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_5: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_5: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_5: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_5: {\n        type:'number',\n        default:3\n    },\n    df_enable_divide_bottom_5:{\n        type:'bolean',\n        default:false\n    },\n    divide_bottom_5:{\n        type: 'string',\n        default: 'svg-1'\n    },\n    df_color_divide_bottom_5:{\n        type: 'string',\n        default: '#fff',\n    },\n    df_height_divide_bottom_5: {\n        type:'number',\n        default:60\n    },\n    df_height_table_divide_bottom_5: {\n        type:'number',\n        default:60\n    },\n    df_height_mobile_divide_bottom_5: {\n        type:'number',\n        default:60\n    },\n    bubiblock_dalay_divide_5_bottom: {\n        type:'number',\n        default:3\n    },\n    bubiblock_link_slider_5:{\n        type:'url'\n    },\n    bubiblock_link_tab_slider_5:{\n        type:'string',\n        default:''\n    },\n}\n\nregisterBlockType('bubiblock-slider/slider', {\n    title:__('Bubiblock Slider','bubiblock-slider'),\n    description:__('Slider Block for Gutenberg, highlight your works in a few clicks!','bubiblock-slider'),\n    category:'media',\n    icon: {foreground: '#8321D2',src:'embed-photo bubiblock-icon-description' },\n    supports: {\n        reusable: false,\n        html: false,\n        align: true,\n        align: [ 'center','full' ]\n    },\n    keywords: [ __('slider','bubiblock-slider'), __('carousel','bubiblock-slider')],\n    attributes,\n\n    save: ( {attributes} ) => {\n\n        const {\n            bubiblock_padding_caption,\n            bubiblock_padding_table_caption,\n            bubiblock_padding_mobile_caption,\n            bubiblock_display_button_table_caption,\n            bubiblock_display_button_mobile_caption,\n            bubiblock_speed_flip_slider,\n            bubiblcok_fontfamily,\n            bubiblock_typography_custom,\n            bubiblcok_fontfamily_weight,\n            bubiblock_line_height_title,\n            bubiblcok_fontfamily_descritpion,\n            bubiblcok_fontfamily_weight_description,\n            bubiblock_line_height_info,\n            bubiblcok_fontfamily_button,\n            bubiblcok_fontfamily_weight_button,\n            height_slider,\n            df_height_slider_auto,\n            height_slider_table,\n            height_slider_mobile,\n            bubiblock_full_slider,\n            bubiblock_padding_slider,\n            bubiblock_padding_table_slider,\n            bubiblock_padding_b_table_slider,\n            bubiblock_padding_mobile_slider,\n            bubiblock_padding_b_mobile_slider,\n            bubiblock_padding_b_slider,\n            bubiblock_radius_slider,\n            bubiblock_background_color_slider,\n            df_interval_slider,\n            bubiblock_id_slider,\n            df_pause_slider,\n            df_effect_slider,\n            bubiblock_show_slider_desktop,\n            bubiblock_show_slider_table,\n            bubiblock_show_slider_mobile,\n            bubiblock_carousle_touch,\n            bubi_block_content_slider,\n            bubiblock_padding_block_slider,\n            bubiblock_padding_b_block_slider,\n            bubiblock_padding_block_slider_table,\n            bubiblock_padding_b_block_slider_table,\n            bubiblock_padding_block_slider_mobile,\n            bubiblock_padding_b_block_slider_mobile,\n            bubiblock_background_color_block_slider,\n            bubiopacityblock_slider,\n            df_arrow_slider,\n            df_arrow_slider_table,\n            df_arrow_slider_mobile,\n            df_color_arrow,\n            bubiopacityarrow,\n            bubiopacityhoverarrow,\n            df_padding_arrow,\n            df_radius_arrow,\n            df_size_arrow,\n            df_size_arrow_table,\n            df_size_arrow_mobile,\n            bubi_marginarrow,\n            df_arrow_slider_type,\n            bubi_arrow_position,\n            df_dot_slider,\n            df_dot_slider_table,\n            df_dot_slider_mobile,\n            df_dot_slider_type,\n            df_width_dot,\n            df_height_dot,\n            bubiblock_height_dot_active_enable,\n            bubiblock_height_dot_active,\n            bubiblock_progress_dot_enable,\n            df_color_progress_dot,\n            df_spacing_dot,\n            df_bottom_dot,\n            df_color_dot,\n            // Slider 1\n            df_slider_chose_1,\n            effectcaption1,\n            df_speed_effectcaption1,\n            df_delay_effectcaption1,\n            df_repeat_effectcaption1,\n            df_mask_slider_1,\n            background_color_solid_mask_1,\n            df_opacity_mask_1,\n            margin_bottom_caption1,\n            margin_bottom_table_caption1,\n            margin_bottom_mobile_caption1,\n            margin_bottom_info1,\n            margin_bottom_table_info1,\n            margin_bottom_mobile_info1,\n            margin_bottom_button1,\n            margin_bottom_table_button1,\n            margin_bottom_mobile_button1,\n            effectinfo1,\n            df_speed_effectinfo1,\n            df_delay_effectinfo1,\n            df_repeat_effectinfo1,\n            effectbutton1,\n            df_speed_effectbutton1,\n            df_delay_effectbutton1,\n            df_repeat_effectbutton1,\n            title1,\n            fontsizetitle1,\n            fontsizetitle1table,\n            fontsizetitle1mobile,\n            info1,\n            fontsizeinfo1,\n            fontsizeinfo1table,\n            fontsizeinfo1mobile,\n            alignment_title1,\n            alignment_info1,\n            button1,\n            fontsizebutton1,\n            fontsizebutton1table,\n            fontsizebutton1mobile,\n            alignment_button1,\n            padding_link_button1,\n            padding_right_link_button1,\n            border_radius_top_left_link_button1,\n            border_radius_top_right_link_button1,\n            border_radius_bottom_left_link_button1, \n            border_radius_bottom_right_link_button1,\n            border_size_link_button1,\n            df_background_color_link_button1,\n            df_background_color_hover_link_button1,\n            df_color_link_button1,\n            df_color_hover_link_button1,\n            df_border_color_link_button1,\n            df_background_color_transparent_link_button1,\n            url, \n            alt, \n            id, \n            df_cover_img1,\n            df_focalPoint_img_1,\n            df_focalPoint_y_img_1,\n            df_background_color_slider_1,\n            df_background_gradient_slider_1,\n            df_enable_divide_1,\n            divide_1,\n            df_color_divide_1,\n            df_height_divide_1,\n            bubiblock_dalay_divide_1,\n            df_height_table_divide_1,\n            df_height_mobile_divide_1,\n            df_enable_divide_bottom_1,\n            divide_bottom_1,\n            df_color_divide_bottom_1,\n            df_height_divide_bottom_1,\n            df_height_table_divide_bottom_1,\n            df_height_mobile_divide_bottom_1,\n            bubiblock_dalay_divide_1_bottom,\n            bubiblock_link_slider_1,\n            bubiblock_link_tab_slider_1,\n            id1,\n            // Slider 2\n            df_slider_chose_2,\n            df_mask_slider_2,\n            background_color_solid_mask_2,\n            df_opacity_mask_2,\n            effectcaption2,\n            df_speed_effectcaption2,\n            df_delay_effectcaption2,\n            df_repeat_effectcaption2,\n            margin_bottom_caption2,\n            margin_bottom_table_caption2,\n            margin_bottom_mobile_caption2,\n            margin_bottom_info2,\n            margin_bottom_table_info2,\n            margin_bottom_mobile_info2,\n            effectinfo2,\n            df_speed_effectinfo2,\n            df_delay_effectinfo2,\n            df_repeat_effectinfo2,\n            title2,\n            fontsizetitle2,\n            fontsizetitle2table,\n            fontsizetitle2mobile,\n            info2,\n            fontsizeinfo2,\n            fontsizeinfo2table,\n            fontsizeinfo2mobile,\n            margin_bottom_button2,\n            margin_bottom_table_button2,\n            margin_bottom_mobile_button2,\n            effectbutton2,\n            df_speed_effectbutton2,\n            df_delay_effectbutton2,\n            df_repeat_effectbutton2,\n            alignment_title2,\n            alignment_info2,\n            button2,\n            fontsizebutton2,\n            fontsizebutton2table,\n            fontsizebutton2mobile,\n            alignment_button2,\n            padding_link_button2,\n            padding_right_link_button2,\n            border_radius_top_left_link_button2,\n            border_radius_top_right_link_button2,\n            border_radius_bottom_left_link_button2, \n            border_radius_bottom_right_link_button2,\n            border_size_link_button2,\n            df_background_color_link_button2,\n            df_background_color_hover_link_button2,\n            df_color_link_button2,\n            df_color_hover_link_button2,\n            df_border_color_link_button2,\n            df_background_color_transparent_link_button2,\n            alt2, \n            id2,\n            imageUrl_2,\n            df_cover_img2,\n            df_focalPoint_img_2,\n            df_focalPoint_y_img_2,\n            df_background_color_slider_2,\n            df_enable_divide_2,\n            divide_2,\n            df_color_divide_2,\n            df_height_divide_2,\n            df_height_table_divide_2,\n            df_height_mobile_divide_2,\n            bubiblock_dalay_divide_2,\n            df_enable_divide_bottom_2,\n            divide_bottom_2,\n            df_color_divide_bottom_2,\n            df_height_divide_bottom_2,\n            df_height_table_divide_bottom_2,\n            df_height_mobile_divide_bottom_2,\n            bubiblock_dalay_divide_2_bottom,\n            bubiblock_link_slider_2,\n            bubiblock_link_tab_slider_2,\n            // Slider 3\n            bubiblock_add_slider_3,\n            df_slider_chose_3,\n            df_mask_slider_3,\n            background_color_solid_mask_3,\n            df_opacity_mask_3,\n            effectcaption3,\n            df_speed_effectcaption3,\n            df_delay_effectcaption3,\n            df_repeat_effectcaption3,\n            margin_bottom_caption3,\n            margin_bottom_table_caption3,\n            margin_bottom_mobile_caption3,\n            margin_bottom_info3,\n            margin_bottom_table_info3,\n            margin_bottom_mobile_info3,\n            effectinfo3,\n            df_speed_effectinfo3,\n            df_delay_effectinfo3,\n            df_repeat_effectinfo3,\n            title3,\n            fontsizetitle3,\n            fontsizetitle3table,\n            fontsizetitle3mobile,\n            info3,\n            fontsizeinfo3,\n            fontsizeinfo3table,\n            fontsizeinfo3mobile,\n            margin_bottom_button3,\n            margin_bottom_table_button3,\n            margin_bottom_mobile_button3,\n            effectbutton3,\n            df_speed_effectbutton3,\n            df_delay_effectbutton3,\n            df_repeat_effectbutton3,\n            alignment_title3,\n            alignment_info3,\n            button3,\n            fontsizebutton3,\n            fontsizebutton3table,\n            fontsizebutton3mobile,\n            alignment_button3,\n            padding_link_button3,\n            padding_right_link_button3,\n            border_radius_top_left_link_button3,\n            border_radius_top_right_link_button3,\n            border_radius_bottom_left_link_button3, \n            border_radius_bottom_right_link_button3,\n            border_size_link_button3,\n            df_background_color_link_button3,\n            df_background_color_hover_link_button3,\n            df_color_link_button3,\n            df_color_hover_link_button3,\n            df_border_color_link_button3,\n            df_background_color_transparent_link_button3,\n            alt3, \n            id3,\n            imageUrl_3,\n            df_cover_img3,\n            df_focalPoint_img_3,\n            df_focalPoint_y_img_3,\n            df_background_color_slider_3,\n            df_enable_divide_3,\n            divide_3,\n            df_color_divide_3,\n            df_height_divide_3,\n            df_height_table_divide_3,\n            df_height_mobile_divide_3,\n            bubiblock_dalay_divide_3,\n            df_enable_divide_bottom_3,\n            divide_bottom_3,\n            df_color_divide_bottom_3,\n            df_height_divide_bottom_3,\n            df_height_table_divide_bottom_3,\n            df_height_mobile_divide_bottom_3,\n            bubiblock_dalay_divide_3_bottom,\n            bubiblock_link_slider_3,\n            bubiblock_link_tab_slider_3,\n            // Slider 4\n            bubiblock_add_slider_4,\n            df_slider_chose_4,\n            df_mask_slider_4,\n            background_color_solid_mask_4,\n            df_opacity_mask_4,\n            effectcaption4,\n            df_speed_effectcaption4,\n            df_delay_effectcaption4,\n            df_repeat_effectcaption4,\n            margin_bottom_caption4,\n            margin_bottom_table_caption4,\n            margin_bottom_mobile_caption4,\n            margin_bottom_info4,\n            margin_bottom_table_info4,\n            margin_bottom_mobile_info4,\n            effectinfo4,\n            df_speed_effectinfo4,\n            df_delay_effectinfo4,\n            df_repeat_effectinfo4,\n            title4,\n            fontsizetitle4,\n            fontsizetitle4table,\n            fontsizetitle4mobile,\n            info4,\n            fontsizeinfo4,\n            fontsizeinfo4table,\n            fontsizeinfo4mobile,\n            margin_bottom_button4,\n            margin_bottom_table_button4,\n            margin_bottom_mobile_button4,\n            effectbutton4,\n            df_speed_effectbutton4,\n            df_delay_effectbutton4,\n            df_repeat_effectbutton4,\n            alignment_title4,\n            alignment_info4,\n            button4,\n            fontsizebutton4,\n            fontsizebutton4table,\n            fontsizebutton4mobile,\n            alignment_button4,\n            padding_link_button4,\n            padding_right_link_button4,\n            border_radius_top_left_link_button4,\n            border_radius_top_right_link_button4,\n            border_radius_bottom_left_link_button4, \n            border_radius_bottom_right_link_button4,\n            border_size_link_button4,\n            df_background_color_link_button4,\n            df_background_color_hover_link_button4,\n            df_color_link_button4,\n            df_color_hover_link_button4,\n            df_border_color_link_button4,\n            df_background_color_transparent_link_button4,\n            alt4, \n            id4,\n            imageUrl_4,\n            df_cover_img4,\n            df_focalPoint_img_4,\n            df_focalPoint_y_img_4,\n            df_background_color_slider_4,\n            df_enable_divide_4,\n            divide_4,\n            df_color_divide_4,\n            df_height_divide_4,\n            df_height_table_divide_4,\n            df_height_mobile_divide_4,\n            bubiblock_dalay_divide_4,\n            df_enable_divide_bottom_4,\n            divide_bottom_4,\n            df_color_divide_bottom_4,\n            df_height_divide_bottom_4,\n            df_height_table_divide_bottom_4,\n            df_height_mobile_divide_bottom_4,\n            bubiblock_dalay_divide_4_bottom,\n            bubiblock_link_slider_4,\n            bubiblock_link_tab_slider_4,\n            // Slider 5\n            bubiblock_add_slider_5,\n            df_slider_chose_5,\n            df_mask_slider_5,\n            background_color_solid_mask_5,\n            df_opacity_mask_5,\n            effectcaption5,\n            df_speed_effectcaption5,\n            df_delay_effectcaption5,\n            df_repeat_effectcaption5,\n            margin_bottom_caption5,\n            margin_bottom_table_caption5,\n            margin_bottom_mobile_caption5,\n            margin_bottom_info5,\n            margin_bottom_table_info5,\n            margin_bottom_mobile_info5,\n            effectinfo5,\n            df_speed_effectinfo5,\n            df_delay_effectinfo5,\n            df_repeat_effectinfo5,\n            title5,\n            fontsizetitle5,\n            fontsizetitle5table,\n            fontsizetitle5mobile,\n            info5,\n            fontsizeinfo5,\n            fontsizeinfo5table,\n            fontsizeinfo5mobile,\n            margin_bottom_button5,\n            margin_bottom_table_button5,\n            margin_bottom_mobile_button5,\n            effectbutton5,\n            df_speed_effectbutton5,\n            df_delay_effectbutton5,\n            df_repeat_effectbutton5,\n            alignment_title5,\n            alignment_info5,\n            button5,\n            fontsizebutton5,\n            fontsizebutton5table,\n            fontsizebutton5mobile,\n            alignment_button5,\n            padding_link_button5,\n            padding_right_link_button5,\n            border_radius_top_left_link_button5,\n            border_radius_top_right_link_button5,\n            border_radius_bottom_left_link_button5, \n            border_radius_bottom_right_link_button5,\n            border_size_link_button5,\n            df_background_color_link_button5,\n            df_background_color_hover_link_button5,\n            df_color_link_button5,\n            df_color_hover_link_button5,\n            df_border_color_link_button5,\n            df_background_color_transparent_link_button5,\n            alt5, \n            id5,\n            imageUrl_5,\n            df_cover_img5,\n            df_focalPoint_img_5,\n            df_focalPoint_y_img_5,\n            df_background_color_slider_5,\n            df_enable_divide_5,\n            divide_5,\n            df_color_divide_5,\n            df_height_divide_5,\n            df_height_table_divide_5,\n            df_height_mobile_divide_5,\n            bubiblock_dalay_divide_5,\n            df_enable_divide_bottom_5,\n            divide_bottom_5,\n            df_color_divide_bottom_5,\n            df_height_divide_bottom_5,\n            df_height_table_divide_bottom_5,\n            df_height_mobile_divide_bottom_5,\n            bubiblock_dalay_divide_5_bottom,\n            bubiblock_link_slider_5,\n            bubiblock_link_tab_slider_5,\n    \n        } = attributes;\n\n        return (\n           \n            <div id={'carouselDFControlslider'+bubiblock_id_slider} className={'df_height_carousel_block bubiblock_on_slider_desktop'+bubiblock_show_slider_desktop+' bubiblock_on_slider_table'+bubiblock_show_slider_table+' bubiblock_on_slider_mobile'+bubiblock_show_slider_mobile+' carousel slide caption-animate touch'+bubiblock_carousle_touch+' '+df_effect_slider+' '+df_pause_slider} data-ride=\"carousel\" data-interval={df_interval_slider} style={{background:bubiblock_background_color_slider}}>\n                    <ol className={df_dot_slider+' '+df_dot_slider_table+' '+df_dot_slider_mobile+' carousel-indicators prog'+bubiblock_progress_dot_enable+' diff'+bubiblock_height_dot_active_enable} style={{bottom:df_bottom_dot}}> \n                        <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"0\" className={'active '+df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',marginLeft:df_spacing_dot+'px',marginRight:df_spacing_dot+'px',backgroundColor:df_color_dot}}></li>\n                        <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"1\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',marginLeft:df_spacing_dot+'px',marginRight:df_spacing_dot+'px',backgroundColor:df_color_dot}}></li> \n                        {bubiblock_add_slider_3 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"2\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',marginLeft:df_spacing_dot+'px',marginRight:df_spacing_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                        {bubiblock_add_slider_4 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"3\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',marginLeft:df_spacing_dot+'px',marginRight:df_spacing_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                         {bubiblock_add_slider_5 &&\n                            <li data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide-to=\"4\" className={df_dot_slider_type} style={{maxWidth:df_width_dot+'px',height:df_height_dot+'px',marginLeft:df_spacing_dot+'px',marginRight:df_spacing_dot+'px',backgroundColor:df_color_dot}}></li>\n                        }\n                    </ol>\n                    <div className={'carousel-inner'}> \n                    {(bubi_block_content_slider == 'bubiblock-block-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                        <div className={'bubiblock-block'} style={{backgroundColor:bubiblock_background_color_block_slider,opacity:bubiopacityblock_slider}}>\n                            <InnerBlocks.Content />\n                        </div>\n                    }\n                        <div className={'carousel-item '+df_effect_slider+' '+bubiblock_id_slider+' active '}> \n                            { df_enable_divide_1 &&\n                                <div className={'df-divide-1'} style={{color:df_color_divide_1}}>\n                                    {(divide_1=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_1=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_1=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_1=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_1 &&\n                                <div className={'df-divide-bottom-1'} style={{color:df_color_divide_bottom_1}}>\n                                    {(divide_bottom_1=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_1=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_1=='df-slider-image-1' ) && \n                                <>\n                                {url &&\n                                <>\n                                <a href={bubiblock_link_slider_1} target={bubiblock_link_tab_slider_1} rel=\"noopener\">\n                                    <img src={url} alt={alt} className={'img-cap'} style={{objectFit:df_cover_img1,objectPosition:df_focalPoint_img_1+'% '+df_focalPoint_y_img_1+'%'}}/> \n                                {df_mask_slider_1 &&\n                                    <div className={'mask'} style={{backgroundColor:background_color_solid_mask_1,opacity:df_opacity_mask_1}}></div>\n                                }\n                                </a>\n                                </>\n                                } \n                                </>\n                            }\n                            {(df_slider_chose_1=='df-slider-color-1' ) && \n                                <>\n                                {df_background_gradient_slider_1 + df_background_color_slider_1 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{background:df_background_gradient_slider_1,backgroundColor: df_background_color_slider_1}}></div> \n                                    : \n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>  \n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-1'} >\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText.Content\n                                                className={ 'wp-block-bubiblock-slider-slider__title '+df_repeat_effectcaption1+' '+df_delay_effectcaption1+' '+df_speed_effectcaption1+' '+effectcaption1 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title1,fontSize:fontsizetitle1+'px',bottom:margin_bottom_caption1+'px'}}\n                                                value= { title1 }\n                                            />\n                                            <RichText.Content\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info '+df_repeat_effectinfo1+' '+df_delay_effectinfo1+' '+df_speed_effectinfo1+' '+effectinfo1}\n                                                tagName= \"p\"\n                                                value= { info1 }\n                                                style={{textAlign:alignment_info1,fontSize:fontsizeinfo1+'px',bottom:margin_bottom_info1+'px'}}\n                                            />\n                                            {button1 &&\n                                                <div className={'link-button-1 '+df_repeat_effectbutton1+' '+df_delay_effectbutton1+' '+df_speed_effectbutton1+' '+effectbutton1} style={{textAlign:alignment_button1,bottom:margin_bottom_button1+'px'}}>\n                                                    <button className={'button-slider '+df_background_color_transparent_link_button1} style={\n                                                        {\n                                                            paddingTop:padding_link_button1+'px',\n                                                            paddingBottom:padding_link_button1+'px',\n                                                            paddingLeft:padding_right_link_button1+'px',\n                                                            paddingRight:padding_right_link_button1+'px',\n                                                            borderTopLeftRadius: border_radius_top_left_link_button1+'px', \n                                                            borderTopRightRadius: border_radius_top_right_link_button1+'px',\n                                                            borderBottomLeftRadius: border_radius_bottom_left_link_button1+'px', \n                                                            borderBottomRightRadius: border_radius_bottom_right_link_button1+'px',\n                                                            border: border_size_link_button1+'px solid'+df_border_color_link_button1,\n                                                            backgroundColor:df_background_color_link_button1,\n                                                            background:df_background_color_link_button1,\n                                                        }\n                                                    }>\n                                                        <RichText.Content\n                                                            className={ 'wp-block-bubiblock-slider-slider__link' }\n                                                            tagName= \"p\"\n                                                            value= { button1 }\n                                                            style={{fontSize:fontsizebutton1+'px',color:df_color_link_button1}}\n                                                        />\n                                                    </button>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>  \n                            }\n                        </div>   \n                    \n                        <div className={'carousel-item '+df_effect_slider+' '+bubiblock_id_slider}> \n                            { df_enable_divide_2 &&\n                                <div className={'df-divide-2'} style={{color:df_color_divide_2}}>\n                                    {(divide_2=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_2=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_2=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_2=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_2 &&\n                                <div className={'df-divide-bottom-2'} style={{color:df_color_divide_bottom_2}}>\n                                    {(divide_bottom_2=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_2=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_2=='df-slider-image-2' ) &&\n                                <>\n                                {imageUrl_2 &&\n                                    <> \n                                    <a href={bubiblock_link_slider_2} target={bubiblock_link_tab_slider_2} rel=\"noopener\">\n                                        <img src={imageUrl_2} alt={alt2} className={'img-cap image-slider-2'} style={{objectFit:df_cover_img2,objectPosition:df_focalPoint_img_2+'% '+df_focalPoint_y_img_2+'%'}} />\n                                    {df_mask_slider_2 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_2,opacity:df_opacity_mask_2}}></div>\n                                    }\n                                    </a>\n                                    </>                 \n                                }\n                                </>\n                            }  \n                            {(df_slider_chose_2=='df-slider-color-2') && \n                                <>\n                                {df_background_color_slider_2 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_2}}></div> \n                                    : \n                                    <div className={'df-color-default-background-slider-2 bubiblock-color-slider-item'}></div>  \n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-2'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText.Content\n                                                className={ 'wp-block-bubiblock-slider-slider__title_2 '+df_repeat_effectcaption2+' '+df_delay_effectcaption2+' '+df_speed_effectcaption2+' '+effectcaption2 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title2,fontSize:fontsizetitle2+'px',bottom:margin_bottom_caption2+'px'}}\n                                                value= { title2 }\n                                            />\n                                            <RichText.Content\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_2 '+df_repeat_effectinfo2+' '+df_delay_effectinfo2+' '+df_speed_effectinfo2+' '+effectinfo2}\n                                                tagName= \"p\"\n                                                value= { info2 }\n                                                style={{textAlign:alignment_info2,fontSize:fontsizeinfo2+'px',bottom:margin_bottom_info2+'px'}}\n                                            />\n                                            {button2 &&\n                                                <div className={'link-button-2 '+df_repeat_effectbutton2+' '+df_delay_effectbutton2+' '+df_speed_effectbutton2+' '+effectbutton2} style={{textAlign:alignment_button2,bottom:margin_bottom_button2+'px'}}>\n                                                    <button className={'button-slider2 '+df_background_color_transparent_link_button2} style={\n                                                        {\n                                                            paddingTop:padding_link_button2+'px',\n                                                            paddingBottom:padding_link_button2+'px',\n                                                            paddingLeft:padding_right_link_button2+'px',\n                                                            paddingRight:padding_right_link_button2+'px',\n                                                            borderTopLeftRadius: border_radius_top_left_link_button2+'px', \n                                                            borderTopRightRadius: border_radius_top_right_link_button2+'px',\n                                                            borderBottomLeftRadius: border_radius_bottom_left_link_button2+'px', \n                                                            borderBottomRightRadius: border_radius_bottom_right_link_button2+'px',\n                                                            border: border_size_link_button2+'px solid'+df_border_color_link_button2,\n                                                            backgroundColor:df_background_color_link_button2,\n                                                            background:df_background_color_link_button2,\n                                                        }\n                                                    }\n                                                    >\n                                                        <RichText.Content\n                                                            className={ 'wp-block-bubiblock-slider-slider__link_2' }\n                                                            tagName= \"p\"\n                                                            value= { button2 }\n                                                            style={{fontSize:fontsizebutton2+'px',color:df_color_link_button2}}\n                                                        />\n                                                    </button>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div> \n\n                        {bubiblock_add_slider_3 && // Slider 3\n                        <div className={'carousel-item '+df_effect_slider}> \n                            { df_enable_divide_3 &&\n                                <div className={'df-divide-3'} style={{color:df_color_divide_3}}>\n                                    {(divide_3=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_3=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_3=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_3=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_3 &&\n                                <div className={'df-divide-bottom-3'} style={{color:df_color_divide_bottom_3}}>\n                                    {(divide_bottom_3=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_3=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_3=='df-slider-image-3' ) &&\n                                <>\n                                {imageUrl_3 &&\n                                    <> \n                                    <a href={bubiblock_link_slider_3} target={bubiblock_link_tab_slider_3} rel=\"noopener\">\n                                        <img src={imageUrl_3} alt={alt3} className={'img-cap image-slider-3'} style={{objectFit:df_cover_img3,objectPosition:df_focalPoint_img_3+'% '+df_focalPoint_y_img_3+'%'}} />\n                                    {df_mask_slider_3 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_3,opacity:df_opacity_mask_3}}></div>\n                                    }\n                                    </a>\n                                    </>                 \n                                }\n                                </>\n                            }  \n                            {(df_slider_chose_3=='df-slider-color-3') && \n                                <>\n                                {df_background_color_slider_3 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_3}}></div> \n                                    : \n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>  \n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-3'} >\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText.Content\n                                                className={ 'wp-block-bubiblock-slider-slider__title_3 '+df_repeat_effectcaption3+' '+df_delay_effectcaption3+' '+df_speed_effectcaption3+' '+effectcaption3 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title3,fontSize:fontsizetitle3+'px',bottom:margin_bottom_caption3+'px'}}\n                                                value= { title3 }\n                                            />\n                                            <RichText.Content\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_3 '+df_repeat_effectinfo3+' '+df_delay_effectinfo3+' '+df_speed_effectinfo3+' '+effectinfo3}\n                                                tagName= \"p\"\n                                                value= { info3 }\n                                                style={{textAlign:alignment_info3,fontSize:fontsizeinfo3+'px',bottom:margin_bottom_info3+'px'}}\n                                            />\n                                            {button3 &&\n                                                <div className={'link-button-3 '+df_repeat_effectbutton3+' '+df_delay_effectbutton3+' '+df_speed_effectbutton3+' '+effectbutton3} style={{textAlign:alignment_button3,bottom:margin_bottom_button3+'px'}}>\n                                                    <button className={'button-slider3 '+df_background_color_transparent_link_button3} style={\n                                                        {\n                                                            paddingTop:padding_link_button3+'px',\n                                                            paddingBottom:padding_link_button3+'px',\n                                                            paddingLeft:padding_right_link_button3+'px',\n                                                            paddingRight:padding_right_link_button3+'px',\n                                                            borderTopLeftRadius: border_radius_top_left_link_button3+'px', \n                                                            borderTopRightRadius: border_radius_top_right_link_button3+'px',\n                                                            borderBottomLeftRadius: border_radius_bottom_left_link_button3+'px', \n                                                            borderBottomRightRadius: border_radius_bottom_right_link_button3+'px',\n                                                            border: border_size_link_button3+'px solid'+df_border_color_link_button3,\n                                                            backgroundColor:df_background_color_link_button3,\n                                                            background:df_background_color_link_button3,\n                                                        }\n                                                    }\n                                                    >\n                                                        <RichText.Content\n                                                            className={ 'wp-block-bubiblock-slider-slider__link_3' }\n                                                            tagName= \"p\"\n                                                            value= { button3 }\n                                                            style={{fontSize:fontsizebutton3+'px',color:df_color_link_button3}}\n                                                        />\n                                                    </button>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div> \n                        }\n\n                        {bubiblock_add_slider_4 && // Slider 4\n                        <div className={'carousel-item '+df_effect_slider}> \n                            { df_enable_divide_4 &&\n                                <div className={'df-divide-4'} style={{color:df_color_divide_4}}>\n                                    {(divide_4=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_4=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_4=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_4=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_4 &&\n                                <div className={'df-divide-bottom-4'} style={{color:df_color_divide_bottom_4}}>\n                                    {(divide_bottom_4=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_4=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_4=='df-slider-image-4' ) &&\n                                <>\n                                {imageUrl_4 &&\n                                    <> \n                                    <a href={bubiblock_link_slider_4} target={bubiblock_link_tab_slider_4} rel=\"noopener\">\n                                        <img src={imageUrl_4} alt={alt4} className={'img-cap image-slider-4'} style={{objectFit:df_cover_img4,objectPosition:df_focalPoint_img_4+'% '+df_focalPoint_y_img_4+'%'}} />\n                                    {df_mask_slider_4 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_4,opacity:df_opacity_mask_4}}></div>\n                                    }\n                                    </a>\n                                    </>                 \n                                }\n                                </>\n                            }  \n                            {(df_slider_chose_4=='df-slider-color-4') && \n                                <>\n                                {df_background_color_slider_4 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_4}}></div> \n                                    : \n                                    <div className={'df-color-default-background-slider-2 bubiblock-color-slider-item'}></div>  \n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-4'}>\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText.Content\n                                                className={ 'wp-block-bubiblock-slider-slider__title_4 '+df_repeat_effectcaption4+' '+df_delay_effectcaption4+' '+df_speed_effectcaption4+' '+effectcaption4 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title4,fontSize:fontsizetitle4+'px',bottom:margin_bottom_caption4+'px'}}\n                                                value= { title4 }\n                                            />\n                                            <RichText.Content\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_4 '+df_repeat_effectinfo4+' '+df_delay_effectinfo4+' '+df_speed_effectinfo4+' '+effectinfo4}\n                                                tagName= \"p\"\n                                                value= { info4 }\n                                                style={{textAlign:alignment_info4,fontSize:fontsizeinfo4+'px',bottom:margin_bottom_info4+'px'}}\n                                            />\n                                            {button4 &&\n                                                <div className={'link-button-4 '+df_repeat_effectbutton4+' '+df_delay_effectbutton4+' '+df_speed_effectbutton4+' '+effectbutton4} style={{textAlign:alignment_button4,bottom:margin_bottom_button4+'px'}}>\n                                                    <button className={'button-slider4 '+df_background_color_transparent_link_button4} style={\n                                                        {\n                                                            paddingTop:padding_link_button4+'px',\n                                                            paddingBottom:padding_link_button4+'px',\n                                                            paddingLeft:padding_right_link_button4+'px',\n                                                            paddingRight:padding_right_link_button4+'px',\n                                                            borderTopLeftRadius: border_radius_top_left_link_button4+'px', \n                                                            borderTopRightRadius: border_radius_top_right_link_button4+'px',\n                                                            borderBottomLeftRadius: border_radius_bottom_left_link_button4+'px', \n                                                            borderBottomRightRadius: border_radius_bottom_right_link_button4+'px',\n                                                            border: border_size_link_button4+'px solid'+df_border_color_link_button4,\n                                                            backgroundColor:df_background_color_link_button4,\n                                                            background:df_background_color_link_button4,\n                                                        }\n                                                    }\n                                                    >\n                                                        <RichText.Content\n                                                            className={ 'wp-block-bubiblock-slider-slider__link_4' }\n                                                            tagName= \"p\"\n                                                            value= { button4 }\n                                                            style={{fontSize:fontsizebutton4+'px',color:df_color_link_button4}}\n                                                        />\n                                                    </button>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div> \n                        }\n                        {bubiblock_add_slider_5 && // Slider 5\n                        <div className={'carousel-item '+df_effect_slider}> \n                            { df_enable_divide_5 &&\n                                <div className={'df-divide-5'} style={{color:df_color_divide_5}}>\n                                    {(divide_5=='svg-1' ) &&\n                                        <svg className={'df-flip'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_5=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_5=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_5=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            { df_enable_divide_bottom_5 &&\n                                <div className={'df-divide-bottom-5'} style={{color:df_color_divide_bottom_5}}>\n                                    {(divide_bottom_5=='svg-1' ) &&\n                                        <svg className={'df-flip-bottom'} viewBox=\"0 0 1000 100\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M1000,40c0,0 -120.077,-38.076 -250,-38c-129.923,0.076 -345.105,78 -500,78c-154.895,0 -250,-30 -250,-30l0,50l1000,0l0,-60Z\"></path></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-2' ) &&\n                                        <svg viewBox=\"0 0 500 65\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><polygon points=\"500 0 0 0 0 65 250 25 500 65 500 0\"/></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-3' ) &&\n                                        <svg viewBox=\"0 0 500 81\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><path d=\"M0,45.68C59,60,146,81.07,250,81c103-.07,192-19,250-35.32V0H0Z\" transform=\"translate(0 0)\"/></svg>\n                                    }\n                                    {(divide_bottom_5=='svg-4' ) &&\n                                        <svg viewBox=\"0 0 500 46.42\" height=\"100%\" width=\"100%\" preserveAspectRatio=\"none\"><g><path d=\"M500,22.64s-194.23,1.13-213,5.44c-34.74,8-37,18.34-37,18.34s-2-11.25-30.5-18.24C198.56,23.05,0,22.64,0,22.64V0H500Z\"/></g></svg>\n                                    }\n                                </div>\n                            }\n                            {(df_slider_chose_5=='df-slider-image-5' ) &&\n                                <>\n                                {imageUrl_5 &&\n                                    <> \n                                    <a href={bubiblock_link_slider_5} target={bubiblock_link_tab_slider_5} rel=\"noopener\">\n                                        <img src={imageUrl_5} alt={alt5} className={'img-cap image-slider-5'} style={{objectFit:df_cover_img5,objectPosition:df_focalPoint_img_5+'% '+df_focalPoint_y_img_5+'%'}} />\n                                    {df_mask_slider_5 &&\n                                        <div className={'mask'} style={{backgroundColor:background_color_solid_mask_5,opacity:df_opacity_mask_5}}></div>\n                                    }\n                                    </a>\n                                    </>                 \n                                }\n                                </>\n                            }  \n                            {(df_slider_chose_5=='df-slider-color-5') && \n                                <>\n                                {df_background_color_slider_5 ?\n                                    <div className={'df-slider-color bubiblock-color-slider-item'} style={{backgroundColor: df_background_color_slider_5}}></div> \n                                    : \n                                    <div className={'df-color-default-background-slider bubiblock-color-slider-item'}></div>  \n                                }\n                                </>\n                            }\n                            {(bubi_block_content_slider == 'bubiblock-content-slider') ==! (bubi_block_content_slider =='bubiblock-blockcontent-slider') &&\n                                <div className={'carousel-caption caption-5'} >\n                                    <div className={'bubiblock-slider-row'}>\n                                        <div className={'bubiblock-col-md-8'}>\n                                            <RichText.Content\n                                                className={ 'wp-block-bubiblock-slider-slider__title_5 '+df_repeat_effectcaption5+' '+df_delay_effectcaption5+' '+df_speed_effectcaption5+' '+effectcaption5 }\n                                                tagName= \"h4\"\n                                                style={{textAlign:alignment_title5,fontSize:fontsizetitle5+'px',bottom:margin_bottom_caption5+'px'}}\n                                                value= { title5 }\n                                            />\n                                            <RichText.Content\n                                                className={ 'bubiblock-p-capt wp-block-bubiblock-slider-slider__info_5 '+df_repeat_effectinfo5+' '+df_delay_effectinfo5+' '+df_speed_effectinfo5+' '+effectinfo5}\n                                                tagName= \"p\"\n                                                value= { info5 }\n                                                style={{textAlign:alignment_info5,fontSize:fontsizeinfo5+'px',bottom:margin_bottom_info5+'px'}}\n                                            />\n                                            {button5 &&\n                                                <div className={'link-button-5 '+df_repeat_effectbutton5+' '+df_delay_effectbutton5+' '+df_speed_effectbutton5+' '+effectbutton5} style={{textAlign:alignment_button5,bottom:margin_bottom_button5+'px'}}>\n                                                    <button className={'button-slider5 '+df_background_color_transparent_link_button5} style={\n                                                        {\n                                                            paddingTop:padding_link_button5+'px',\n                                                            paddingBottom:padding_link_button5+'px',\n                                                            paddingLeft:padding_right_link_button5+'px',\n                                                            paddingRight:padding_right_link_button5+'px',\n                                                            borderTopLeftRadius: border_radius_top_left_link_button5+'px', \n                                                            borderTopRightRadius: border_radius_top_right_link_button5+'px',\n                                                            borderBottomLeftRadius: border_radius_bottom_left_link_button5+'px', \n                                                            borderBottomRightRadius: border_radius_bottom_right_link_button5+'px',\n                                                            border: border_size_link_button5+'px solid'+df_border_color_link_button5,\n                                                            backgroundColor:df_background_color_link_button5,\n                                                            background:df_background_color_link_button5,\n                                                        }\n                                                    }\n                                                    >\n                                                        <RichText.Content\n                                                            className={ 'wp-block-bubiblock-slider-slider__link_5' }\n                                                            tagName= \"p\"\n                                                            value= { button5 }\n                                                            style={{fontSize:fontsizebutton5+'px',color:df_color_link_button5}}\n                                                        />\n                                                    </button>\n                                                </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </div> \n                        }\n                    </div> \n                    <a className={'carousel-control-prev df-carousel-control-prev bubi-img-3 '+bubi_arrow_position+' '+df_arrow_slider+' '+df_arrow_slider_table+' '+df_arrow_slider_mobile} type=\"button\" data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide=\"prev\" style={{left:bubi_marginarrow+'px',opacity: bubiopacityarrow}}>\n                        <i className={'bubi-icon '+df_arrow_slider_type} style={{color:df_color_arrow,padding:df_padding_arrow,borderRadius:df_radius_arrow,fontSize:df_size_arrow}} aria-hidden=\"true\"></i>\n                    </a>\n                    <a className={'carousel-control-next df-carousel-control-next bubi-img-3 '+bubi_arrow_position+' '+df_arrow_slider+' '+df_arrow_slider_table+' '+df_arrow_slider_mobile} type=\"button\" data-target={'#carouselDFControlslider'+bubiblock_id_slider} data-slide=\"next\" style={{right:bubi_marginarrow+'px',opacity: bubiopacityarrow}}>\n                        <i className={'bubi-icon '+df_arrow_slider_type} style={{color:df_color_arrow,padding:df_padding_arrow,borderRadius:df_radius_arrow,fontSize:df_size_arrow}} aria-hidden=\"true\"></i>\n                    </a>  \n                <style>\n                    {`\n                        #carouselDFControlslider`+bubiblock_id_slider+`{\n                            padding-left:`+bubiblock_padding_slider+`px;\n                            padding-right:`+bubiblock_padding_slider+`px;\n                            padding-top:`+bubiblock_padding_b_slider+`px;\n                            padding-bottom:`+bubiblock_padding_b_slider+`px;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption{\n                            margin-left:`+bubiblock_padding_caption+`px;\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption{\n                                margin-left:`+bubiblock_padding_table_caption+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+`{\n                                padding-left:`+bubiblock_padding_table_slider+`px;\n                                padding-right:`+bubiblock_padding_table_slider+`px;\n                                padding-top:`+bubiblock_padding_b_table_slider+`px;\n                                padding-bottom:`+bubiblock_padding_b_table_slider+`px;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption{\n                                margin-left:`+bubiblock_padding_mobile_caption+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+`{\n                                padding-left:`+bubiblock_padding_mobile_slider+`px;\n                                padding-right:`+bubiblock_padding_mobile_slider+`px;\n                                padding-top:`+bubiblock_padding_b_mobile_slider+`px;\n                                padding-bottom:`+bubiblock_padding_b_mobile_slider+`px;\n                            }\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_desktopfalse{\n                            display:none;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_desktoptrue{\n                            display:block;\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_tablefalse{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_tabletrue{\n                                display:block;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_mobilefalse{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df_height_carousel_block.bubiblock_on_slider_mobiletrue{\n                                display:block;\n                            }\n                        }\n                    `}\n                    {bubiblock_display_button_table_caption !=1 &&\n                        <>\n                        {`\n                            @media only screen and (max-width: 767px){\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption button{\n                                   display:none;\n                                }\n                            }\n                        `}\n                        </>\n                    }\n                    {bubiblock_display_button_table_caption !=0 &&\n                        <>\n                        {`\n                            @media only screen and (max-width: 767px){\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption button{\n                                   display:initial;\n                                }\n                            }\n                        `}\n                        </>\n                    }\n                    {bubiblock_display_button_mobile_caption !=1 &&\n                        <>\n                        {`\n                            @media only screen and (max-width: 480px){\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption button{\n                                   display:none;\n                                }\n                            }\n                        `}\n                        </>\n                    }\n                    {bubiblock_display_button_mobile_caption !=0 &&\n                        <>\n                        {`\n                            @media only screen and (max-width: 480px){\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-caption button{\n                                   display:initial;\n                                }\n                            }\n                        `}\n                        </>\n                    }\n                    {df_height_slider_auto !=0 &&\n                        <>\n                            {`\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active{\n                                    height:auto!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active img.img-cap{\n                                    min-height:auto!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active video{\n                                    min-height:auto!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item{\n                                    height:auto!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item img.img-cap{\n                                    min-height:auto!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item video{\n                                    min-height:auto!important;\n                                }\n                            `}\n                        </>\n                    }\n                    {df_height_slider_auto !=1 &&\n                        <>\n                            {`\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active,.bubiblock-color-slider-item{\n                                    height:`+height_slider+`px!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active img.img-cap{\n                                    min-height:`+height_slider+`px!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active video{\n                                    min-height:`+height_slider+`px!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item{\n                                    height:`+height_slider+`px!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item img.img-cap{\n                                    min-height:`+height_slider+`px!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item video{\n                                    min-height:`+height_slider+`px!important;\n                                }\n                                @media only screen and (max-width: 767px){\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active{\n                                        height:`+height_slider_table+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one.active img.img-cap{\n                                    min-height:`+height_slider_table+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one.active video{\n                                    min-height:`+height_slider_table+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one{\n                                    height:`+height_slider_table+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one img.img-cap{\n                                    min-height:`+height_slider_table+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one video{\n                                    min-height:`+height_slider_table+`px!important;\n                                    }\n                                }\n                                @media only screen and (max-width: 480px){\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active{\n                                    height:`+height_slider_mobile+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one.active img.img-cap{\n                                    min-height:`+height_slider_mobile+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.one.active video{\n                                    min-height:`+height_slider_mobile+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item{\n                                    height:`+height_slider_mobile+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item img.img-cap{\n                                    min-height:`+height_slider_mobile+`px!important;\n                                    }\n                                    #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item video{\n                                    min-height:`+height_slider_mobile+`px!important;\n                                    }\n                                }\n                            `}\n                        </>\n                    }\n                    {bubiblock_full_slider !=0 &&\n                    <>\n                        {`\n                        #carouselDFControlslider`+bubiblock_id_slider+`{\n                            width: 100vw;\n                            max-width: initial;\n                            position: relative;\n                            left: 50%;\n                            right: 50%;\n                            margin-left: -50vw;\n                            margin-right: -50vw\n                        }\n                        `}\n                    </>\n                    }                                                                                                                                                           \n                    { bubiblock_height_dot_active_enable &&\n                        <>\n                        {`\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-indicators li.active::after{\n                            height:`+bubiblock_height_dot_active+`px;\n                            background-color:`+df_color_dot+`;\n                        }\n                        `}\n                        </>\n                    }\n                    {`\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-indicators.difftrue li.active::after{\n                            height:`+bubiblock_height_dot_active+`px;\n                            width: 100%;\n                            position: absolute; \n                            transition: height .25s ease-in-out;\n                            bottom: 0;\n                            background-color:`+df_color_dot+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-indicators.difftrue li{\n                            transition:height .25s ease-in-out;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-indicators.progtrue li.active::after{\n                            width: 100%!important;\n                            transition: width `+df_interval_slider+`ms ease-out;\n                            top: 0;\n                            height:`+df_height_dot+`px;\n                            background-color:`+df_color_progress_dot+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-indicators.progtrue li::after{\n                            width:0!important;\n                            transition: width `+df_interval_slider+`ms ease-in;\n                            position: absolute;\n                            top: 0; \n                            height:`+df_height_dot+`px;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .bubiblock-block{\n                            padding-left:`+bubiblock_padding_block_slider+`px;\n                            padding-right:`+bubiblock_padding_block_slider+`px;\n                            padding-top:`+bubiblock_padding_b_block_slider+`px;\n                            padding-bottom:`+bubiblock_padding_b_block_slider+`px;\n                        }\n                        `}\n                        { bubiblock_typography_custom &&\n                        <>\n                        {`\n                        #carouselDFControlslider`+bubiblock_id_slider+` h4{\n                            font-family:`+bubiblcok_fontfamily+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` h4{\n                            font-weight:`+bubiblcok_fontfamily_weight+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` h4{\n                            line-height:`+bubiblock_line_height_title+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` p{\n                            font-family:`+bubiblcok_fontfamily_descritpion+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` p{\n                            font-weight:`+bubiblcok_fontfamily_weight_description+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` p.bubiblock-p-capt{\n                            line-height:`+bubiblock_line_height_info+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` button p{\n                            font-family:`+bubiblcok_fontfamily_button+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` button p{\n                            font-weight:`+bubiblcok_fontfamily_weight_button+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` button a{\n                            font-family:`+bubiblcok_fontfamily_button+`;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` button a{\n                            font-weight:`+bubiblcok_fontfamily_weight_button+`;\n                        }\n                        `}\n                        </>\n                        }\n                        {`\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item img.img-cap,#carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .bubiblock-color-slider-item,#carouselDFControlslider`+bubiblock_id_slider+` .carousel-item video,#carouselDFControlslider`+bubiblock_id_slider+`,#carouselDFControlslider`+bubiblock_id_slider+` .carousel-item iframe{\n                            border-radius:`+bubiblock_radius_slider+`%;\n                        }\n                        .carousel-control-next.df-carousel-control-next:hover,.carousel-control-prev.df-carousel-control-prev:hover{\n                            opacity: `+bubiopacityhoverarrow+`!important;\n                        }                        \n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-prev i,#carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-next i{\n                                font-size:`+df_size_arrow_table+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .bubiblock-block{\n                                padding-left:`+bubiblock_padding_block_slider_table+`px;\n                                padding-right:`+bubiblock_padding_block_slider_table+`px;\n                                padding-top:`+bubiblock_padding_b_block_slider_table+`px;\n                                padding-bottom:`+bubiblock_padding_b_block_slider_table+`px;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-prev i,.df-carousel-control-next i{\n                                font-size:`+df_size_arrow_mobile+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .bubiblock-block{\n                                padding-left:`+bubiblock_padding_block_slider_mobile+`px;\n                                padding-right:`+bubiblock_padding_block_slider_mobile+`px;\n                                padding-top:`+bubiblock_padding_b_block_slider_mobile+`px;\n                                padding-bottom:`+bubiblock_padding_b_block_slider_mobile+`px;\n                            }\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title{\n                                bottom:`+ margin_bottom_table_caption1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info{\n                                bottom:`+ margin_bottom_table_info1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1{\n                                bottom:`+ margin_bottom_table_button1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title{\n                                font-size:`+fontsizetitle1table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info{\n                                font-size:`+fontsizeinfo1table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider p{\n                                font-size:`+fontsizebutton1table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_2{\n                                bottom:`+ margin_bottom_table_caption2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_2{\n                                bottom:`+ margin_bottom_table_info2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2{\n                                bottom:`+ margin_bottom_table_button2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_2{\n                                font-size:`+fontsizetitle2table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_2{\n                                font-size:`+fontsizeinfo2table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider2 p{\n                                font-size:`+fontsizebutton2table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_3{\n                                bottom:`+ margin_bottom_table_caption3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_3{\n                                bottom:`+ margin_bottom_table_info3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3{\n                                bottom:`+ margin_bottom_table_button3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_3{\n                                font-size:`+fontsizetitle3table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_3{\n                                font-size:`+fontsizeinfo3table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider3 p{\n                                font-size:`+fontsizebutton3table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_4{\n                                bottom:`+ margin_bottom_table_caption4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_4{\n                                bottom:`+ margin_bottom_table_info4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4{\n                                bottom:`+ margin_bottom_table_button4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_4{\n                                font-size:`+fontsizetitle4table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_4{\n                                font-size:`+fontsizeinfo4table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider4 p{\n                                font-size:`+fontsizebutton4table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_5{\n                                bottom:`+ margin_bottom_table_caption5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_5{\n                                bottom:`+ margin_bottom_table_info5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5{\n                                bottom:`+ margin_bottom_table_button5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_5{\n                                font-size:`+fontsizetitle5table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_5{\n                                font-size:`+fontsizeinfo5table +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider5 p{\n                                font-size:`+fontsizebutton5table +`px!important;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title{\n                                bottom:`+ margin_bottom_mobile_caption1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info{\n                                bottom:`+ margin_bottom_mobile_info1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1{\n                                bottom:`+ margin_bottom_mobile_button1+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title{\n                                font-size:`+fontsizetitle1mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info{\n                                font-size:`+fontsizeinfo1mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider p{\n                                font-size:`+fontsizebutton1mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_2{\n                                bottom:`+ margin_bottom_mobile_caption2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_2{\n                                bottom:`+ margin_bottom_mobile_info2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2{\n                                bottom:`+ margin_bottom_mobile_button2+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_2{\n                                font-size:`+fontsizetitle2mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_2{\n                                font-size:`+fontsizeinfo2mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider2 p{\n                                font-size:`+fontsizebutton2mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_3{\n                                bottom:`+ margin_bottom_mobile_caption3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_3{\n                                bottom:`+ margin_bottom_mobile_info3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3{\n                                bottom:`+ margin_bottom_mobile_button3+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_3{\n                                font-size:`+fontsizetitle3mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_3{\n                                font-size:`+fontsizeinfo3mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider3 p{\n                                font-size:`+fontsizebutton3mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_4{\n                                bottom:`+ margin_bottom_mobile_caption4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_4{\n                                bottom:`+ margin_bottom_mobile_info4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4{\n                                bottom:`+ margin_bottom_mobile_button4+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_4{\n                                font-size:`+fontsizetitle4mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_4{\n                                font-size:`+fontsizeinfo4mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider4 p{\n                                font-size:`+fontsizebutton4mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_5{\n                                bottom:`+ margin_bottom_mobile_caption5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_5{\n                                bottom:`+ margin_bottom_mobile_info5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5{\n                                bottom:`+ margin_bottom_mobile_button5+`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` h4.wp-block-bubiblock-slider-slider__title_5{\n                                font-size:`+fontsizetitle5mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` p.wp-block-bubiblock-slider-slider__info_5{\n                                font-size:`+fontsizeinfo5mobile +`px!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .button-slider5 p{\n                                font-size:`+fontsizebutton5mobile +`px!important;\n                            }\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.bubiblock-flip{\n                            transition: `+bubiblock_speed_flip_slider+`s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n                            -webkit-transition: `+bubiblock_speed_flip_slider+`s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n                            transform-style: preserve-3d;\n                            -webkit-style: preserve-3d;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-prev.df-arrow-false{\n                            display:none;\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-next.df-arrow-false{\n                            display:none;\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-prev.df-arrow-table-false{\n                            display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-next.df-arrow-table-false{\n                            display:none;\n                            }\n                        }\n                    \n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-prev.df-arrow-mobile-false{\n                            display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-carousel-control-next.df-arrow-mobile-false{\n                            display:none;\n                            }\n                        }\n                        #carouselDFControlslider`+bubiblock_id_slider+` .df-dot-false.carousel-indicators{\n                            display:none;\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-dot-table-false.carousel-indicators{\n                            display:none;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-dot-mobile-false.carousel-indicators{\n                            display:none!important;\n                            }\n                        }\n                        @media only screen and (max-width: 767px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title.df-caption-table-false,.wp-block-bubiblock-slider-slider__info.df-caption-table-false,.link-button-1.df-caption-table-false{\n                            display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-1{\n                                height:`+df_height_table_divide_1 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-bottom-1{\n                                height:`+df_height_table_divide_bottom_1 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_2.df-caption-table-false,.wp-block-bubiblock-slider-slider__info_2.df-caption-table-false,.link-button-2.df-caption-table-false{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-2{\n                                height:`+df_height_table_divide_2 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-bottom-2{\n                                height:`+df_height_table_divide_bottom_2 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_3.df-caption-table-false,.wp-block-bubiblock-slider-slider__info_3.df-caption-table-false,.link-button-3.df-caption-table-false{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-3{\n                                height:`+df_height_table_divide_3 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-bottom-3{\n                                height:`+df_height_table_divide_bottom_3 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_4.df-caption-table-false,.wp-block-bubiblock-slider-slider__info_4.df-caption-table-false,.link-button-4.df-caption-table-false{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-4{\n                                height:`+df_height_table_divide_4 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-bottom-4{\n                                height:`+df_height_table_divide_bottom_4 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_5.df-caption-table-false,.wp-block-bubiblock-slider-slider__info_5.df-caption-table-false,.link-button-5.df-caption-table-false{\n                                display:none;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-5{\n                                height:`+df_height_table_divide_5 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item .df-divide-bottom-5{\n                                height:`+df_height_table_divide_bottom_5 +`px;\n                            }\n                        }\n                        @media only screen and (max-width: 480px){\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title.df-caption-mobile-false,.wp-block-bubiblock-slider-slider__info.df-caption-mobile-false,.link-button-1.df-caption-mobile-false{\n                            display:none!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-1{\n                                height:`+df_height_mobile_divide_1 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-bottom-1{\n                                height:`+df_height_mobile_divide_bottom_1 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_2.df-caption-mobile-false,.wp-block-bubiblock-slider-slider__info_2.df-caption-mobile-false,.link-button-2.df-caption-mobile-false{\n                                display:none!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-2{\n                                height:`+df_height_mobile_divide_2 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-bottom-2{\n                                height:`+df_height_mobile_divide_bottom_2 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_3.df-caption-mobile-false,.wp-block-bubiblock-slider-slider__info_3.df-caption-mobile-false,.link-button-3.df-caption-mobile-false{\n                                display:none!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-3{\n                                    height:`+df_height_mobile_divide_3 +`px;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-bottom-3{\n                                    height:`+df_height_mobile_divide_bottom_3 +`px;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_4.df-caption-mobile-false,.wp-block-bubiblock-slider-slider__info_4.df-caption-mobile-false,.link-button-4.df-caption-mobile-false{\n                                    display:none!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-4{\n                                    height:`+df_height_mobile_divide_4 +`px;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-bottom-4{\n                                    height:`+df_height_mobile_divide_bottom_4 +`px;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .wp-block-bubiblock-slider-slider__title_5.df-caption-mobile-false,.wp-block-bubiblock-slider-slider__info_5.df-caption-mobile-false,.link-button-5.df-caption-mobile-false{\n                                    display:none!important;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-5{\n                                    height:`+df_height_mobile_divide_5 +`px;\n                                }\n                                #carouselDFControlslider`+bubiblock_id_slider+` .carousel-inner .carousel-item .df-divide-bottom-5{\n                                    height:`+df_height_mobile_divide_bottom_5 +`px;\n                                }\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider:hover{\n                                background-color:`+df_background_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider:hover{\n                                background:`+df_background_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider:hover p{\n                                color:`+df_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider:hover span{\n                                color:`+df_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider:hover a{\n                                color:`+df_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 a{\n                                color:`+df_color_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 span{\n                                color:`+df_color_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 a{\n                                color:`+df_color_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 span{\n                                color:`+df_color_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 a{\n                                color:`+df_color_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 span{\n                                color:`+df_color_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 a{\n                                color:`+df_color_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 span{\n                                color:`+df_color_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 a{\n                                color:`+df_color_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 span{\n                                color:`+df_color_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 button.button-slider.df-trasparent-color-button1-true{\n                                background-color:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 button.button-slider.df-trasparent-color-button1-true{\n                                background:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 button.button-slider.df-trasparent-color-button1-true{\n                                background-image:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-1 button.button-slider.df-trasparent-color-button1-true:hover{\n                                background-color:`+df_background_color_hover_link_button1 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-1{\n                                height:`+df_height_divide_1 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-1{\n                                transition: max-height `+bubiblock_dalay_divide_1+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-1{\n                                transition: max-height `+bubiblock_dalay_divide_1+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-1{\n                                height:`+df_height_divide_bottom_1+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-bottom-1{\n                                transition: max-height `+bubiblock_dalay_divide_1_bottom+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-1{\n                                transition: max-height `+bubiblock_dalay_divide_1_bottom+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider2:hover{\n                                background-color:`+df_background_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider2:hover{\n                                background:`+df_background_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider2:hover p{\n                                color:`+df_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider2:hover span{\n                                color:`+df_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider2:hover a{\n                                color:`+df_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 button.button-slider2.df-trasparent-color-button2-true{\n                                background-color:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 button.button-slider2.df-trasparent-color-button2-true{\n                                background-image:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 button.button-slider2.df-trasparent-color-button2-true{\n                                background:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-2 button.button-slider2.df-trasparent-color-button2-true:hover{\n                                background-color:`+df_background_color_hover_link_button2 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-2{\n                                height:`+df_height_divide_2 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-2{\n                                transition: max-height `+bubiblock_dalay_divide_2+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-2{\n                                transition: max-height `+bubiblock_dalay_divide_2+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-2{\n                                height:`+df_height_divide_bottom_2+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-bottom-2{\n                                transition: max-height `+bubiblock_dalay_divide_2_bottom+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-2{\n                                transition: max-height `+bubiblock_dalay_divide_2_bottom+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider3:hover{\n                                background-color:`+df_background_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider3:hover{\n                                background:`+df_background_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider3:hover p{\n                                color:`+df_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider3:hover span{\n                                color:`+df_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider3:hover a{\n                                color:`+df_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 button.button-slider3.df-trasparent-color-button3-true{\n                                background-color:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 button.button-slider3.df-trasparent-color-button3-true{\n                                background-image:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 button.button-slider3.df-trasparent-color-button3-true{\n                                background:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-3 button.button-slider3.df-trasparent-color-button3-true:hover{\n                                background-color:`+df_background_color_hover_link_button3 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-3{\n                                height:`+df_height_divide_3 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-3{\n                                transition: max-height `+bubiblock_dalay_divide_3+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-3{\n                                transition: max-height `+bubiblock_dalay_divide_3+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-3{\n                                height:`+df_height_divide_bottom_3+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-bottom-3{\n                                transition: max-height `+bubiblock_dalay_divide_3_bottom+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-3{\n                                transition: max-height `+bubiblock_dalay_divide_3_bottom+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider4:hover{\n                                background-color:`+df_background_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider4:hover{\n                                background:`+df_background_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slide4:hover p{\n                                color:`+df_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider4:hover span{\n                                color:`+df_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider4:hover a{\n                                color:`+df_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 button.button-slider4.df-trasparent-color-button4-true{\n                                background-color:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 button.button-slider4.df-trasparent-color-button4-true{\n                                background-image:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 button.button-slider4.df-trasparent-color-button4-true{\n                                background:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-4 button.button-slider4.df-trasparent-color-button4-true:hover{\n                                background-color:`+df_background_color_hover_link_button4 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-4{\n                                height:`+df_height_divide_4 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-4{\n                                transition: max-height `+bubiblock_dalay_divide_4+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-4{\n                                transition: max-height `+bubiblock_dalay_divide_4+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-4{\n                                height:`+df_height_divide_bottom_4+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-bottom-4{\n                                transition: max-height `+bubiblock_dalay_divide_4_bottom+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-4{\n                                transition: max-height `+bubiblock_dalay_divide_4_bottom+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider5:hover{\n                                background-color:`+df_background_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider5:hover{\n                                background:`+df_background_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slide5:hover p{\n                                color:`+df_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider5:hover span{\n                                color:`+df_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` button.button-slider5:hover a{\n                                color:`+df_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 button.button-slider5.df-trasparent-color-button5-true{\n                                background-color:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 button.button-slider5.df-trasparent-color-button5-true{\n                                background-image:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 button.button-slider5.df-trasparent-color-button5-true{\n                                background:transparent!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .link-button-5 button.button-slider5.df-trasparent-color-button5-true:hover{\n                                background-color:`+df_background_color_hover_link_button5 +`!important;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-5{\n                                height:`+df_height_divide_5 +`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-5{\n                                transition: max-height `+bubiblock_dalay_divide_5+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-5{\n                                transition: max-height `+bubiblock_dalay_divide_5+`s ease-out;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-5{\n                                height:`+df_height_divide_bottom_5+`px;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .carousel-item.active .df-divide-bottom-5{\n                                transition: max-height `+bubiblock_dalay_divide_5_bottom+`s ease-in;\n                            }\n                            #carouselDFControlslider`+bubiblock_id_slider+` .df-divide-bottom-5{\n                                transition: max-height `+bubiblock_dalay_divide_5_bottom+`s ease-out;\n                            }\n                    `}\n                </style>\n            </div>\n        )\n    },\n     //Preview\n\texample: () => {\n    }, \n    edit\n});","// extracted by mini-css-extract-plugin","import './blocks/slider';","module.exports = wp[\"blob\"];","module.exports = wp[\"blockEditor\"];","module.exports = wp[\"blocks\"];","module.exports = wp[\"components\"];","module.exports = wp[\"data\"];","module.exports = wp[\"date\"];","module.exports = wp[\"element\"];","module.exports = wp[\"i18n\"];"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAsBA;AA0CA;AAUA;AAy5BA;AA0dA;AAUA;AAIA;AAIA;AAcA;AAyCA;AAIA;AAaA;AAQA;AAGA;AAEA;AAaA;AACA;AAWA;AAKA;AAsBA;AAMA;AAOA;AACA;AAWA;AAKA;AAqBA;AAMA;AAOA;AACA;AAWA;AAKA;AAqBA;AAMA;AAOA;AACA;AAWA;AAKA;AAqBA;AAMA;AAOA;AACA;AAWA;AAKA;AAqBA;AAMA;AAOA;AAiBA;AA4bA;AAmnBA;AA0LA;AA6EA;AA4VA;AAiLA;AA8pDA;AA6qDA;AA+qDA;AA+qDA;AAm6DA;AAuHA;AAsHA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvpodgBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgiBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA03BA;AACA;AACA;AAEA;AA74DA;;;;;;;;;;;ACh3DA;;;;;;;;;;;;ACAA;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}